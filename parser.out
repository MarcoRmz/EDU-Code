Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> START programa1 programa2 main END
Rule 2     programa1 -> var_declaracion programa1
Rule 3     programa1 -> epsilon
Rule 4     programa2 -> funcion programa2
Rule 5     programa2 -> epsilon
Rule 6     var_declaracion -> tipo var_declaracion1
Rule 7     var_declaracion -> VECTOR tipo var_declaracion2
Rule 8     var_declaracion1 -> ID
Rule 9     var_declaracion1 -> inicializacion
Rule 10    var_declaracion2 -> ID
Rule 11    var_declaracion2 -> inicializacion_vector
Rule 12    parametros -> tipo parametros1 ID parametros2
Rule 13    parametros -> VECTOR tipo parametros1 ID parametros2
Rule 14    parametros1 -> AMPERSON
Rule 15    parametros1 -> epsilon
Rule 16    parametros2 -> COMMA parametros
Rule 17    parametros2 -> epsilon
Rule 18    inicializacion -> ID EQUALS exp
Rule 19    tipo -> INT
Rule 20    tipo -> FLOAT
Rule 21    tipo -> BOOL
Rule 22    tipo -> STRING
Rule 23    bloque -> LCURL estatuto bloque1 RCURL
Rule 24    bloque1 -> estatuto bloque1
Rule 25    bloque1 -> epsilon
Rule 26    exp -> termino exp1
Rule 27    exp1 -> PLUS exp
Rule 28    exp1 -> MINUS exp
Rule 29    exp1 -> epsilon
Rule 30    termino -> factor termino1
Rule 31    termino1 -> TIMES termino
Rule 32    termino1 -> DIVIDE termino
Rule 33    termino1 -> epsilon
Rule 34    inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET
Rule 35    inicializacion_vector1 -> varcte inicializacion_vector2
Rule 36    inicializacion_vector1 -> epsilon
Rule 37    inicializacion_vector2 -> COMMA varcte inicializacion_vector2
Rule 38    inicializacion_vector2 -> epsilon
Rule 39    main -> MAIN LCURL main1 estatuto main2 RCURL
Rule 40    main1 -> var_declaracion main1
Rule 41    main1 -> epsilon
Rule 42    main2 -> estatuto main2
Rule 43    main2 -> epsilon
Rule 44    while -> WHILE LPAREN expresion RPAREN bloque
Rule 45    factor -> LPAREN expresion RPAREN
Rule 46    factor -> factor1 varcte
Rule 47    factor1 -> PLUS varcte
Rule 48    factor1 -> MINUS varcte
Rule 49    factor1 -> epsilon
Rule 50    estatuto -> inicializacion
Rule 51    estatuto -> llamada
Rule 52    estatuto -> print
Rule 53    estatuto -> input
Rule 54    estatuto -> condicion
Rule 55    estatuto -> switch
Rule 56    estatuto -> while
Rule 57    estatuto -> for
Rule 58    expresion -> expresion1
Rule 59    expresion1 -> epsilon
Rule 60    expresion1 -> expresion2 exp
Rule 61    expresion2 -> LESS
Rule 62    expresion2 -> GREATER
Rule 63    expresion2 -> DOUBLE_EQUAL
Rule 64    expresion2 -> DIFF
Rule 65    expresion_logica -> exp expresion_logica1 expresion
Rule 66    expresion_logica1 -> AND exp
Rule 67    expresion_logica1 -> epsilon
Rule 68    expresion_logica1 -> OR exp
Rule 69    llamada -> ID LPAREN llamada1 RPAREN
Rule 70    llamada1 -> epsilon
Rule 71    llamada1 -> exp llamada2
Rule 72    llamada2 -> epsilon
Rule 73    llamada2 -> COMMA exp llamada2
Rule 74    varcte -> ID varcte1
Rule 75    varcte -> CTE_INT
Rule 76    varcte -> CTE_FLOAT
Rule 77    varcte -> CTE_STRING
Rule 78    varcte -> cte_bool
Rule 79    varcte1 -> epsilon
Rule 80    varcte1 -> LPAREN exp varcte2 RPAREN
Rule 81    varcte1 -> LBRACKET exp RBRACKET
Rule 82    varcte2 -> epsilon
Rule 83    varcte2 -> COMMA exp varcte2
Rule 84    cte_bool -> TRUE
Rule 85    cte_bool -> FALSE
Rule 86    print -> PRINT LPAREN print1 RPAREN
Rule 87    print1 -> CTE_STRING print2
Rule 88    print1 -> ID print2
Rule 89    print2 -> epsilon
Rule 90    print2 -> PLUS print1
Rule 91    condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
Rule 92    condicion1 -> bloque
Rule 93    condicion1 -> LCURL bloque RCURL
Rule 94    condicion2 -> ELSEIF condicion1 condicion2
Rule 95    condicion2 -> epsilon
Rule 96    condicion3 -> ELSE condicion1
Rule 97    condicion3 -> epsilon
Rule 98    input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN
Rule 99    input -> ID EQUALS INPUT LPAREN input1 RPAREN
Rule 100   input1 -> CTE_STRING
Rule 101   input1 -> epsilon
Rule 102   for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
Rule 103   for1 -> PLUS
Rule 104   for1 -> TIMES
Rule 105   for1 -> DIVIDE
Rule 106   for1 -> MINUS
Rule 107   funcion -> FUNCTION funcion4
Rule 108   funcion1 -> epsilon
Rule 109   funcion1 -> var_declaracion funcion1
Rule 110   funcion2 -> epsilon
Rule 111   funcion2 -> estatuto funcion2
Rule 112   funcion3 -> parametros
Rule 113   funcion3 -> epsilon
Rule 114   funcion4 -> VOID ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL
Rule 115   funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL
Rule 116   switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL
Rule 117   switch1 -> epsilon
Rule 118   switch1 -> LBRACKET exp RBRACKET
Rule 119   switch2 -> epsilon
Rule 120   switch2 -> CASE varcte COLON switch4 switch2
Rule 121   switch3 -> DEFAULT COLON switch4
Rule 122   switch4 -> LCURL PASS RCURL
Rule 123   switch4 -> estatuto
Rule 124   epsilon -> <empty>

Terminals, with rules where they appear

AMPERSON             : 14
AND                  : 66
BOOL                 : 21
BY                   : 102
CASE                 : 120
COLON                : 120 121
COMMA                : 16 37 73 83
CTE_FLOAT            : 76
CTE_INT              : 75 102 102 102
CTE_STRING           : 77 87 100
DEFAULT              : 121
DIFF                 : 64
DIVIDE               : 32 105
DOUBLE_EQUAL         : 63
ELSE                 : 96
ELSEIF               : 94
END                  : 1
EQUALS               : 18 34 98 99
FALSE                : 85
FLOAT                : 20
FOR                  : 102
FUNCTION             : 107
GREATER              : 62
ID                   : 8 10 12 13 18 34 69 74 88 98 99 114 115 115 116
IF                   : 91
INPUT                : 98 99
INT                  : 19
LBRACKET             : 34 81 118
LCURL                : 23 39 93 114 115 116 122
LESS                 : 61
LPAREN               : 44 45 69 80 86 91 98 99 102 114 115
MAIN                 : 39
MINUS                : 28 48 106
OR                   : 68
PASS                 : 122
PLUS                 : 27 47 90 103
PRINT                : 86
RBRACKET             : 34 81 118
RCURL                : 23 39 93 114 115 116 122
RETURN               : 115
RPAREN               : 44 45 69 80 86 91 98 99 102 114 115
START                : 1
STRING               : 22
SWITCH               : 116
TIMES                : 31 104
TO                   : 102
TRUE                 : 84
VECTOR               : 7 13
VOID                 : 114
WHILE                : 44
error                : 

Nonterminals, with rules where they appear

bloque               : 44 92 93 102
bloque1              : 23 24
condicion            : 54
condicion1           : 91 94 96
condicion2           : 91 94
condicion3           : 91
cte_bool             : 78
epsilon              : 3 5 15 17 25 29 33 36 38 41 43 49 59 67 70 72 79 82 89 95 97 101 108 110 113 117 119
estatuto             : 23 24 39 42 111 114 115 123
exp                  : 18 27 28 60 65 66 68 71 73 80 81 83 118
exp1                 : 26
expresion            : 44 45 65
expresion1           : 58
expresion2           : 60
expresion_logica     : 91
expresion_logica1    : 65
factor               : 30
factor1              : 46
for                  : 57
for1                 : 102
funcion              : 4
funcion1             : 109 114 115
funcion2             : 111 114 115
funcion3             : 114 115
funcion4             : 107
inicializacion       : 9 50
inicializacion_vector : 11
inicializacion_vector1 : 34
inicializacion_vector2 : 35 37
input                : 53
input1               : 98 99
llamada              : 51
llamada1             : 69
llamada2             : 71 73
main                 : 1
main1                : 39 40
main2                : 39 42
parametros           : 16 112
parametros1          : 12 13
parametros2          : 12 13
print                : 52
print1               : 86 90
print2               : 87 88
programa             : 0
programa1            : 1 2
programa2            : 1 4
switch               : 55
switch1              : 116
switch2              : 116 120
switch3              : 116
switch4              : 120 121
termino              : 26 31 32
termino1             : 30
tipo                 : 6 7 12 13 98 115
var_declaracion      : 2 40 109
var_declaracion1     : 6
var_declaracion2     : 7
varcte               : 35 37 46 47 48 120
varcte1              : 74
varcte2              : 80 83
while                : 56

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . START programa1 programa2 main END

    START           shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> START . programa1 programa2 main END
    (2) programa1 -> . var_declaracion programa1
    (3) programa1 -> . epsilon
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . VECTOR tipo var_declaracion2
    (124) epsilon -> .
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    VECTOR          shift and go to state 8
    FUNCTION        reduce using rule 124 (epsilon -> .)
    MAIN            reduce using rule 124 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 5
    var_declaracion                shift and go to state 6
    programa1                      shift and go to state 7
    epsilon                        shift and go to state 10

state 2

    (0) S' -> programa .



state 3

    (20) tipo -> FLOAT .

    ID              reduce using rule 20 (tipo -> FLOAT .)
    AMPERSON        reduce using rule 20 (tipo -> FLOAT .)


state 4

    (22) tipo -> STRING .

    ID              reduce using rule 22 (tipo -> STRING .)
    AMPERSON        reduce using rule 22 (tipo -> STRING .)


state 5

    (6) var_declaracion -> tipo . var_declaracion1
    (8) var_declaracion1 -> . ID
    (9) var_declaracion1 -> . inicializacion
    (18) inicializacion -> . ID EQUALS exp

    ID              shift and go to state 14

    var_declaracion1               shift and go to state 12
    inicializacion                 shift and go to state 13

state 6

    (2) programa1 -> var_declaracion . programa1
    (2) programa1 -> . var_declaracion programa1
    (3) programa1 -> . epsilon
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . VECTOR tipo var_declaracion2
    (124) epsilon -> .
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    VECTOR          shift and go to state 8
    FUNCTION        reduce using rule 124 (epsilon -> .)
    MAIN            reduce using rule 124 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 5
    epsilon                        shift and go to state 10
    var_declaracion                shift and go to state 6
    programa1                      shift and go to state 15

state 7

    (1) programa -> START programa1 . programa2 main END
    (4) programa2 -> . funcion programa2
    (5) programa2 -> . epsilon
    (107) funcion -> . FUNCTION funcion4
    (124) epsilon -> .

    FUNCTION        shift and go to state 16
    MAIN            reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 17
    programa2                      shift and go to state 18
    funcion                        shift and go to state 19

state 8

    (7) var_declaracion -> VECTOR . tipo var_declaracion2
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 20

state 9

    (21) tipo -> BOOL .

    ID              reduce using rule 21 (tipo -> BOOL .)
    AMPERSON        reduce using rule 21 (tipo -> BOOL .)


state 10

    (3) programa1 -> epsilon .

    FUNCTION        reduce using rule 3 (programa1 -> epsilon .)
    MAIN            reduce using rule 3 (programa1 -> epsilon .)


state 11

    (19) tipo -> INT .

    ID              reduce using rule 19 (tipo -> INT .)
    AMPERSON        reduce using rule 19 (tipo -> INT .)


state 12

    (6) var_declaracion -> tipo var_declaracion1 .

    VECTOR          reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    INT             reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    FLOAT           reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    BOOL            reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    STRING          reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    ID              reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    PRINT           reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    IF              reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    SWITCH          reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    WHILE           reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    FOR             reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    FUNCTION        reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    MAIN            reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)


state 13

    (9) var_declaracion1 -> inicializacion .

    VECTOR          reduce using rule 9 (var_declaracion1 -> inicializacion .)
    INT             reduce using rule 9 (var_declaracion1 -> inicializacion .)
    FLOAT           reduce using rule 9 (var_declaracion1 -> inicializacion .)
    BOOL            reduce using rule 9 (var_declaracion1 -> inicializacion .)
    STRING          reduce using rule 9 (var_declaracion1 -> inicializacion .)
    FUNCTION        reduce using rule 9 (var_declaracion1 -> inicializacion .)
    MAIN            reduce using rule 9 (var_declaracion1 -> inicializacion .)
    ID              reduce using rule 9 (var_declaracion1 -> inicializacion .)
    PRINT           reduce using rule 9 (var_declaracion1 -> inicializacion .)
    IF              reduce using rule 9 (var_declaracion1 -> inicializacion .)
    SWITCH          reduce using rule 9 (var_declaracion1 -> inicializacion .)
    WHILE           reduce using rule 9 (var_declaracion1 -> inicializacion .)
    FOR             reduce using rule 9 (var_declaracion1 -> inicializacion .)


state 14

    (8) var_declaracion1 -> ID .
    (18) inicializacion -> ID . EQUALS exp

    VECTOR          reduce using rule 8 (var_declaracion1 -> ID .)
    INT             reduce using rule 8 (var_declaracion1 -> ID .)
    FLOAT           reduce using rule 8 (var_declaracion1 -> ID .)
    BOOL            reduce using rule 8 (var_declaracion1 -> ID .)
    STRING          reduce using rule 8 (var_declaracion1 -> ID .)
    FUNCTION        reduce using rule 8 (var_declaracion1 -> ID .)
    MAIN            reduce using rule 8 (var_declaracion1 -> ID .)
    ID              reduce using rule 8 (var_declaracion1 -> ID .)
    PRINT           reduce using rule 8 (var_declaracion1 -> ID .)
    IF              reduce using rule 8 (var_declaracion1 -> ID .)
    SWITCH          reduce using rule 8 (var_declaracion1 -> ID .)
    WHILE           reduce using rule 8 (var_declaracion1 -> ID .)
    FOR             reduce using rule 8 (var_declaracion1 -> ID .)
    EQUALS          shift and go to state 21


state 15

    (2) programa1 -> var_declaracion programa1 .

    FUNCTION        reduce using rule 2 (programa1 -> var_declaracion programa1 .)
    MAIN            reduce using rule 2 (programa1 -> var_declaracion programa1 .)


state 16

    (107) funcion -> FUNCTION . funcion4
    (114) funcion4 -> . VOID ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL
    (115) funcion4 -> . tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    VOID            shift and go to state 23
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 22
    funcion4                       shift and go to state 24

state 17

    (5) programa2 -> epsilon .

    MAIN            reduce using rule 5 (programa2 -> epsilon .)


state 18

    (1) programa -> START programa1 programa2 . main END
    (39) main -> . MAIN LCURL main1 estatuto main2 RCURL

    MAIN            shift and go to state 26

    main                           shift and go to state 25

state 19

    (4) programa2 -> funcion . programa2
    (4) programa2 -> . funcion programa2
    (5) programa2 -> . epsilon
    (107) funcion -> . FUNCTION funcion4
    (124) epsilon -> .

    FUNCTION        shift and go to state 16
    MAIN            reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 17
    programa2                      shift and go to state 27
    funcion                        shift and go to state 19

state 20

    (7) var_declaracion -> VECTOR tipo . var_declaracion2
    (10) var_declaracion2 -> . ID
    (11) var_declaracion2 -> . inicializacion_vector
    (34) inicializacion_vector -> . ID EQUALS LBRACKET inicializacion_vector1 RBRACKET

    ID              shift and go to state 30

    inicializacion_vector          shift and go to state 28
    var_declaracion2               shift and go to state 29

state 21

    (18) inicializacion -> ID EQUALS . exp
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 35
    factor                         shift and go to state 36

state 22

    (115) funcion4 -> tipo . ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL

    ID              shift and go to state 39


state 23

    (114) funcion4 -> VOID . ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL

    ID              shift and go to state 40


state 24

    (107) funcion -> FUNCTION funcion4 .

    FUNCTION        reduce using rule 107 (funcion -> FUNCTION funcion4 .)
    MAIN            reduce using rule 107 (funcion -> FUNCTION funcion4 .)


state 25

    (1) programa -> START programa1 programa2 main . END

    END             shift and go to state 41


state 26

    (39) main -> MAIN . LCURL main1 estatuto main2 RCURL

    LCURL           shift and go to state 42


state 27

    (4) programa2 -> funcion programa2 .

    MAIN            reduce using rule 4 (programa2 -> funcion programa2 .)


state 28

    (11) var_declaracion2 -> inicializacion_vector .

    VECTOR          reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    INT             reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    FLOAT           reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    BOOL            reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    STRING          reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    FUNCTION        reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    MAIN            reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    ID              reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    PRINT           reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    IF              reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    SWITCH          reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    WHILE           reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)
    FOR             reduce using rule 11 (var_declaracion2 -> inicializacion_vector .)


state 29

    (7) var_declaracion -> VECTOR tipo var_declaracion2 .

    VECTOR          reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    INT             reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    FLOAT           reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    BOOL            reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    STRING          reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    ID              reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    PRINT           reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    IF              reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    SWITCH          reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    WHILE           reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    FOR             reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    FUNCTION        reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)
    MAIN            reduce using rule 7 (var_declaracion -> VECTOR tipo var_declaracion2 .)


state 30

    (10) var_declaracion2 -> ID .
    (34) inicializacion_vector -> ID . EQUALS LBRACKET inicializacion_vector1 RBRACKET

    VECTOR          reduce using rule 10 (var_declaracion2 -> ID .)
    INT             reduce using rule 10 (var_declaracion2 -> ID .)
    FLOAT           reduce using rule 10 (var_declaracion2 -> ID .)
    BOOL            reduce using rule 10 (var_declaracion2 -> ID .)
    STRING          reduce using rule 10 (var_declaracion2 -> ID .)
    FUNCTION        reduce using rule 10 (var_declaracion2 -> ID .)
    MAIN            reduce using rule 10 (var_declaracion2 -> ID .)
    ID              reduce using rule 10 (var_declaracion2 -> ID .)
    PRINT           reduce using rule 10 (var_declaracion2 -> ID .)
    IF              reduce using rule 10 (var_declaracion2 -> ID .)
    SWITCH          reduce using rule 10 (var_declaracion2 -> ID .)
    WHILE           reduce using rule 10 (var_declaracion2 -> ID .)
    FOR             reduce using rule 10 (var_declaracion2 -> ID .)
    EQUALS          shift and go to state 43


state 31

    (45) factor -> LPAREN . expresion RPAREN
    (58) expresion -> . expresion1
    (59) expresion1 -> . epsilon
    (60) expresion1 -> . expresion2 exp
    (124) epsilon -> .
    (61) expresion2 -> . LESS
    (62) expresion2 -> . GREATER
    (63) expresion2 -> . DOUBLE_EQUAL
    (64) expresion2 -> . DIFF

    RPAREN          reduce using rule 124 (epsilon -> .)
    LESS            shift and go to state 47
    GREATER         shift and go to state 51
    DOUBLE_EQUAL    shift and go to state 49
    DIFF            shift and go to state 50

    expresion                      shift and go to state 44
    expresion1                     shift and go to state 45
    expresion2                     shift and go to state 46
    epsilon                        shift and go to state 48

state 32

    (49) factor1 -> epsilon .

    ID              reduce using rule 49 (factor1 -> epsilon .)
    CTE_INT         reduce using rule 49 (factor1 -> epsilon .)
    CTE_FLOAT       reduce using rule 49 (factor1 -> epsilon .)
    CTE_STRING      reduce using rule 49 (factor1 -> epsilon .)
    TRUE            reduce using rule 49 (factor1 -> epsilon .)
    FALSE           reduce using rule 49 (factor1 -> epsilon .)


state 33

    (47) factor1 -> PLUS . varcte
    (74) varcte -> . ID varcte1
    (75) varcte -> . CTE_INT
    (76) varcte -> . CTE_FLOAT
    (77) varcte -> . CTE_STRING
    (78) varcte -> . cte_bool
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE

    ID              shift and go to state 59
    CTE_INT         shift and go to state 57
    CTE_FLOAT       shift and go to state 55
    CTE_STRING      shift and go to state 52
    TRUE            shift and go to state 58
    FALSE           shift and go to state 53

    cte_bool                       shift and go to state 56
    varcte                         shift and go to state 54

state 34

    (26) exp -> termino . exp1
    (27) exp1 -> . PLUS exp
    (28) exp1 -> . MINUS exp
    (29) exp1 -> . epsilon
    (124) epsilon -> .

    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    VECTOR          reduce using rule 124 (epsilon -> .)
    INT             reduce using rule 124 (epsilon -> .)
    FLOAT           reduce using rule 124 (epsilon -> .)
    BOOL            reduce using rule 124 (epsilon -> .)
    STRING          reduce using rule 124 (epsilon -> .)
    FUNCTION        reduce using rule 124 (epsilon -> .)
    MAIN            reduce using rule 124 (epsilon -> .)
    ID              reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    RPAREN          reduce using rule 124 (epsilon -> .)
    COMMA           reduce using rule 124 (epsilon -> .)
    RBRACKET        reduce using rule 124 (epsilon -> .)
    RCURL           reduce using rule 124 (epsilon -> .)
    RETURN          reduce using rule 124 (epsilon -> .)
    CASE            reduce using rule 124 (epsilon -> .)
    DEFAULT         reduce using rule 124 (epsilon -> .)
    AND             reduce using rule 124 (epsilon -> .)
    OR              reduce using rule 124 (epsilon -> .)
    LESS            reduce using rule 124 (epsilon -> .)
    GREATER         reduce using rule 124 (epsilon -> .)
    DOUBLE_EQUAL    reduce using rule 124 (epsilon -> .)
    DIFF            reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 60
    exp1                           shift and go to state 61

state 35

    (18) inicializacion -> ID EQUALS exp .

    ID              reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    PRINT           reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    IF              reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    SWITCH          reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    WHILE           reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    FOR             reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    INT             reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    FLOAT           reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    BOOL            reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    STRING          reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    RETURN          reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    RCURL           reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    CASE            reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    DEFAULT         reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    VECTOR          reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    FUNCTION        reduce using rule 18 (inicializacion -> ID EQUALS exp .)
    MAIN            reduce using rule 18 (inicializacion -> ID EQUALS exp .)


state 36

    (30) termino -> factor . termino1
    (31) termino1 -> . TIMES termino
    (32) termino1 -> . DIVIDE termino
    (33) termino1 -> . epsilon
    (124) epsilon -> .

    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 64
    PLUS            reduce using rule 124 (epsilon -> .)
    MINUS           reduce using rule 124 (epsilon -> .)
    VECTOR          reduce using rule 124 (epsilon -> .)
    INT             reduce using rule 124 (epsilon -> .)
    FLOAT           reduce using rule 124 (epsilon -> .)
    BOOL            reduce using rule 124 (epsilon -> .)
    STRING          reduce using rule 124 (epsilon -> .)
    FUNCTION        reduce using rule 124 (epsilon -> .)
    MAIN            reduce using rule 124 (epsilon -> .)
    ID              reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    RPAREN          reduce using rule 124 (epsilon -> .)
    COMMA           reduce using rule 124 (epsilon -> .)
    RBRACKET        reduce using rule 124 (epsilon -> .)
    RCURL           reduce using rule 124 (epsilon -> .)
    RETURN          reduce using rule 124 (epsilon -> .)
    CASE            reduce using rule 124 (epsilon -> .)
    DEFAULT         reduce using rule 124 (epsilon -> .)
    AND             reduce using rule 124 (epsilon -> .)
    OR              reduce using rule 124 (epsilon -> .)
    LESS            reduce using rule 124 (epsilon -> .)
    GREATER         reduce using rule 124 (epsilon -> .)
    DOUBLE_EQUAL    reduce using rule 124 (epsilon -> .)
    DIFF            reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 65
    termino1                       shift and go to state 66

state 37

    (48) factor1 -> MINUS . varcte
    (74) varcte -> . ID varcte1
    (75) varcte -> . CTE_INT
    (76) varcte -> . CTE_FLOAT
    (77) varcte -> . CTE_STRING
    (78) varcte -> . cte_bool
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE

    ID              shift and go to state 59
    CTE_INT         shift and go to state 57
    CTE_FLOAT       shift and go to state 55
    CTE_STRING      shift and go to state 52
    TRUE            shift and go to state 58
    FALSE           shift and go to state 53

    cte_bool                       shift and go to state 56
    varcte                         shift and go to state 68

state 38

    (46) factor -> factor1 . varcte
    (74) varcte -> . ID varcte1
    (75) varcte -> . CTE_INT
    (76) varcte -> . CTE_FLOAT
    (77) varcte -> . CTE_STRING
    (78) varcte -> . cte_bool
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE

    ID              shift and go to state 59
    CTE_INT         shift and go to state 57
    CTE_FLOAT       shift and go to state 55
    CTE_STRING      shift and go to state 52
    TRUE            shift and go to state 58
    FALSE           shift and go to state 53

    cte_bool                       shift and go to state 56
    varcte                         shift and go to state 69

state 39

    (115) funcion4 -> tipo ID . LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL

    LPAREN          shift and go to state 70


state 40

    (114) funcion4 -> VOID ID . LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL

    LPAREN          shift and go to state 71


state 41

    (1) programa -> START programa1 programa2 main END .

    $end            reduce using rule 1 (programa -> START programa1 programa2 main END .)


state 42

    (39) main -> MAIN LCURL . main1 estatuto main2 RCURL
    (40) main1 -> . var_declaracion main1
    (41) main1 -> . epsilon
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . VECTOR tipo var_declaracion2
    (124) epsilon -> .
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    VECTOR          shift and go to state 8
    ID              reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

  ! INT             [ reduce using rule 124 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 124 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 124 (epsilon -> .) ]
  ! STRING          [ reduce using rule 124 (epsilon -> .) ]

    tipo                           shift and go to state 5
    main1                          shift and go to state 72
    var_declaracion                shift and go to state 73
    epsilon                        shift and go to state 74

state 43

    (34) inicializacion_vector -> ID EQUALS . LBRACKET inicializacion_vector1 RBRACKET

    LBRACKET        shift and go to state 75


state 44

    (45) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 76


state 45

    (58) expresion -> expresion1 .

    RPAREN          reduce using rule 58 (expresion -> expresion1 .)


state 46

    (60) expresion1 -> expresion2 . exp
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 77
    factor                         shift and go to state 36

state 47

    (61) expresion2 -> LESS .

    LPAREN          reduce using rule 61 (expresion2 -> LESS .)
    PLUS            reduce using rule 61 (expresion2 -> LESS .)
    MINUS           reduce using rule 61 (expresion2 -> LESS .)
    ID              reduce using rule 61 (expresion2 -> LESS .)
    CTE_INT         reduce using rule 61 (expresion2 -> LESS .)
    CTE_FLOAT       reduce using rule 61 (expresion2 -> LESS .)
    CTE_STRING      reduce using rule 61 (expresion2 -> LESS .)
    TRUE            reduce using rule 61 (expresion2 -> LESS .)
    FALSE           reduce using rule 61 (expresion2 -> LESS .)


state 48

    (59) expresion1 -> epsilon .

    RPAREN          reduce using rule 59 (expresion1 -> epsilon .)


state 49

    (63) expresion2 -> DOUBLE_EQUAL .

    LPAREN          reduce using rule 63 (expresion2 -> DOUBLE_EQUAL .)
    PLUS            reduce using rule 63 (expresion2 -> DOUBLE_EQUAL .)
    MINUS           reduce using rule 63 (expresion2 -> DOUBLE_EQUAL .)
    ID              reduce using rule 63 (expresion2 -> DOUBLE_EQUAL .)
    CTE_INT         reduce using rule 63 (expresion2 -> DOUBLE_EQUAL .)
    CTE_FLOAT       reduce using rule 63 (expresion2 -> DOUBLE_EQUAL .)
    CTE_STRING      reduce using rule 63 (expresion2 -> DOUBLE_EQUAL .)
    TRUE            reduce using rule 63 (expresion2 -> DOUBLE_EQUAL .)
    FALSE           reduce using rule 63 (expresion2 -> DOUBLE_EQUAL .)


state 50

    (64) expresion2 -> DIFF .

    LPAREN          reduce using rule 64 (expresion2 -> DIFF .)
    PLUS            reduce using rule 64 (expresion2 -> DIFF .)
    MINUS           reduce using rule 64 (expresion2 -> DIFF .)
    ID              reduce using rule 64 (expresion2 -> DIFF .)
    CTE_INT         reduce using rule 64 (expresion2 -> DIFF .)
    CTE_FLOAT       reduce using rule 64 (expresion2 -> DIFF .)
    CTE_STRING      reduce using rule 64 (expresion2 -> DIFF .)
    TRUE            reduce using rule 64 (expresion2 -> DIFF .)
    FALSE           reduce using rule 64 (expresion2 -> DIFF .)


state 51

    (62) expresion2 -> GREATER .

    LPAREN          reduce using rule 62 (expresion2 -> GREATER .)
    PLUS            reduce using rule 62 (expresion2 -> GREATER .)
    MINUS           reduce using rule 62 (expresion2 -> GREATER .)
    ID              reduce using rule 62 (expresion2 -> GREATER .)
    CTE_INT         reduce using rule 62 (expresion2 -> GREATER .)
    CTE_FLOAT       reduce using rule 62 (expresion2 -> GREATER .)
    CTE_STRING      reduce using rule 62 (expresion2 -> GREATER .)
    TRUE            reduce using rule 62 (expresion2 -> GREATER .)
    FALSE           reduce using rule 62 (expresion2 -> GREATER .)


state 52

    (77) varcte -> CTE_STRING .

    COMMA           reduce using rule 77 (varcte -> CTE_STRING .)
    RBRACKET        reduce using rule 77 (varcte -> CTE_STRING .)
    ID              reduce using rule 77 (varcte -> CTE_STRING .)
    CTE_INT         reduce using rule 77 (varcte -> CTE_STRING .)
    CTE_FLOAT       reduce using rule 77 (varcte -> CTE_STRING .)
    CTE_STRING      reduce using rule 77 (varcte -> CTE_STRING .)
    TRUE            reduce using rule 77 (varcte -> CTE_STRING .)
    FALSE           reduce using rule 77 (varcte -> CTE_STRING .)
    TIMES           reduce using rule 77 (varcte -> CTE_STRING .)
    DIVIDE          reduce using rule 77 (varcte -> CTE_STRING .)
    PLUS            reduce using rule 77 (varcte -> CTE_STRING .)
    MINUS           reduce using rule 77 (varcte -> CTE_STRING .)
    VECTOR          reduce using rule 77 (varcte -> CTE_STRING .)
    INT             reduce using rule 77 (varcte -> CTE_STRING .)
    FLOAT           reduce using rule 77 (varcte -> CTE_STRING .)
    BOOL            reduce using rule 77 (varcte -> CTE_STRING .)
    STRING          reduce using rule 77 (varcte -> CTE_STRING .)
    FUNCTION        reduce using rule 77 (varcte -> CTE_STRING .)
    MAIN            reduce using rule 77 (varcte -> CTE_STRING .)
    PRINT           reduce using rule 77 (varcte -> CTE_STRING .)
    IF              reduce using rule 77 (varcte -> CTE_STRING .)
    SWITCH          reduce using rule 77 (varcte -> CTE_STRING .)
    WHILE           reduce using rule 77 (varcte -> CTE_STRING .)
    FOR             reduce using rule 77 (varcte -> CTE_STRING .)
    RPAREN          reduce using rule 77 (varcte -> CTE_STRING .)
    RCURL           reduce using rule 77 (varcte -> CTE_STRING .)
    RETURN          reduce using rule 77 (varcte -> CTE_STRING .)
    CASE            reduce using rule 77 (varcte -> CTE_STRING .)
    DEFAULT         reduce using rule 77 (varcte -> CTE_STRING .)
    AND             reduce using rule 77 (varcte -> CTE_STRING .)
    OR              reduce using rule 77 (varcte -> CTE_STRING .)
    LESS            reduce using rule 77 (varcte -> CTE_STRING .)
    GREATER         reduce using rule 77 (varcte -> CTE_STRING .)
    DOUBLE_EQUAL    reduce using rule 77 (varcte -> CTE_STRING .)
    DIFF            reduce using rule 77 (varcte -> CTE_STRING .)
    COLON           reduce using rule 77 (varcte -> CTE_STRING .)


state 53

    (85) cte_bool -> FALSE .

    COMMA           reduce using rule 85 (cte_bool -> FALSE .)
    RBRACKET        reduce using rule 85 (cte_bool -> FALSE .)
    ID              reduce using rule 85 (cte_bool -> FALSE .)
    CTE_INT         reduce using rule 85 (cte_bool -> FALSE .)
    CTE_FLOAT       reduce using rule 85 (cte_bool -> FALSE .)
    CTE_STRING      reduce using rule 85 (cte_bool -> FALSE .)
    TRUE            reduce using rule 85 (cte_bool -> FALSE .)
    FALSE           reduce using rule 85 (cte_bool -> FALSE .)
    COLON           reduce using rule 85 (cte_bool -> FALSE .)
    TIMES           reduce using rule 85 (cte_bool -> FALSE .)
    DIVIDE          reduce using rule 85 (cte_bool -> FALSE .)
    PLUS            reduce using rule 85 (cte_bool -> FALSE .)
    MINUS           reduce using rule 85 (cte_bool -> FALSE .)
    VECTOR          reduce using rule 85 (cte_bool -> FALSE .)
    INT             reduce using rule 85 (cte_bool -> FALSE .)
    FLOAT           reduce using rule 85 (cte_bool -> FALSE .)
    BOOL            reduce using rule 85 (cte_bool -> FALSE .)
    STRING          reduce using rule 85 (cte_bool -> FALSE .)
    FUNCTION        reduce using rule 85 (cte_bool -> FALSE .)
    MAIN            reduce using rule 85 (cte_bool -> FALSE .)
    PRINT           reduce using rule 85 (cte_bool -> FALSE .)
    IF              reduce using rule 85 (cte_bool -> FALSE .)
    SWITCH          reduce using rule 85 (cte_bool -> FALSE .)
    WHILE           reduce using rule 85 (cte_bool -> FALSE .)
    FOR             reduce using rule 85 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 85 (cte_bool -> FALSE .)
    RCURL           reduce using rule 85 (cte_bool -> FALSE .)
    RETURN          reduce using rule 85 (cte_bool -> FALSE .)
    CASE            reduce using rule 85 (cte_bool -> FALSE .)
    DEFAULT         reduce using rule 85 (cte_bool -> FALSE .)
    AND             reduce using rule 85 (cte_bool -> FALSE .)
    OR              reduce using rule 85 (cte_bool -> FALSE .)
    LESS            reduce using rule 85 (cte_bool -> FALSE .)
    GREATER         reduce using rule 85 (cte_bool -> FALSE .)
    DOUBLE_EQUAL    reduce using rule 85 (cte_bool -> FALSE .)
    DIFF            reduce using rule 85 (cte_bool -> FALSE .)


state 54

    (47) factor1 -> PLUS varcte .

    ID              reduce using rule 47 (factor1 -> PLUS varcte .)
    CTE_INT         reduce using rule 47 (factor1 -> PLUS varcte .)
    CTE_FLOAT       reduce using rule 47 (factor1 -> PLUS varcte .)
    CTE_STRING      reduce using rule 47 (factor1 -> PLUS varcte .)
    TRUE            reduce using rule 47 (factor1 -> PLUS varcte .)
    FALSE           reduce using rule 47 (factor1 -> PLUS varcte .)


state 55

    (76) varcte -> CTE_FLOAT .

    COMMA           reduce using rule 76 (varcte -> CTE_FLOAT .)
    RBRACKET        reduce using rule 76 (varcte -> CTE_FLOAT .)
    ID              reduce using rule 76 (varcte -> CTE_FLOAT .)
    CTE_INT         reduce using rule 76 (varcte -> CTE_FLOAT .)
    CTE_FLOAT       reduce using rule 76 (varcte -> CTE_FLOAT .)
    CTE_STRING      reduce using rule 76 (varcte -> CTE_FLOAT .)
    TRUE            reduce using rule 76 (varcte -> CTE_FLOAT .)
    FALSE           reduce using rule 76 (varcte -> CTE_FLOAT .)
    TIMES           reduce using rule 76 (varcte -> CTE_FLOAT .)
    DIVIDE          reduce using rule 76 (varcte -> CTE_FLOAT .)
    PLUS            reduce using rule 76 (varcte -> CTE_FLOAT .)
    MINUS           reduce using rule 76 (varcte -> CTE_FLOAT .)
    VECTOR          reduce using rule 76 (varcte -> CTE_FLOAT .)
    INT             reduce using rule 76 (varcte -> CTE_FLOAT .)
    FLOAT           reduce using rule 76 (varcte -> CTE_FLOAT .)
    BOOL            reduce using rule 76 (varcte -> CTE_FLOAT .)
    STRING          reduce using rule 76 (varcte -> CTE_FLOAT .)
    FUNCTION        reduce using rule 76 (varcte -> CTE_FLOAT .)
    MAIN            reduce using rule 76 (varcte -> CTE_FLOAT .)
    PRINT           reduce using rule 76 (varcte -> CTE_FLOAT .)
    IF              reduce using rule 76 (varcte -> CTE_FLOAT .)
    SWITCH          reduce using rule 76 (varcte -> CTE_FLOAT .)
    WHILE           reduce using rule 76 (varcte -> CTE_FLOAT .)
    FOR             reduce using rule 76 (varcte -> CTE_FLOAT .)
    RPAREN          reduce using rule 76 (varcte -> CTE_FLOAT .)
    RCURL           reduce using rule 76 (varcte -> CTE_FLOAT .)
    RETURN          reduce using rule 76 (varcte -> CTE_FLOAT .)
    CASE            reduce using rule 76 (varcte -> CTE_FLOAT .)
    DEFAULT         reduce using rule 76 (varcte -> CTE_FLOAT .)
    AND             reduce using rule 76 (varcte -> CTE_FLOAT .)
    OR              reduce using rule 76 (varcte -> CTE_FLOAT .)
    LESS            reduce using rule 76 (varcte -> CTE_FLOAT .)
    GREATER         reduce using rule 76 (varcte -> CTE_FLOAT .)
    DOUBLE_EQUAL    reduce using rule 76 (varcte -> CTE_FLOAT .)
    DIFF            reduce using rule 76 (varcte -> CTE_FLOAT .)
    COLON           reduce using rule 76 (varcte -> CTE_FLOAT .)


state 56

    (78) varcte -> cte_bool .

    COMMA           reduce using rule 78 (varcte -> cte_bool .)
    RBRACKET        reduce using rule 78 (varcte -> cte_bool .)
    ID              reduce using rule 78 (varcte -> cte_bool .)
    CTE_INT         reduce using rule 78 (varcte -> cte_bool .)
    CTE_FLOAT       reduce using rule 78 (varcte -> cte_bool .)
    CTE_STRING      reduce using rule 78 (varcte -> cte_bool .)
    TRUE            reduce using rule 78 (varcte -> cte_bool .)
    FALSE           reduce using rule 78 (varcte -> cte_bool .)
    TIMES           reduce using rule 78 (varcte -> cte_bool .)
    DIVIDE          reduce using rule 78 (varcte -> cte_bool .)
    PLUS            reduce using rule 78 (varcte -> cte_bool .)
    MINUS           reduce using rule 78 (varcte -> cte_bool .)
    VECTOR          reduce using rule 78 (varcte -> cte_bool .)
    INT             reduce using rule 78 (varcte -> cte_bool .)
    FLOAT           reduce using rule 78 (varcte -> cte_bool .)
    BOOL            reduce using rule 78 (varcte -> cte_bool .)
    STRING          reduce using rule 78 (varcte -> cte_bool .)
    FUNCTION        reduce using rule 78 (varcte -> cte_bool .)
    MAIN            reduce using rule 78 (varcte -> cte_bool .)
    PRINT           reduce using rule 78 (varcte -> cte_bool .)
    IF              reduce using rule 78 (varcte -> cte_bool .)
    SWITCH          reduce using rule 78 (varcte -> cte_bool .)
    WHILE           reduce using rule 78 (varcte -> cte_bool .)
    FOR             reduce using rule 78 (varcte -> cte_bool .)
    RPAREN          reduce using rule 78 (varcte -> cte_bool .)
    RCURL           reduce using rule 78 (varcte -> cte_bool .)
    RETURN          reduce using rule 78 (varcte -> cte_bool .)
    CASE            reduce using rule 78 (varcte -> cte_bool .)
    DEFAULT         reduce using rule 78 (varcte -> cte_bool .)
    AND             reduce using rule 78 (varcte -> cte_bool .)
    OR              reduce using rule 78 (varcte -> cte_bool .)
    LESS            reduce using rule 78 (varcte -> cte_bool .)
    GREATER         reduce using rule 78 (varcte -> cte_bool .)
    DOUBLE_EQUAL    reduce using rule 78 (varcte -> cte_bool .)
    DIFF            reduce using rule 78 (varcte -> cte_bool .)
    COLON           reduce using rule 78 (varcte -> cte_bool .)


state 57

    (75) varcte -> CTE_INT .

    COMMA           reduce using rule 75 (varcte -> CTE_INT .)
    RBRACKET        reduce using rule 75 (varcte -> CTE_INT .)
    ID              reduce using rule 75 (varcte -> CTE_INT .)
    CTE_INT         reduce using rule 75 (varcte -> CTE_INT .)
    CTE_FLOAT       reduce using rule 75 (varcte -> CTE_INT .)
    CTE_STRING      reduce using rule 75 (varcte -> CTE_INT .)
    TRUE            reduce using rule 75 (varcte -> CTE_INT .)
    FALSE           reduce using rule 75 (varcte -> CTE_INT .)
    TIMES           reduce using rule 75 (varcte -> CTE_INT .)
    DIVIDE          reduce using rule 75 (varcte -> CTE_INT .)
    PLUS            reduce using rule 75 (varcte -> CTE_INT .)
    MINUS           reduce using rule 75 (varcte -> CTE_INT .)
    VECTOR          reduce using rule 75 (varcte -> CTE_INT .)
    INT             reduce using rule 75 (varcte -> CTE_INT .)
    FLOAT           reduce using rule 75 (varcte -> CTE_INT .)
    BOOL            reduce using rule 75 (varcte -> CTE_INT .)
    STRING          reduce using rule 75 (varcte -> CTE_INT .)
    FUNCTION        reduce using rule 75 (varcte -> CTE_INT .)
    MAIN            reduce using rule 75 (varcte -> CTE_INT .)
    PRINT           reduce using rule 75 (varcte -> CTE_INT .)
    IF              reduce using rule 75 (varcte -> CTE_INT .)
    SWITCH          reduce using rule 75 (varcte -> CTE_INT .)
    WHILE           reduce using rule 75 (varcte -> CTE_INT .)
    FOR             reduce using rule 75 (varcte -> CTE_INT .)
    RPAREN          reduce using rule 75 (varcte -> CTE_INT .)
    RCURL           reduce using rule 75 (varcte -> CTE_INT .)
    RETURN          reduce using rule 75 (varcte -> CTE_INT .)
    CASE            reduce using rule 75 (varcte -> CTE_INT .)
    DEFAULT         reduce using rule 75 (varcte -> CTE_INT .)
    AND             reduce using rule 75 (varcte -> CTE_INT .)
    OR              reduce using rule 75 (varcte -> CTE_INT .)
    LESS            reduce using rule 75 (varcte -> CTE_INT .)
    GREATER         reduce using rule 75 (varcte -> CTE_INT .)
    DOUBLE_EQUAL    reduce using rule 75 (varcte -> CTE_INT .)
    DIFF            reduce using rule 75 (varcte -> CTE_INT .)
    COLON           reduce using rule 75 (varcte -> CTE_INT .)


state 58

    (84) cte_bool -> TRUE .

    COMMA           reduce using rule 84 (cte_bool -> TRUE .)
    RBRACKET        reduce using rule 84 (cte_bool -> TRUE .)
    ID              reduce using rule 84 (cte_bool -> TRUE .)
    CTE_INT         reduce using rule 84 (cte_bool -> TRUE .)
    CTE_FLOAT       reduce using rule 84 (cte_bool -> TRUE .)
    CTE_STRING      reduce using rule 84 (cte_bool -> TRUE .)
    TRUE            reduce using rule 84 (cte_bool -> TRUE .)
    FALSE           reduce using rule 84 (cte_bool -> TRUE .)
    COLON           reduce using rule 84 (cte_bool -> TRUE .)
    TIMES           reduce using rule 84 (cte_bool -> TRUE .)
    DIVIDE          reduce using rule 84 (cte_bool -> TRUE .)
    PLUS            reduce using rule 84 (cte_bool -> TRUE .)
    MINUS           reduce using rule 84 (cte_bool -> TRUE .)
    VECTOR          reduce using rule 84 (cte_bool -> TRUE .)
    INT             reduce using rule 84 (cte_bool -> TRUE .)
    FLOAT           reduce using rule 84 (cte_bool -> TRUE .)
    BOOL            reduce using rule 84 (cte_bool -> TRUE .)
    STRING          reduce using rule 84 (cte_bool -> TRUE .)
    FUNCTION        reduce using rule 84 (cte_bool -> TRUE .)
    MAIN            reduce using rule 84 (cte_bool -> TRUE .)
    PRINT           reduce using rule 84 (cte_bool -> TRUE .)
    IF              reduce using rule 84 (cte_bool -> TRUE .)
    SWITCH          reduce using rule 84 (cte_bool -> TRUE .)
    WHILE           reduce using rule 84 (cte_bool -> TRUE .)
    FOR             reduce using rule 84 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 84 (cte_bool -> TRUE .)
    RCURL           reduce using rule 84 (cte_bool -> TRUE .)
    RETURN          reduce using rule 84 (cte_bool -> TRUE .)
    CASE            reduce using rule 84 (cte_bool -> TRUE .)
    DEFAULT         reduce using rule 84 (cte_bool -> TRUE .)
    AND             reduce using rule 84 (cte_bool -> TRUE .)
    OR              reduce using rule 84 (cte_bool -> TRUE .)
    LESS            reduce using rule 84 (cte_bool -> TRUE .)
    GREATER         reduce using rule 84 (cte_bool -> TRUE .)
    DOUBLE_EQUAL    reduce using rule 84 (cte_bool -> TRUE .)
    DIFF            reduce using rule 84 (cte_bool -> TRUE .)


state 59

    (74) varcte -> ID . varcte1
    (79) varcte1 -> . epsilon
    (80) varcte1 -> . LPAREN exp varcte2 RPAREN
    (81) varcte1 -> . LBRACKET exp RBRACKET
    (124) epsilon -> .

    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 80
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)
    TIMES           reduce using rule 124 (epsilon -> .)
    DIVIDE          reduce using rule 124 (epsilon -> .)
    PLUS            reduce using rule 124 (epsilon -> .)
    MINUS           reduce using rule 124 (epsilon -> .)
    VECTOR          reduce using rule 124 (epsilon -> .)
    INT             reduce using rule 124 (epsilon -> .)
    FLOAT           reduce using rule 124 (epsilon -> .)
    BOOL            reduce using rule 124 (epsilon -> .)
    STRING          reduce using rule 124 (epsilon -> .)
    FUNCTION        reduce using rule 124 (epsilon -> .)
    MAIN            reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    RPAREN          reduce using rule 124 (epsilon -> .)
    COMMA           reduce using rule 124 (epsilon -> .)
    RBRACKET        reduce using rule 124 (epsilon -> .)
    RCURL           reduce using rule 124 (epsilon -> .)
    RETURN          reduce using rule 124 (epsilon -> .)
    CASE            reduce using rule 124 (epsilon -> .)
    DEFAULT         reduce using rule 124 (epsilon -> .)
    AND             reduce using rule 124 (epsilon -> .)
    OR              reduce using rule 124 (epsilon -> .)
    LESS            reduce using rule 124 (epsilon -> .)
    GREATER         reduce using rule 124 (epsilon -> .)
    DOUBLE_EQUAL    reduce using rule 124 (epsilon -> .)
    DIFF            reduce using rule 124 (epsilon -> .)
    COLON           reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 79
    varcte1                        shift and go to state 81

state 60

    (29) exp1 -> epsilon .

    VECTOR          reduce using rule 29 (exp1 -> epsilon .)
    INT             reduce using rule 29 (exp1 -> epsilon .)
    FLOAT           reduce using rule 29 (exp1 -> epsilon .)
    BOOL            reduce using rule 29 (exp1 -> epsilon .)
    STRING          reduce using rule 29 (exp1 -> epsilon .)
    FUNCTION        reduce using rule 29 (exp1 -> epsilon .)
    MAIN            reduce using rule 29 (exp1 -> epsilon .)
    ID              reduce using rule 29 (exp1 -> epsilon .)
    PRINT           reduce using rule 29 (exp1 -> epsilon .)
    IF              reduce using rule 29 (exp1 -> epsilon .)
    SWITCH          reduce using rule 29 (exp1 -> epsilon .)
    WHILE           reduce using rule 29 (exp1 -> epsilon .)
    FOR             reduce using rule 29 (exp1 -> epsilon .)
    RPAREN          reduce using rule 29 (exp1 -> epsilon .)
    COMMA           reduce using rule 29 (exp1 -> epsilon .)
    RBRACKET        reduce using rule 29 (exp1 -> epsilon .)
    RCURL           reduce using rule 29 (exp1 -> epsilon .)
    RETURN          reduce using rule 29 (exp1 -> epsilon .)
    CASE            reduce using rule 29 (exp1 -> epsilon .)
    DEFAULT         reduce using rule 29 (exp1 -> epsilon .)
    AND             reduce using rule 29 (exp1 -> epsilon .)
    OR              reduce using rule 29 (exp1 -> epsilon .)
    LESS            reduce using rule 29 (exp1 -> epsilon .)
    GREATER         reduce using rule 29 (exp1 -> epsilon .)
    DOUBLE_EQUAL    reduce using rule 29 (exp1 -> epsilon .)
    DIFF            reduce using rule 29 (exp1 -> epsilon .)


state 61

    (26) exp -> termino exp1 .

    COMMA           reduce using rule 26 (exp -> termino exp1 .)
    RPAREN          reduce using rule 26 (exp -> termino exp1 .)
    ID              reduce using rule 26 (exp -> termino exp1 .)
    PRINT           reduce using rule 26 (exp -> termino exp1 .)
    IF              reduce using rule 26 (exp -> termino exp1 .)
    SWITCH          reduce using rule 26 (exp -> termino exp1 .)
    WHILE           reduce using rule 26 (exp -> termino exp1 .)
    FOR             reduce using rule 26 (exp -> termino exp1 .)
    INT             reduce using rule 26 (exp -> termino exp1 .)
    FLOAT           reduce using rule 26 (exp -> termino exp1 .)
    BOOL            reduce using rule 26 (exp -> termino exp1 .)
    STRING          reduce using rule 26 (exp -> termino exp1 .)
    RCURL           reduce using rule 26 (exp -> termino exp1 .)
    RETURN          reduce using rule 26 (exp -> termino exp1 .)
    CASE            reduce using rule 26 (exp -> termino exp1 .)
    DEFAULT         reduce using rule 26 (exp -> termino exp1 .)
    VECTOR          reduce using rule 26 (exp -> termino exp1 .)
    FUNCTION        reduce using rule 26 (exp -> termino exp1 .)
    MAIN            reduce using rule 26 (exp -> termino exp1 .)
    RBRACKET        reduce using rule 26 (exp -> termino exp1 .)
    AND             reduce using rule 26 (exp -> termino exp1 .)
    OR              reduce using rule 26 (exp -> termino exp1 .)
    LESS            reduce using rule 26 (exp -> termino exp1 .)
    GREATER         reduce using rule 26 (exp -> termino exp1 .)
    DOUBLE_EQUAL    reduce using rule 26 (exp -> termino exp1 .)
    DIFF            reduce using rule 26 (exp -> termino exp1 .)


state 62

    (27) exp1 -> PLUS . exp
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 82
    factor                         shift and go to state 36

state 63

    (28) exp1 -> MINUS . exp
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 83
    factor                         shift and go to state 36

state 64

    (32) termino1 -> DIVIDE . termino
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 32
    termino                        shift and go to state 84
    factor                         shift and go to state 36
    factor1                        shift and go to state 38

state 65

    (33) termino1 -> epsilon .

    PLUS            reduce using rule 33 (termino1 -> epsilon .)
    MINUS           reduce using rule 33 (termino1 -> epsilon .)
    VECTOR          reduce using rule 33 (termino1 -> epsilon .)
    INT             reduce using rule 33 (termino1 -> epsilon .)
    FLOAT           reduce using rule 33 (termino1 -> epsilon .)
    BOOL            reduce using rule 33 (termino1 -> epsilon .)
    STRING          reduce using rule 33 (termino1 -> epsilon .)
    FUNCTION        reduce using rule 33 (termino1 -> epsilon .)
    MAIN            reduce using rule 33 (termino1 -> epsilon .)
    ID              reduce using rule 33 (termino1 -> epsilon .)
    PRINT           reduce using rule 33 (termino1 -> epsilon .)
    IF              reduce using rule 33 (termino1 -> epsilon .)
    SWITCH          reduce using rule 33 (termino1 -> epsilon .)
    WHILE           reduce using rule 33 (termino1 -> epsilon .)
    FOR             reduce using rule 33 (termino1 -> epsilon .)
    RPAREN          reduce using rule 33 (termino1 -> epsilon .)
    COMMA           reduce using rule 33 (termino1 -> epsilon .)
    RBRACKET        reduce using rule 33 (termino1 -> epsilon .)
    RCURL           reduce using rule 33 (termino1 -> epsilon .)
    RETURN          reduce using rule 33 (termino1 -> epsilon .)
    CASE            reduce using rule 33 (termino1 -> epsilon .)
    DEFAULT         reduce using rule 33 (termino1 -> epsilon .)
    AND             reduce using rule 33 (termino1 -> epsilon .)
    OR              reduce using rule 33 (termino1 -> epsilon .)
    LESS            reduce using rule 33 (termino1 -> epsilon .)
    GREATER         reduce using rule 33 (termino1 -> epsilon .)
    DOUBLE_EQUAL    reduce using rule 33 (termino1 -> epsilon .)
    DIFF            reduce using rule 33 (termino1 -> epsilon .)


state 66

    (30) termino -> factor termino1 .

    PLUS            reduce using rule 30 (termino -> factor termino1 .)
    MINUS           reduce using rule 30 (termino -> factor termino1 .)
    ID              reduce using rule 30 (termino -> factor termino1 .)
    PRINT           reduce using rule 30 (termino -> factor termino1 .)
    IF              reduce using rule 30 (termino -> factor termino1 .)
    SWITCH          reduce using rule 30 (termino -> factor termino1 .)
    WHILE           reduce using rule 30 (termino -> factor termino1 .)
    FOR             reduce using rule 30 (termino -> factor termino1 .)
    INT             reduce using rule 30 (termino -> factor termino1 .)
    FLOAT           reduce using rule 30 (termino -> factor termino1 .)
    BOOL            reduce using rule 30 (termino -> factor termino1 .)
    STRING          reduce using rule 30 (termino -> factor termino1 .)
    RCURL           reduce using rule 30 (termino -> factor termino1 .)
    RETURN          reduce using rule 30 (termino -> factor termino1 .)
    CASE            reduce using rule 30 (termino -> factor termino1 .)
    DEFAULT         reduce using rule 30 (termino -> factor termino1 .)
    VECTOR          reduce using rule 30 (termino -> factor termino1 .)
    FUNCTION        reduce using rule 30 (termino -> factor termino1 .)
    MAIN            reduce using rule 30 (termino -> factor termino1 .)
    COMMA           reduce using rule 30 (termino -> factor termino1 .)
    RPAREN          reduce using rule 30 (termino -> factor termino1 .)
    RBRACKET        reduce using rule 30 (termino -> factor termino1 .)
    AND             reduce using rule 30 (termino -> factor termino1 .)
    OR              reduce using rule 30 (termino -> factor termino1 .)
    LESS            reduce using rule 30 (termino -> factor termino1 .)
    GREATER         reduce using rule 30 (termino -> factor termino1 .)
    DOUBLE_EQUAL    reduce using rule 30 (termino -> factor termino1 .)
    DIFF            reduce using rule 30 (termino -> factor termino1 .)


state 67

    (31) termino1 -> TIMES . termino
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 32
    termino                        shift and go to state 85
    factor                         shift and go to state 36
    factor1                        shift and go to state 38

state 68

    (48) factor1 -> MINUS varcte .

    ID              reduce using rule 48 (factor1 -> MINUS varcte .)
    CTE_INT         reduce using rule 48 (factor1 -> MINUS varcte .)
    CTE_FLOAT       reduce using rule 48 (factor1 -> MINUS varcte .)
    CTE_STRING      reduce using rule 48 (factor1 -> MINUS varcte .)
    TRUE            reduce using rule 48 (factor1 -> MINUS varcte .)
    FALSE           reduce using rule 48 (factor1 -> MINUS varcte .)


state 69

    (46) factor -> factor1 varcte .

    TIMES           reduce using rule 46 (factor -> factor1 varcte .)
    DIVIDE          reduce using rule 46 (factor -> factor1 varcte .)
    PLUS            reduce using rule 46 (factor -> factor1 varcte .)
    MINUS           reduce using rule 46 (factor -> factor1 varcte .)
    ID              reduce using rule 46 (factor -> factor1 varcte .)
    PRINT           reduce using rule 46 (factor -> factor1 varcte .)
    IF              reduce using rule 46 (factor -> factor1 varcte .)
    SWITCH          reduce using rule 46 (factor -> factor1 varcte .)
    WHILE           reduce using rule 46 (factor -> factor1 varcte .)
    FOR             reduce using rule 46 (factor -> factor1 varcte .)
    INT             reduce using rule 46 (factor -> factor1 varcte .)
    FLOAT           reduce using rule 46 (factor -> factor1 varcte .)
    BOOL            reduce using rule 46 (factor -> factor1 varcte .)
    STRING          reduce using rule 46 (factor -> factor1 varcte .)
    RCURL           reduce using rule 46 (factor -> factor1 varcte .)
    RETURN          reduce using rule 46 (factor -> factor1 varcte .)
    CASE            reduce using rule 46 (factor -> factor1 varcte .)
    DEFAULT         reduce using rule 46 (factor -> factor1 varcte .)
    LESS            reduce using rule 46 (factor -> factor1 varcte .)
    GREATER         reduce using rule 46 (factor -> factor1 varcte .)
    DOUBLE_EQUAL    reduce using rule 46 (factor -> factor1 varcte .)
    DIFF            reduce using rule 46 (factor -> factor1 varcte .)
    RPAREN          reduce using rule 46 (factor -> factor1 varcte .)
    RBRACKET        reduce using rule 46 (factor -> factor1 varcte .)
    COMMA           reduce using rule 46 (factor -> factor1 varcte .)
    VECTOR          reduce using rule 46 (factor -> factor1 varcte .)
    FUNCTION        reduce using rule 46 (factor -> factor1 varcte .)
    MAIN            reduce using rule 46 (factor -> factor1 varcte .)
    AND             reduce using rule 46 (factor -> factor1 varcte .)
    OR              reduce using rule 46 (factor -> factor1 varcte .)


state 70

    (115) funcion4 -> tipo ID LPAREN . funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL
    (112) funcion3 -> . parametros
    (113) funcion3 -> . epsilon
    (12) parametros -> . tipo parametros1 ID parametros2
    (13) parametros -> . VECTOR tipo parametros1 ID parametros2
    (124) epsilon -> .
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    VECTOR          shift and go to state 90
    RPAREN          reduce using rule 124 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 86
    epsilon                        shift and go to state 87
    funcion3                       shift and go to state 88
    parametros                     shift and go to state 89

state 71

    (114) funcion4 -> VOID ID LPAREN . funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL
    (112) funcion3 -> . parametros
    (113) funcion3 -> . epsilon
    (12) parametros -> . tipo parametros1 ID parametros2
    (13) parametros -> . VECTOR tipo parametros1 ID parametros2
    (124) epsilon -> .
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    VECTOR          shift and go to state 90
    RPAREN          reduce using rule 124 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 86
    epsilon                        shift and go to state 87
    funcion3                       shift and go to state 91
    parametros                     shift and go to state 89

state 72

    (39) main -> MAIN LCURL main1 . estatuto main2 RCURL
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 105
    estatuto                       shift and go to state 95
    switch                         shift and go to state 106
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    inicializacion                 shift and go to state 102
    for                            shift and go to state 94
    while                          shift and go to state 107

state 73

    (40) main1 -> var_declaracion . main1
    (40) main1 -> . var_declaracion main1
    (41) main1 -> . epsilon
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . VECTOR tipo var_declaracion2
    (124) epsilon -> .
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    VECTOR          shift and go to state 8
    ID              reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

  ! INT             [ reduce using rule 124 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 124 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 124 (epsilon -> .) ]
  ! STRING          [ reduce using rule 124 (epsilon -> .) ]

    tipo                           shift and go to state 5
    main1                          shift and go to state 108
    var_declaracion                shift and go to state 73
    epsilon                        shift and go to state 74

state 74

    (41) main1 -> epsilon .

    ID              reduce using rule 41 (main1 -> epsilon .)
    PRINT           reduce using rule 41 (main1 -> epsilon .)
    IF              reduce using rule 41 (main1 -> epsilon .)
    SWITCH          reduce using rule 41 (main1 -> epsilon .)
    WHILE           reduce using rule 41 (main1 -> epsilon .)
    FOR             reduce using rule 41 (main1 -> epsilon .)
    INT             reduce using rule 41 (main1 -> epsilon .)
    FLOAT           reduce using rule 41 (main1 -> epsilon .)
    BOOL            reduce using rule 41 (main1 -> epsilon .)
    STRING          reduce using rule 41 (main1 -> epsilon .)


state 75

    (34) inicializacion_vector -> ID EQUALS LBRACKET . inicializacion_vector1 RBRACKET
    (35) inicializacion_vector1 -> . varcte inicializacion_vector2
    (36) inicializacion_vector1 -> . epsilon
    (74) varcte -> . ID varcte1
    (75) varcte -> . CTE_INT
    (76) varcte -> . CTE_FLOAT
    (77) varcte -> . CTE_STRING
    (78) varcte -> . cte_bool
    (124) epsilon -> .
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE

    ID              shift and go to state 59
    CTE_INT         shift and go to state 57
    CTE_FLOAT       shift and go to state 55
    CTE_STRING      shift and go to state 52
    RBRACKET        reduce using rule 124 (epsilon -> .)
    TRUE            shift and go to state 58
    FALSE           shift and go to state 53

    varcte                         shift and go to state 109
    epsilon                        shift and go to state 110
    cte_bool                       shift and go to state 56
    inicializacion_vector1         shift and go to state 111

state 76

    (45) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    SWITCH          reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    INT             reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    FLOAT           reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    BOOL            reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    RCURL           reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    CASE            reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    DEFAULT         reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    DOUBLE_EQUAL    reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    DIFF            reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    VECTOR          reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    FUNCTION        reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    MAIN            reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 45 (factor -> LPAREN expresion RPAREN .)


state 77

    (60) expresion1 -> expresion2 exp .

    RPAREN          reduce using rule 60 (expresion1 -> expresion2 exp .)


state 78

    (80) varcte1 -> LPAREN . exp varcte2 RPAREN
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 112
    factor                         shift and go to state 36

state 79

    (79) varcte1 -> epsilon .

    ID              reduce using rule 79 (varcte1 -> epsilon .)
    CTE_INT         reduce using rule 79 (varcte1 -> epsilon .)
    CTE_FLOAT       reduce using rule 79 (varcte1 -> epsilon .)
    CTE_STRING      reduce using rule 79 (varcte1 -> epsilon .)
    TRUE            reduce using rule 79 (varcte1 -> epsilon .)
    FALSE           reduce using rule 79 (varcte1 -> epsilon .)
    TIMES           reduce using rule 79 (varcte1 -> epsilon .)
    DIVIDE          reduce using rule 79 (varcte1 -> epsilon .)
    PLUS            reduce using rule 79 (varcte1 -> epsilon .)
    MINUS           reduce using rule 79 (varcte1 -> epsilon .)
    VECTOR          reduce using rule 79 (varcte1 -> epsilon .)
    INT             reduce using rule 79 (varcte1 -> epsilon .)
    FLOAT           reduce using rule 79 (varcte1 -> epsilon .)
    BOOL            reduce using rule 79 (varcte1 -> epsilon .)
    STRING          reduce using rule 79 (varcte1 -> epsilon .)
    FUNCTION        reduce using rule 79 (varcte1 -> epsilon .)
    MAIN            reduce using rule 79 (varcte1 -> epsilon .)
    PRINT           reduce using rule 79 (varcte1 -> epsilon .)
    IF              reduce using rule 79 (varcte1 -> epsilon .)
    SWITCH          reduce using rule 79 (varcte1 -> epsilon .)
    WHILE           reduce using rule 79 (varcte1 -> epsilon .)
    FOR             reduce using rule 79 (varcte1 -> epsilon .)
    RPAREN          reduce using rule 79 (varcte1 -> epsilon .)
    COMMA           reduce using rule 79 (varcte1 -> epsilon .)
    RBRACKET        reduce using rule 79 (varcte1 -> epsilon .)
    RCURL           reduce using rule 79 (varcte1 -> epsilon .)
    RETURN          reduce using rule 79 (varcte1 -> epsilon .)
    CASE            reduce using rule 79 (varcte1 -> epsilon .)
    DEFAULT         reduce using rule 79 (varcte1 -> epsilon .)
    AND             reduce using rule 79 (varcte1 -> epsilon .)
    OR              reduce using rule 79 (varcte1 -> epsilon .)
    LESS            reduce using rule 79 (varcte1 -> epsilon .)
    GREATER         reduce using rule 79 (varcte1 -> epsilon .)
    DOUBLE_EQUAL    reduce using rule 79 (varcte1 -> epsilon .)
    DIFF            reduce using rule 79 (varcte1 -> epsilon .)
    COLON           reduce using rule 79 (varcte1 -> epsilon .)


state 80

    (81) varcte1 -> LBRACKET . exp RBRACKET
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 113
    factor                         shift and go to state 36

state 81

    (74) varcte -> ID varcte1 .

    COMMA           reduce using rule 74 (varcte -> ID varcte1 .)
    RBRACKET        reduce using rule 74 (varcte -> ID varcte1 .)
    ID              reduce using rule 74 (varcte -> ID varcte1 .)
    CTE_INT         reduce using rule 74 (varcte -> ID varcte1 .)
    CTE_FLOAT       reduce using rule 74 (varcte -> ID varcte1 .)
    CTE_STRING      reduce using rule 74 (varcte -> ID varcte1 .)
    TRUE            reduce using rule 74 (varcte -> ID varcte1 .)
    FALSE           reduce using rule 74 (varcte -> ID varcte1 .)
    TIMES           reduce using rule 74 (varcte -> ID varcte1 .)
    DIVIDE          reduce using rule 74 (varcte -> ID varcte1 .)
    PLUS            reduce using rule 74 (varcte -> ID varcte1 .)
    MINUS           reduce using rule 74 (varcte -> ID varcte1 .)
    VECTOR          reduce using rule 74 (varcte -> ID varcte1 .)
    INT             reduce using rule 74 (varcte -> ID varcte1 .)
    FLOAT           reduce using rule 74 (varcte -> ID varcte1 .)
    BOOL            reduce using rule 74 (varcte -> ID varcte1 .)
    STRING          reduce using rule 74 (varcte -> ID varcte1 .)
    FUNCTION        reduce using rule 74 (varcte -> ID varcte1 .)
    MAIN            reduce using rule 74 (varcte -> ID varcte1 .)
    PRINT           reduce using rule 74 (varcte -> ID varcte1 .)
    IF              reduce using rule 74 (varcte -> ID varcte1 .)
    SWITCH          reduce using rule 74 (varcte -> ID varcte1 .)
    WHILE           reduce using rule 74 (varcte -> ID varcte1 .)
    FOR             reduce using rule 74 (varcte -> ID varcte1 .)
    RPAREN          reduce using rule 74 (varcte -> ID varcte1 .)
    RCURL           reduce using rule 74 (varcte -> ID varcte1 .)
    RETURN          reduce using rule 74 (varcte -> ID varcte1 .)
    CASE            reduce using rule 74 (varcte -> ID varcte1 .)
    DEFAULT         reduce using rule 74 (varcte -> ID varcte1 .)
    AND             reduce using rule 74 (varcte -> ID varcte1 .)
    OR              reduce using rule 74 (varcte -> ID varcte1 .)
    LESS            reduce using rule 74 (varcte -> ID varcte1 .)
    GREATER         reduce using rule 74 (varcte -> ID varcte1 .)
    DOUBLE_EQUAL    reduce using rule 74 (varcte -> ID varcte1 .)
    DIFF            reduce using rule 74 (varcte -> ID varcte1 .)
    COLON           reduce using rule 74 (varcte -> ID varcte1 .)


state 82

    (27) exp1 -> PLUS exp .

    VECTOR          reduce using rule 27 (exp1 -> PLUS exp .)
    INT             reduce using rule 27 (exp1 -> PLUS exp .)
    FLOAT           reduce using rule 27 (exp1 -> PLUS exp .)
    BOOL            reduce using rule 27 (exp1 -> PLUS exp .)
    STRING          reduce using rule 27 (exp1 -> PLUS exp .)
    FUNCTION        reduce using rule 27 (exp1 -> PLUS exp .)
    MAIN            reduce using rule 27 (exp1 -> PLUS exp .)
    ID              reduce using rule 27 (exp1 -> PLUS exp .)
    PRINT           reduce using rule 27 (exp1 -> PLUS exp .)
    IF              reduce using rule 27 (exp1 -> PLUS exp .)
    SWITCH          reduce using rule 27 (exp1 -> PLUS exp .)
    WHILE           reduce using rule 27 (exp1 -> PLUS exp .)
    FOR             reduce using rule 27 (exp1 -> PLUS exp .)
    RPAREN          reduce using rule 27 (exp1 -> PLUS exp .)
    COMMA           reduce using rule 27 (exp1 -> PLUS exp .)
    RBRACKET        reduce using rule 27 (exp1 -> PLUS exp .)
    RCURL           reduce using rule 27 (exp1 -> PLUS exp .)
    RETURN          reduce using rule 27 (exp1 -> PLUS exp .)
    CASE            reduce using rule 27 (exp1 -> PLUS exp .)
    DEFAULT         reduce using rule 27 (exp1 -> PLUS exp .)
    AND             reduce using rule 27 (exp1 -> PLUS exp .)
    OR              reduce using rule 27 (exp1 -> PLUS exp .)
    LESS            reduce using rule 27 (exp1 -> PLUS exp .)
    GREATER         reduce using rule 27 (exp1 -> PLUS exp .)
    DOUBLE_EQUAL    reduce using rule 27 (exp1 -> PLUS exp .)
    DIFF            reduce using rule 27 (exp1 -> PLUS exp .)


state 83

    (28) exp1 -> MINUS exp .

    VECTOR          reduce using rule 28 (exp1 -> MINUS exp .)
    INT             reduce using rule 28 (exp1 -> MINUS exp .)
    FLOAT           reduce using rule 28 (exp1 -> MINUS exp .)
    BOOL            reduce using rule 28 (exp1 -> MINUS exp .)
    STRING          reduce using rule 28 (exp1 -> MINUS exp .)
    FUNCTION        reduce using rule 28 (exp1 -> MINUS exp .)
    MAIN            reduce using rule 28 (exp1 -> MINUS exp .)
    ID              reduce using rule 28 (exp1 -> MINUS exp .)
    PRINT           reduce using rule 28 (exp1 -> MINUS exp .)
    IF              reduce using rule 28 (exp1 -> MINUS exp .)
    SWITCH          reduce using rule 28 (exp1 -> MINUS exp .)
    WHILE           reduce using rule 28 (exp1 -> MINUS exp .)
    FOR             reduce using rule 28 (exp1 -> MINUS exp .)
    RPAREN          reduce using rule 28 (exp1 -> MINUS exp .)
    COMMA           reduce using rule 28 (exp1 -> MINUS exp .)
    RBRACKET        reduce using rule 28 (exp1 -> MINUS exp .)
    RCURL           reduce using rule 28 (exp1 -> MINUS exp .)
    RETURN          reduce using rule 28 (exp1 -> MINUS exp .)
    CASE            reduce using rule 28 (exp1 -> MINUS exp .)
    DEFAULT         reduce using rule 28 (exp1 -> MINUS exp .)
    AND             reduce using rule 28 (exp1 -> MINUS exp .)
    OR              reduce using rule 28 (exp1 -> MINUS exp .)
    LESS            reduce using rule 28 (exp1 -> MINUS exp .)
    GREATER         reduce using rule 28 (exp1 -> MINUS exp .)
    DOUBLE_EQUAL    reduce using rule 28 (exp1 -> MINUS exp .)
    DIFF            reduce using rule 28 (exp1 -> MINUS exp .)


state 84

    (32) termino1 -> DIVIDE termino .

    PLUS            reduce using rule 32 (termino1 -> DIVIDE termino .)
    MINUS           reduce using rule 32 (termino1 -> DIVIDE termino .)
    VECTOR          reduce using rule 32 (termino1 -> DIVIDE termino .)
    INT             reduce using rule 32 (termino1 -> DIVIDE termino .)
    FLOAT           reduce using rule 32 (termino1 -> DIVIDE termino .)
    BOOL            reduce using rule 32 (termino1 -> DIVIDE termino .)
    STRING          reduce using rule 32 (termino1 -> DIVIDE termino .)
    FUNCTION        reduce using rule 32 (termino1 -> DIVIDE termino .)
    MAIN            reduce using rule 32 (termino1 -> DIVIDE termino .)
    ID              reduce using rule 32 (termino1 -> DIVIDE termino .)
    PRINT           reduce using rule 32 (termino1 -> DIVIDE termino .)
    IF              reduce using rule 32 (termino1 -> DIVIDE termino .)
    SWITCH          reduce using rule 32 (termino1 -> DIVIDE termino .)
    WHILE           reduce using rule 32 (termino1 -> DIVIDE termino .)
    FOR             reduce using rule 32 (termino1 -> DIVIDE termino .)
    RPAREN          reduce using rule 32 (termino1 -> DIVIDE termino .)
    COMMA           reduce using rule 32 (termino1 -> DIVIDE termino .)
    RBRACKET        reduce using rule 32 (termino1 -> DIVIDE termino .)
    RCURL           reduce using rule 32 (termino1 -> DIVIDE termino .)
    RETURN          reduce using rule 32 (termino1 -> DIVIDE termino .)
    CASE            reduce using rule 32 (termino1 -> DIVIDE termino .)
    DEFAULT         reduce using rule 32 (termino1 -> DIVIDE termino .)
    AND             reduce using rule 32 (termino1 -> DIVIDE termino .)
    OR              reduce using rule 32 (termino1 -> DIVIDE termino .)
    LESS            reduce using rule 32 (termino1 -> DIVIDE termino .)
    GREATER         reduce using rule 32 (termino1 -> DIVIDE termino .)
    DOUBLE_EQUAL    reduce using rule 32 (termino1 -> DIVIDE termino .)
    DIFF            reduce using rule 32 (termino1 -> DIVIDE termino .)


state 85

    (31) termino1 -> TIMES termino .

    PLUS            reduce using rule 31 (termino1 -> TIMES termino .)
    MINUS           reduce using rule 31 (termino1 -> TIMES termino .)
    VECTOR          reduce using rule 31 (termino1 -> TIMES termino .)
    INT             reduce using rule 31 (termino1 -> TIMES termino .)
    FLOAT           reduce using rule 31 (termino1 -> TIMES termino .)
    BOOL            reduce using rule 31 (termino1 -> TIMES termino .)
    STRING          reduce using rule 31 (termino1 -> TIMES termino .)
    FUNCTION        reduce using rule 31 (termino1 -> TIMES termino .)
    MAIN            reduce using rule 31 (termino1 -> TIMES termino .)
    ID              reduce using rule 31 (termino1 -> TIMES termino .)
    PRINT           reduce using rule 31 (termino1 -> TIMES termino .)
    IF              reduce using rule 31 (termino1 -> TIMES termino .)
    SWITCH          reduce using rule 31 (termino1 -> TIMES termino .)
    WHILE           reduce using rule 31 (termino1 -> TIMES termino .)
    FOR             reduce using rule 31 (termino1 -> TIMES termino .)
    RPAREN          reduce using rule 31 (termino1 -> TIMES termino .)
    COMMA           reduce using rule 31 (termino1 -> TIMES termino .)
    RBRACKET        reduce using rule 31 (termino1 -> TIMES termino .)
    RCURL           reduce using rule 31 (termino1 -> TIMES termino .)
    RETURN          reduce using rule 31 (termino1 -> TIMES termino .)
    CASE            reduce using rule 31 (termino1 -> TIMES termino .)
    DEFAULT         reduce using rule 31 (termino1 -> TIMES termino .)
    AND             reduce using rule 31 (termino1 -> TIMES termino .)
    OR              reduce using rule 31 (termino1 -> TIMES termino .)
    LESS            reduce using rule 31 (termino1 -> TIMES termino .)
    GREATER         reduce using rule 31 (termino1 -> TIMES termino .)
    DOUBLE_EQUAL    reduce using rule 31 (termino1 -> TIMES termino .)
    DIFF            reduce using rule 31 (termino1 -> TIMES termino .)


state 86

    (12) parametros -> tipo . parametros1 ID parametros2
    (14) parametros1 -> . AMPERSON
    (15) parametros1 -> . epsilon
    (124) epsilon -> .

    AMPERSON        shift and go to state 116
    ID              reduce using rule 124 (epsilon -> .)

    parametros1                    shift and go to state 115
    epsilon                        shift and go to state 114

state 87

    (113) funcion3 -> epsilon .

    RPAREN          reduce using rule 113 (funcion3 -> epsilon .)


state 88

    (115) funcion4 -> tipo ID LPAREN funcion3 . RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL

    RPAREN          shift and go to state 117


state 89

    (112) funcion3 -> parametros .

    RPAREN          reduce using rule 112 (funcion3 -> parametros .)


state 90

    (13) parametros -> VECTOR . tipo parametros1 ID parametros2
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 118

state 91

    (114) funcion4 -> VOID ID LPAREN funcion3 . RPAREN LCURL funcion1 estatuto funcion2 RCURL

    RPAREN          shift and go to state 119


state 92

    (44) while -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 120


state 93

    (86) print -> PRINT . LPAREN print1 RPAREN

    LPAREN          shift and go to state 121


state 94

    (57) estatuto -> for .

    ID              reduce using rule 57 (estatuto -> for .)
    PRINT           reduce using rule 57 (estatuto -> for .)
    IF              reduce using rule 57 (estatuto -> for .)
    SWITCH          reduce using rule 57 (estatuto -> for .)
    WHILE           reduce using rule 57 (estatuto -> for .)
    FOR             reduce using rule 57 (estatuto -> for .)
    INT             reduce using rule 57 (estatuto -> for .)
    FLOAT           reduce using rule 57 (estatuto -> for .)
    BOOL            reduce using rule 57 (estatuto -> for .)
    STRING          reduce using rule 57 (estatuto -> for .)
    RETURN          reduce using rule 57 (estatuto -> for .)
    RCURL           reduce using rule 57 (estatuto -> for .)
    CASE            reduce using rule 57 (estatuto -> for .)
    DEFAULT         reduce using rule 57 (estatuto -> for .)


state 95

    (39) main -> MAIN LCURL main1 estatuto . main2 RCURL
    (42) main2 -> . estatuto main2
    (43) main2 -> . epsilon
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (124) epsilon -> .
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    RCURL           reduce using rule 124 (epsilon -> .)
    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 105
    estatuto                       shift and go to state 122
    switch                         shift and go to state 106
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    epsilon                        shift and go to state 123
    print                          shift and go to state 99
    input                          shift and go to state 100
    main2                          shift and go to state 124
    inicializacion                 shift and go to state 102
    for                            shift and go to state 94
    while                          shift and go to state 107

state 96

    (51) estatuto -> llamada .

    ID              reduce using rule 51 (estatuto -> llamada .)
    PRINT           reduce using rule 51 (estatuto -> llamada .)
    IF              reduce using rule 51 (estatuto -> llamada .)
    SWITCH          reduce using rule 51 (estatuto -> llamada .)
    WHILE           reduce using rule 51 (estatuto -> llamada .)
    FOR             reduce using rule 51 (estatuto -> llamada .)
    INT             reduce using rule 51 (estatuto -> llamada .)
    FLOAT           reduce using rule 51 (estatuto -> llamada .)
    BOOL            reduce using rule 51 (estatuto -> llamada .)
    STRING          reduce using rule 51 (estatuto -> llamada .)
    RETURN          reduce using rule 51 (estatuto -> llamada .)
    RCURL           reduce using rule 51 (estatuto -> llamada .)
    CASE            reduce using rule 51 (estatuto -> llamada .)
    DEFAULT         reduce using rule 51 (estatuto -> llamada .)


state 97

    (116) switch -> SWITCH . ID switch1 LCURL switch2 switch3 RCURL

    ID              shift and go to state 125


state 98

    (54) estatuto -> condicion .

    ID              reduce using rule 54 (estatuto -> condicion .)
    PRINT           reduce using rule 54 (estatuto -> condicion .)
    IF              reduce using rule 54 (estatuto -> condicion .)
    SWITCH          reduce using rule 54 (estatuto -> condicion .)
    WHILE           reduce using rule 54 (estatuto -> condicion .)
    FOR             reduce using rule 54 (estatuto -> condicion .)
    INT             reduce using rule 54 (estatuto -> condicion .)
    FLOAT           reduce using rule 54 (estatuto -> condicion .)
    BOOL            reduce using rule 54 (estatuto -> condicion .)
    STRING          reduce using rule 54 (estatuto -> condicion .)
    RETURN          reduce using rule 54 (estatuto -> condicion .)
    RCURL           reduce using rule 54 (estatuto -> condicion .)
    CASE            reduce using rule 54 (estatuto -> condicion .)
    DEFAULT         reduce using rule 54 (estatuto -> condicion .)


state 99

    (52) estatuto -> print .

    ID              reduce using rule 52 (estatuto -> print .)
    PRINT           reduce using rule 52 (estatuto -> print .)
    IF              reduce using rule 52 (estatuto -> print .)
    SWITCH          reduce using rule 52 (estatuto -> print .)
    WHILE           reduce using rule 52 (estatuto -> print .)
    FOR             reduce using rule 52 (estatuto -> print .)
    INT             reduce using rule 52 (estatuto -> print .)
    FLOAT           reduce using rule 52 (estatuto -> print .)
    BOOL            reduce using rule 52 (estatuto -> print .)
    STRING          reduce using rule 52 (estatuto -> print .)
    RETURN          reduce using rule 52 (estatuto -> print .)
    RCURL           reduce using rule 52 (estatuto -> print .)
    CASE            reduce using rule 52 (estatuto -> print .)
    DEFAULT         reduce using rule 52 (estatuto -> print .)


state 100

    (53) estatuto -> input .

    ID              reduce using rule 53 (estatuto -> input .)
    PRINT           reduce using rule 53 (estatuto -> input .)
    IF              reduce using rule 53 (estatuto -> input .)
    SWITCH          reduce using rule 53 (estatuto -> input .)
    WHILE           reduce using rule 53 (estatuto -> input .)
    FOR             reduce using rule 53 (estatuto -> input .)
    INT             reduce using rule 53 (estatuto -> input .)
    FLOAT           reduce using rule 53 (estatuto -> input .)
    BOOL            reduce using rule 53 (estatuto -> input .)
    STRING          reduce using rule 53 (estatuto -> input .)
    RETURN          reduce using rule 53 (estatuto -> input .)
    RCURL           reduce using rule 53 (estatuto -> input .)
    CASE            reduce using rule 53 (estatuto -> input .)
    DEFAULT         reduce using rule 53 (estatuto -> input .)


state 101

    (102) for -> FOR . CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque

    CTE_INT         shift and go to state 126


state 102

    (50) estatuto -> inicializacion .

    ID              reduce using rule 50 (estatuto -> inicializacion .)
    PRINT           reduce using rule 50 (estatuto -> inicializacion .)
    IF              reduce using rule 50 (estatuto -> inicializacion .)
    SWITCH          reduce using rule 50 (estatuto -> inicializacion .)
    WHILE           reduce using rule 50 (estatuto -> inicializacion .)
    FOR             reduce using rule 50 (estatuto -> inicializacion .)
    INT             reduce using rule 50 (estatuto -> inicializacion .)
    FLOAT           reduce using rule 50 (estatuto -> inicializacion .)
    BOOL            reduce using rule 50 (estatuto -> inicializacion .)
    STRING          reduce using rule 50 (estatuto -> inicializacion .)
    RETURN          reduce using rule 50 (estatuto -> inicializacion .)
    RCURL           reduce using rule 50 (estatuto -> inicializacion .)
    CASE            reduce using rule 50 (estatuto -> inicializacion .)
    DEFAULT         reduce using rule 50 (estatuto -> inicializacion .)


state 103

    (18) inicializacion -> ID . EQUALS exp
    (69) llamada -> ID . LPAREN llamada1 RPAREN
    (99) input -> ID . EQUALS INPUT LPAREN input1 RPAREN

    EQUALS          shift and go to state 127
    LPAREN          shift and go to state 128


state 104

    (91) condicion -> IF . LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3

    LPAREN          shift and go to state 129


state 105

    (98) input -> tipo . ID EQUALS INPUT LPAREN input1 RPAREN

    ID              shift and go to state 130


state 106

    (55) estatuto -> switch .

    ID              reduce using rule 55 (estatuto -> switch .)
    PRINT           reduce using rule 55 (estatuto -> switch .)
    IF              reduce using rule 55 (estatuto -> switch .)
    SWITCH          reduce using rule 55 (estatuto -> switch .)
    WHILE           reduce using rule 55 (estatuto -> switch .)
    FOR             reduce using rule 55 (estatuto -> switch .)
    INT             reduce using rule 55 (estatuto -> switch .)
    FLOAT           reduce using rule 55 (estatuto -> switch .)
    BOOL            reduce using rule 55 (estatuto -> switch .)
    STRING          reduce using rule 55 (estatuto -> switch .)
    RETURN          reduce using rule 55 (estatuto -> switch .)
    RCURL           reduce using rule 55 (estatuto -> switch .)
    CASE            reduce using rule 55 (estatuto -> switch .)
    DEFAULT         reduce using rule 55 (estatuto -> switch .)


state 107

    (56) estatuto -> while .

    ID              reduce using rule 56 (estatuto -> while .)
    PRINT           reduce using rule 56 (estatuto -> while .)
    IF              reduce using rule 56 (estatuto -> while .)
    SWITCH          reduce using rule 56 (estatuto -> while .)
    WHILE           reduce using rule 56 (estatuto -> while .)
    FOR             reduce using rule 56 (estatuto -> while .)
    INT             reduce using rule 56 (estatuto -> while .)
    FLOAT           reduce using rule 56 (estatuto -> while .)
    BOOL            reduce using rule 56 (estatuto -> while .)
    STRING          reduce using rule 56 (estatuto -> while .)
    RETURN          reduce using rule 56 (estatuto -> while .)
    RCURL           reduce using rule 56 (estatuto -> while .)
    CASE            reduce using rule 56 (estatuto -> while .)
    DEFAULT         reduce using rule 56 (estatuto -> while .)


state 108

    (40) main1 -> var_declaracion main1 .

    ID              reduce using rule 40 (main1 -> var_declaracion main1 .)
    PRINT           reduce using rule 40 (main1 -> var_declaracion main1 .)
    IF              reduce using rule 40 (main1 -> var_declaracion main1 .)
    SWITCH          reduce using rule 40 (main1 -> var_declaracion main1 .)
    WHILE           reduce using rule 40 (main1 -> var_declaracion main1 .)
    FOR             reduce using rule 40 (main1 -> var_declaracion main1 .)
    INT             reduce using rule 40 (main1 -> var_declaracion main1 .)
    FLOAT           reduce using rule 40 (main1 -> var_declaracion main1 .)
    BOOL            reduce using rule 40 (main1 -> var_declaracion main1 .)
    STRING          reduce using rule 40 (main1 -> var_declaracion main1 .)


state 109

    (35) inicializacion_vector1 -> varcte . inicializacion_vector2
    (37) inicializacion_vector2 -> . COMMA varcte inicializacion_vector2
    (38) inicializacion_vector2 -> . epsilon
    (124) epsilon -> .

    COMMA           shift and go to state 133
    RBRACKET        reduce using rule 124 (epsilon -> .)

    inicializacion_vector2         shift and go to state 131
    epsilon                        shift and go to state 132

state 110

    (36) inicializacion_vector1 -> epsilon .

    RBRACKET        reduce using rule 36 (inicializacion_vector1 -> epsilon .)


state 111

    (34) inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 . RBRACKET

    RBRACKET        shift and go to state 134


state 112

    (80) varcte1 -> LPAREN exp . varcte2 RPAREN
    (82) varcte2 -> . epsilon
    (83) varcte2 -> . COMMA exp varcte2
    (124) epsilon -> .

    COMMA           shift and go to state 136
    RPAREN          reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 135
    varcte2                        shift and go to state 137

state 113

    (81) varcte1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 138


state 114

    (15) parametros1 -> epsilon .

    ID              reduce using rule 15 (parametros1 -> epsilon .)


state 115

    (12) parametros -> tipo parametros1 . ID parametros2

    ID              shift and go to state 139


state 116

    (14) parametros1 -> AMPERSON .

    ID              reduce using rule 14 (parametros1 -> AMPERSON .)


state 117

    (115) funcion4 -> tipo ID LPAREN funcion3 RPAREN . LCURL funcion1 estatuto funcion2 RETURN ID RCURL

    LCURL           shift and go to state 140


state 118

    (13) parametros -> VECTOR tipo . parametros1 ID parametros2
    (14) parametros1 -> . AMPERSON
    (15) parametros1 -> . epsilon
    (124) epsilon -> .

    AMPERSON        shift and go to state 116
    ID              reduce using rule 124 (epsilon -> .)

    parametros1                    shift and go to state 141
    epsilon                        shift and go to state 114

state 119

    (114) funcion4 -> VOID ID LPAREN funcion3 RPAREN . LCURL funcion1 estatuto funcion2 RCURL

    LCURL           shift and go to state 142


state 120

    (44) while -> WHILE LPAREN . expresion RPAREN bloque
    (58) expresion -> . expresion1
    (59) expresion1 -> . epsilon
    (60) expresion1 -> . expresion2 exp
    (124) epsilon -> .
    (61) expresion2 -> . LESS
    (62) expresion2 -> . GREATER
    (63) expresion2 -> . DOUBLE_EQUAL
    (64) expresion2 -> . DIFF

    RPAREN          reduce using rule 124 (epsilon -> .)
    LESS            shift and go to state 47
    GREATER         shift and go to state 51
    DOUBLE_EQUAL    shift and go to state 49
    DIFF            shift and go to state 50

    expresion                      shift and go to state 143
    expresion1                     shift and go to state 45
    expresion2                     shift and go to state 46
    epsilon                        shift and go to state 48

state 121

    (86) print -> PRINT LPAREN . print1 RPAREN
    (87) print1 -> . CTE_STRING print2
    (88) print1 -> . ID print2

    CTE_STRING      shift and go to state 145
    ID              shift and go to state 146

    print1                         shift and go to state 144

state 122

    (42) main2 -> estatuto . main2
    (42) main2 -> . estatuto main2
    (43) main2 -> . epsilon
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (124) epsilon -> .
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    RCURL           reduce using rule 124 (epsilon -> .)
    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 105
    estatuto                       shift and go to state 122
    switch                         shift and go to state 106
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    epsilon                        shift and go to state 123
    main2                          shift and go to state 147
    inicializacion                 shift and go to state 102
    for                            shift and go to state 94
    while                          shift and go to state 107

state 123

    (43) main2 -> epsilon .

    RCURL           reduce using rule 43 (main2 -> epsilon .)


state 124

    (39) main -> MAIN LCURL main1 estatuto main2 . RCURL

    RCURL           shift and go to state 148


state 125

    (116) switch -> SWITCH ID . switch1 LCURL switch2 switch3 RCURL
    (117) switch1 -> . epsilon
    (118) switch1 -> . LBRACKET exp RBRACKET
    (124) epsilon -> .

    LBRACKET        shift and go to state 150
    LCURL           reduce using rule 124 (epsilon -> .)

    switch1                        shift and go to state 149
    epsilon                        shift and go to state 151

state 126

    (102) for -> FOR CTE_INT . TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque

    TO              shift and go to state 152


state 127

    (18) inicializacion -> ID EQUALS . exp
    (99) input -> ID EQUALS . INPUT LPAREN input1 RPAREN
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    INPUT           shift and go to state 153
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 35
    factor                         shift and go to state 36

state 128

    (69) llamada -> ID LPAREN . llamada1 RPAREN
    (70) llamada1 -> . epsilon
    (71) llamada1 -> . exp llamada2
    (124) epsilon -> .
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon

    RPAREN          reduce using rule 124 (epsilon -> .)
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 154
    termino                        shift and go to state 34
    exp                            shift and go to state 155
    factor                         shift and go to state 36
    llamada1                       shift and go to state 156

state 129

    (91) condicion -> IF LPAREN . expresion_logica RPAREN condicion1 condicion2 condicion3
    (65) expresion_logica -> . exp expresion_logica1 expresion
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    expresion_logica               shift and go to state 157
    epsilon                        shift and go to state 32
    factor                         shift and go to state 36
    factor1                        shift and go to state 38
    exp                            shift and go to state 158
    termino                        shift and go to state 34

state 130

    (98) input -> tipo ID . EQUALS INPUT LPAREN input1 RPAREN

    EQUALS          shift and go to state 159


state 131

    (35) inicializacion_vector1 -> varcte inicializacion_vector2 .

    RBRACKET        reduce using rule 35 (inicializacion_vector1 -> varcte inicializacion_vector2 .)


state 132

    (38) inicializacion_vector2 -> epsilon .

    RBRACKET        reduce using rule 38 (inicializacion_vector2 -> epsilon .)


state 133

    (37) inicializacion_vector2 -> COMMA . varcte inicializacion_vector2
    (74) varcte -> . ID varcte1
    (75) varcte -> . CTE_INT
    (76) varcte -> . CTE_FLOAT
    (77) varcte -> . CTE_STRING
    (78) varcte -> . cte_bool
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE

    ID              shift and go to state 59
    CTE_INT         shift and go to state 57
    CTE_FLOAT       shift and go to state 55
    CTE_STRING      shift and go to state 52
    TRUE            shift and go to state 58
    FALSE           shift and go to state 53

    cte_bool                       shift and go to state 56
    varcte                         shift and go to state 160

state 134

    (34) inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .

    VECTOR          reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    INT             reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    FLOAT           reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    BOOL            reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    STRING          reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    FUNCTION        reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    MAIN            reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    ID              reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    PRINT           reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    IF              reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    SWITCH          reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    WHILE           reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)
    FOR             reduce using rule 34 (inicializacion_vector -> ID EQUALS LBRACKET inicializacion_vector1 RBRACKET .)


state 135

    (82) varcte2 -> epsilon .

    RPAREN          reduce using rule 82 (varcte2 -> epsilon .)


state 136

    (83) varcte2 -> COMMA . exp varcte2
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 161
    factor                         shift and go to state 36

state 137

    (80) varcte1 -> LPAREN exp varcte2 . RPAREN

    RPAREN          shift and go to state 162


state 138

    (81) varcte1 -> LBRACKET exp RBRACKET .

    ID              reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    CTE_INT         reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    CTE_FLOAT       reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    CTE_STRING      reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    TRUE            reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    FALSE           reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    VECTOR          reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    INT             reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    BOOL            reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    STRING          reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    FUNCTION        reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    MAIN            reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    PRINT           reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    IF              reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    SWITCH          reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    WHILE           reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    FOR             reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    RCURL           reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    RETURN          reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    CASE            reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    DEFAULT         reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    LESS            reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    GREATER         reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    DOUBLE_EQUAL    reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    DIFF            reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)
    COLON           reduce using rule 81 (varcte1 -> LBRACKET exp RBRACKET .)


state 139

    (12) parametros -> tipo parametros1 ID . parametros2
    (16) parametros2 -> . COMMA parametros
    (17) parametros2 -> . epsilon
    (124) epsilon -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 124 (epsilon -> .)

    parametros2                    shift and go to state 163
    epsilon                        shift and go to state 165

state 140

    (115) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL . funcion1 estatuto funcion2 RETURN ID RCURL
    (108) funcion1 -> . epsilon
    (109) funcion1 -> . var_declaracion funcion1
    (124) epsilon -> .
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . VECTOR tipo var_declaracion2
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    ID              reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    VECTOR          shift and go to state 8
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

  ! INT             [ reduce using rule 124 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 124 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 124 (epsilon -> .) ]
  ! STRING          [ reduce using rule 124 (epsilon -> .) ]

    tipo                           shift and go to state 5
    epsilon                        shift and go to state 166
    var_declaracion                shift and go to state 167
    funcion1                       shift and go to state 168

state 141

    (13) parametros -> VECTOR tipo parametros1 . ID parametros2

    ID              shift and go to state 169


state 142

    (114) funcion4 -> VOID ID LPAREN funcion3 RPAREN LCURL . funcion1 estatuto funcion2 RCURL
    (108) funcion1 -> . epsilon
    (109) funcion1 -> . var_declaracion funcion1
    (124) epsilon -> .
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . VECTOR tipo var_declaracion2
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    ID              reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    VECTOR          shift and go to state 8
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

  ! INT             [ reduce using rule 124 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 124 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 124 (epsilon -> .) ]
  ! STRING          [ reduce using rule 124 (epsilon -> .) ]

    tipo                           shift and go to state 5
    epsilon                        shift and go to state 166
    var_declaracion                shift and go to state 167
    funcion1                       shift and go to state 170

state 143

    (44) while -> WHILE LPAREN expresion . RPAREN bloque

    RPAREN          shift and go to state 171


state 144

    (86) print -> PRINT LPAREN print1 . RPAREN

    RPAREN          shift and go to state 172


state 145

    (87) print1 -> CTE_STRING . print2
    (89) print2 -> . epsilon
    (90) print2 -> . PLUS print1
    (124) epsilon -> .

    PLUS            shift and go to state 175
    RPAREN          reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 173
    print2                         shift and go to state 174

state 146

    (88) print1 -> ID . print2
    (89) print2 -> . epsilon
    (90) print2 -> . PLUS print1
    (124) epsilon -> .

    PLUS            shift and go to state 175
    RPAREN          reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 173
    print2                         shift and go to state 176

state 147

    (42) main2 -> estatuto main2 .

    RCURL           reduce using rule 42 (main2 -> estatuto main2 .)


state 148

    (39) main -> MAIN LCURL main1 estatuto main2 RCURL .

    END             reduce using rule 39 (main -> MAIN LCURL main1 estatuto main2 RCURL .)


state 149

    (116) switch -> SWITCH ID switch1 . LCURL switch2 switch3 RCURL

    LCURL           shift and go to state 177


state 150

    (118) switch1 -> LBRACKET . exp RBRACKET
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 178
    factor                         shift and go to state 36

state 151

    (117) switch1 -> epsilon .

    LCURL           reduce using rule 117 (switch1 -> epsilon .)


state 152

    (102) for -> FOR CTE_INT TO . CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque

    CTE_INT         shift and go to state 179


state 153

    (99) input -> ID EQUALS INPUT . LPAREN input1 RPAREN

    LPAREN          shift and go to state 180


state 154

    (70) llamada1 -> epsilon .
    (49) factor1 -> epsilon .

    RPAREN          reduce using rule 70 (llamada1 -> epsilon .)
    ID              reduce using rule 49 (factor1 -> epsilon .)
    CTE_INT         reduce using rule 49 (factor1 -> epsilon .)
    CTE_FLOAT       reduce using rule 49 (factor1 -> epsilon .)
    CTE_STRING      reduce using rule 49 (factor1 -> epsilon .)
    TRUE            reduce using rule 49 (factor1 -> epsilon .)
    FALSE           reduce using rule 49 (factor1 -> epsilon .)


state 155

    (71) llamada1 -> exp . llamada2
    (72) llamada2 -> . epsilon
    (73) llamada2 -> . COMMA exp llamada2
    (124) epsilon -> .

    COMMA           shift and go to state 183
    RPAREN          reduce using rule 124 (epsilon -> .)

    llamada2                       shift and go to state 181
    epsilon                        shift and go to state 182

state 156

    (69) llamada -> ID LPAREN llamada1 . RPAREN

    RPAREN          shift and go to state 184


state 157

    (91) condicion -> IF LPAREN expresion_logica . RPAREN condicion1 condicion2 condicion3

    RPAREN          shift and go to state 185


state 158

    (65) expresion_logica -> exp . expresion_logica1 expresion
    (66) expresion_logica1 -> . AND exp
    (67) expresion_logica1 -> . epsilon
    (68) expresion_logica1 -> . OR exp
    (124) epsilon -> .

    AND             shift and go to state 186
    OR              shift and go to state 189
    LESS            reduce using rule 124 (epsilon -> .)
    GREATER         reduce using rule 124 (epsilon -> .)
    DOUBLE_EQUAL    reduce using rule 124 (epsilon -> .)
    DIFF            reduce using rule 124 (epsilon -> .)
    RPAREN          reduce using rule 124 (epsilon -> .)

    expresion_logica1              shift and go to state 188
    epsilon                        shift and go to state 187

state 159

    (98) input -> tipo ID EQUALS . INPUT LPAREN input1 RPAREN

    INPUT           shift and go to state 190


state 160

    (37) inicializacion_vector2 -> COMMA varcte . inicializacion_vector2
    (37) inicializacion_vector2 -> . COMMA varcte inicializacion_vector2
    (38) inicializacion_vector2 -> . epsilon
    (124) epsilon -> .

    COMMA           shift and go to state 133
    RBRACKET        reduce using rule 124 (epsilon -> .)

    inicializacion_vector2         shift and go to state 191
    epsilon                        shift and go to state 132

state 161

    (83) varcte2 -> COMMA exp . varcte2
    (82) varcte2 -> . epsilon
    (83) varcte2 -> . COMMA exp varcte2
    (124) epsilon -> .

    COMMA           shift and go to state 136
    RPAREN          reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 135
    varcte2                        shift and go to state 192

state 162

    (80) varcte1 -> LPAREN exp varcte2 RPAREN .

    ID              reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    CTE_INT         reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    CTE_FLOAT       reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    CTE_STRING      reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    TRUE            reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    FALSE           reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    TIMES           reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    DIVIDE          reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    PLUS            reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    MINUS           reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    VECTOR          reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    INT             reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    FLOAT           reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    BOOL            reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    STRING          reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    FUNCTION        reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    MAIN            reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    PRINT           reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    IF              reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    SWITCH          reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    WHILE           reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    FOR             reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    RPAREN          reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    COMMA           reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    RBRACKET        reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    RCURL           reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    RETURN          reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    CASE            reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    DEFAULT         reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    AND             reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    OR              reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    LESS            reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    GREATER         reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    DOUBLE_EQUAL    reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    DIFF            reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)
    COLON           reduce using rule 80 (varcte1 -> LPAREN exp varcte2 RPAREN .)


state 163

    (12) parametros -> tipo parametros1 ID parametros2 .

    RPAREN          reduce using rule 12 (parametros -> tipo parametros1 ID parametros2 .)


state 164

    (16) parametros2 -> COMMA . parametros
    (12) parametros -> . tipo parametros1 ID parametros2
    (13) parametros -> . VECTOR tipo parametros1 ID parametros2
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    VECTOR          shift and go to state 90
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    parametros                     shift and go to state 193
    tipo                           shift and go to state 86

state 165

    (17) parametros2 -> epsilon .

    RPAREN          reduce using rule 17 (parametros2 -> epsilon .)


state 166

    (108) funcion1 -> epsilon .

    ID              reduce using rule 108 (funcion1 -> epsilon .)
    PRINT           reduce using rule 108 (funcion1 -> epsilon .)
    IF              reduce using rule 108 (funcion1 -> epsilon .)
    SWITCH          reduce using rule 108 (funcion1 -> epsilon .)
    WHILE           reduce using rule 108 (funcion1 -> epsilon .)
    FOR             reduce using rule 108 (funcion1 -> epsilon .)
    INT             reduce using rule 108 (funcion1 -> epsilon .)
    FLOAT           reduce using rule 108 (funcion1 -> epsilon .)
    BOOL            reduce using rule 108 (funcion1 -> epsilon .)
    STRING          reduce using rule 108 (funcion1 -> epsilon .)


state 167

    (109) funcion1 -> var_declaracion . funcion1
    (108) funcion1 -> . epsilon
    (109) funcion1 -> . var_declaracion funcion1
    (124) epsilon -> .
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . VECTOR tipo var_declaracion2
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    ID              reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    VECTOR          shift and go to state 8
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

  ! INT             [ reduce using rule 124 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 124 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 124 (epsilon -> .) ]
  ! STRING          [ reduce using rule 124 (epsilon -> .) ]

    tipo                           shift and go to state 5
    epsilon                        shift and go to state 166
    var_declaracion                shift and go to state 167
    funcion1                       shift and go to state 194

state 168

    (115) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 . estatuto funcion2 RETURN ID RCURL
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    for                            shift and go to state 94
    estatuto                       shift and go to state 195
    while                          shift and go to state 107
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    inicializacion                 shift and go to state 102
    tipo                           shift and go to state 105
    switch                         shift and go to state 106

state 169

    (13) parametros -> VECTOR tipo parametros1 ID . parametros2
    (16) parametros2 -> . COMMA parametros
    (17) parametros2 -> . epsilon
    (124) epsilon -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 124 (epsilon -> .)

    parametros2                    shift and go to state 196
    epsilon                        shift and go to state 165

state 170

    (114) funcion4 -> VOID ID LPAREN funcion3 RPAREN LCURL funcion1 . estatuto funcion2 RCURL
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 105
    estatuto                       shift and go to state 197
    while                          shift and go to state 107
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    inicializacion                 shift and go to state 102
    for                            shift and go to state 94
    switch                         shift and go to state 106

state 171

    (44) while -> WHILE LPAREN expresion RPAREN . bloque
    (23) bloque -> . LCURL estatuto bloque1 RCURL

    LCURL           shift and go to state 199

    bloque                         shift and go to state 198

state 172

    (86) print -> PRINT LPAREN print1 RPAREN .

    ID              reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    PRINT           reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    IF              reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    SWITCH          reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    WHILE           reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    FOR             reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    INT             reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    FLOAT           reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    BOOL            reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    STRING          reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    RCURL           reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    RETURN          reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    CASE            reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)
    DEFAULT         reduce using rule 86 (print -> PRINT LPAREN print1 RPAREN .)


state 173

    (89) print2 -> epsilon .

    RPAREN          reduce using rule 89 (print2 -> epsilon .)


state 174

    (87) print1 -> CTE_STRING print2 .

    RPAREN          reduce using rule 87 (print1 -> CTE_STRING print2 .)


state 175

    (90) print2 -> PLUS . print1
    (87) print1 -> . CTE_STRING print2
    (88) print1 -> . ID print2

    CTE_STRING      shift and go to state 145
    ID              shift and go to state 146

    print1                         shift and go to state 200

state 176

    (88) print1 -> ID print2 .

    RPAREN          reduce using rule 88 (print1 -> ID print2 .)


state 177

    (116) switch -> SWITCH ID switch1 LCURL . switch2 switch3 RCURL
    (119) switch2 -> . epsilon
    (120) switch2 -> . CASE varcte COLON switch4 switch2
    (124) epsilon -> .

    CASE            shift and go to state 201
    DEFAULT         reduce using rule 124 (epsilon -> .)

    switch2                        shift and go to state 202
    epsilon                        shift and go to state 203

state 178

    (118) switch1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 204


state 179

    (102) for -> FOR CTE_INT TO CTE_INT . BY LPAREN for1 CTE_INT RPAREN bloque

    BY              shift and go to state 205


state 180

    (99) input -> ID EQUALS INPUT LPAREN . input1 RPAREN
    (100) input1 -> . CTE_STRING
    (101) input1 -> . epsilon
    (124) epsilon -> .

    CTE_STRING      shift and go to state 206
    RPAREN          reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 208
    input1                         shift and go to state 207

state 181

    (71) llamada1 -> exp llamada2 .

    RPAREN          reduce using rule 71 (llamada1 -> exp llamada2 .)


state 182

    (72) llamada2 -> epsilon .

    RPAREN          reduce using rule 72 (llamada2 -> epsilon .)


state 183

    (73) llamada2 -> COMMA . exp llamada2
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 209
    factor                         shift and go to state 36

state 184

    (69) llamada -> ID LPAREN llamada1 RPAREN .

    ID              reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    PRINT           reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    IF              reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    SWITCH          reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    WHILE           reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    FOR             reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    INT             reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    FLOAT           reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    BOOL            reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    STRING          reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    RETURN          reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    RCURL           reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    CASE            reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)
    DEFAULT         reduce using rule 69 (llamada -> ID LPAREN llamada1 RPAREN .)


state 185

    (91) condicion -> IF LPAREN expresion_logica RPAREN . condicion1 condicion2 condicion3
    (92) condicion1 -> . bloque
    (93) condicion1 -> . LCURL bloque RCURL
    (23) bloque -> . LCURL estatuto bloque1 RCURL

    LCURL           shift and go to state 212

    condicion1                     shift and go to state 210
    bloque                         shift and go to state 211

state 186

    (66) expresion_logica1 -> AND . exp
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 213
    factor                         shift and go to state 36

state 187

    (67) expresion_logica1 -> epsilon .

    LESS            reduce using rule 67 (expresion_logica1 -> epsilon .)
    GREATER         reduce using rule 67 (expresion_logica1 -> epsilon .)
    DOUBLE_EQUAL    reduce using rule 67 (expresion_logica1 -> epsilon .)
    DIFF            reduce using rule 67 (expresion_logica1 -> epsilon .)
    RPAREN          reduce using rule 67 (expresion_logica1 -> epsilon .)


state 188

    (65) expresion_logica -> exp expresion_logica1 . expresion
    (58) expresion -> . expresion1
    (59) expresion1 -> . epsilon
    (60) expresion1 -> . expresion2 exp
    (124) epsilon -> .
    (61) expresion2 -> . LESS
    (62) expresion2 -> . GREATER
    (63) expresion2 -> . DOUBLE_EQUAL
    (64) expresion2 -> . DIFF

    RPAREN          reduce using rule 124 (epsilon -> .)
    LESS            shift and go to state 47
    GREATER         shift and go to state 51
    DOUBLE_EQUAL    shift and go to state 49
    DIFF            shift and go to state 50

    expresion                      shift and go to state 214
    expresion1                     shift and go to state 45
    expresion2                     shift and go to state 46
    epsilon                        shift and go to state 48

state 189

    (68) expresion_logica1 -> OR . exp
    (26) exp -> . termino exp1
    (30) termino -> . factor termino1
    (45) factor -> . LPAREN expresion RPAREN
    (46) factor -> . factor1 varcte
    (47) factor1 -> . PLUS varcte
    (48) factor1 -> . MINUS varcte
    (49) factor1 -> . epsilon
    (124) epsilon -> .

    LPAREN          shift and go to state 31
    PLUS            shift and go to state 33
    MINUS           shift and go to state 37
    ID              reduce using rule 124 (epsilon -> .)
    CTE_INT         reduce using rule 124 (epsilon -> .)
    CTE_FLOAT       reduce using rule 124 (epsilon -> .)
    CTE_STRING      reduce using rule 124 (epsilon -> .)
    TRUE            reduce using rule 124 (epsilon -> .)
    FALSE           reduce using rule 124 (epsilon -> .)

    factor1                        shift and go to state 38
    epsilon                        shift and go to state 32
    termino                        shift and go to state 34
    exp                            shift and go to state 215
    factor                         shift and go to state 36

state 190

    (98) input -> tipo ID EQUALS INPUT . LPAREN input1 RPAREN

    LPAREN          shift and go to state 216


state 191

    (37) inicializacion_vector2 -> COMMA varcte inicializacion_vector2 .

    RBRACKET        reduce using rule 37 (inicializacion_vector2 -> COMMA varcte inicializacion_vector2 .)


state 192

    (83) varcte2 -> COMMA exp varcte2 .

    RPAREN          reduce using rule 83 (varcte2 -> COMMA exp varcte2 .)


state 193

    (16) parametros2 -> COMMA parametros .

    RPAREN          reduce using rule 16 (parametros2 -> COMMA parametros .)


state 194

    (109) funcion1 -> var_declaracion funcion1 .

    ID              reduce using rule 109 (funcion1 -> var_declaracion funcion1 .)
    PRINT           reduce using rule 109 (funcion1 -> var_declaracion funcion1 .)
    IF              reduce using rule 109 (funcion1 -> var_declaracion funcion1 .)
    SWITCH          reduce using rule 109 (funcion1 -> var_declaracion funcion1 .)
    WHILE           reduce using rule 109 (funcion1 -> var_declaracion funcion1 .)
    FOR             reduce using rule 109 (funcion1 -> var_declaracion funcion1 .)
    INT             reduce using rule 109 (funcion1 -> var_declaracion funcion1 .)
    FLOAT           reduce using rule 109 (funcion1 -> var_declaracion funcion1 .)
    BOOL            reduce using rule 109 (funcion1 -> var_declaracion funcion1 .)
    STRING          reduce using rule 109 (funcion1 -> var_declaracion funcion1 .)


state 195

    (115) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto . funcion2 RETURN ID RCURL
    (110) funcion2 -> . epsilon
    (111) funcion2 -> . estatuto funcion2
    (124) epsilon -> .
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    RETURN          reduce using rule 124 (epsilon -> .)
    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    funcion2                       shift and go to state 217
    for                            shift and go to state 94
    estatuto                       shift and go to state 218
    while                          shift and go to state 107
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    epsilon                        shift and go to state 219
    inicializacion                 shift and go to state 102
    tipo                           shift and go to state 105
    switch                         shift and go to state 106

state 196

    (13) parametros -> VECTOR tipo parametros1 ID parametros2 .

    RPAREN          reduce using rule 13 (parametros -> VECTOR tipo parametros1 ID parametros2 .)


state 197

    (114) funcion4 -> VOID ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto . funcion2 RCURL
    (110) funcion2 -> . epsilon
    (111) funcion2 -> . estatuto funcion2
    (124) epsilon -> .
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    RCURL           reduce using rule 124 (epsilon -> .)
    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    funcion2                       shift and go to state 220
    tipo                           shift and go to state 105
    estatuto                       shift and go to state 218
    while                          shift and go to state 107
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    epsilon                        shift and go to state 219
    inicializacion                 shift and go to state 102
    for                            shift and go to state 94
    switch                         shift and go to state 106

state 198

    (44) while -> WHILE LPAREN expresion RPAREN bloque .

    ID              reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    SWITCH          reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    FOR             reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    INT             reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    FLOAT           reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    BOOL            reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    STRING          reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    RCURL           reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    RETURN          reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    CASE            reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)
    DEFAULT         reduce using rule 44 (while -> WHILE LPAREN expresion RPAREN bloque .)


state 199

    (23) bloque -> LCURL . estatuto bloque1 RCURL
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 105
    estatuto                       shift and go to state 221
    switch                         shift and go to state 106
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    inicializacion                 shift and go to state 102
    for                            shift and go to state 94
    while                          shift and go to state 107

state 200

    (90) print2 -> PLUS print1 .

    RPAREN          reduce using rule 90 (print2 -> PLUS print1 .)


state 201

    (120) switch2 -> CASE . varcte COLON switch4 switch2
    (74) varcte -> . ID varcte1
    (75) varcte -> . CTE_INT
    (76) varcte -> . CTE_FLOAT
    (77) varcte -> . CTE_STRING
    (78) varcte -> . cte_bool
    (84) cte_bool -> . TRUE
    (85) cte_bool -> . FALSE

    ID              shift and go to state 59
    CTE_INT         shift and go to state 57
    CTE_FLOAT       shift and go to state 55
    CTE_STRING      shift and go to state 52
    TRUE            shift and go to state 58
    FALSE           shift and go to state 53

    cte_bool                       shift and go to state 56
    varcte                         shift and go to state 222

state 202

    (116) switch -> SWITCH ID switch1 LCURL switch2 . switch3 RCURL
    (121) switch3 -> . DEFAULT COLON switch4

    DEFAULT         shift and go to state 224

    switch3                        shift and go to state 223

state 203

    (119) switch2 -> epsilon .

    DEFAULT         reduce using rule 119 (switch2 -> epsilon .)


state 204

    (118) switch1 -> LBRACKET exp RBRACKET .

    LCURL           reduce using rule 118 (switch1 -> LBRACKET exp RBRACKET .)


state 205

    (102) for -> FOR CTE_INT TO CTE_INT BY . LPAREN for1 CTE_INT RPAREN bloque

    LPAREN          shift and go to state 225


state 206

    (100) input1 -> CTE_STRING .

    RPAREN          reduce using rule 100 (input1 -> CTE_STRING .)


state 207

    (99) input -> ID EQUALS INPUT LPAREN input1 . RPAREN

    RPAREN          shift and go to state 226


state 208

    (101) input1 -> epsilon .

    RPAREN          reduce using rule 101 (input1 -> epsilon .)


state 209

    (73) llamada2 -> COMMA exp . llamada2
    (72) llamada2 -> . epsilon
    (73) llamada2 -> . COMMA exp llamada2
    (124) epsilon -> .

    COMMA           shift and go to state 183
    RPAREN          reduce using rule 124 (epsilon -> .)

    llamada2                       shift and go to state 227
    epsilon                        shift and go to state 182

state 210

    (91) condicion -> IF LPAREN expresion_logica RPAREN condicion1 . condicion2 condicion3
    (94) condicion2 -> . ELSEIF condicion1 condicion2
    (95) condicion2 -> . epsilon
    (124) epsilon -> .

    ELSEIF          shift and go to state 230
    ELSE            reduce using rule 124 (epsilon -> .)
    ID              reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    INT             reduce using rule 124 (epsilon -> .)
    FLOAT           reduce using rule 124 (epsilon -> .)
    BOOL            reduce using rule 124 (epsilon -> .)
    STRING          reduce using rule 124 (epsilon -> .)
    RCURL           reduce using rule 124 (epsilon -> .)
    RETURN          reduce using rule 124 (epsilon -> .)
    CASE            reduce using rule 124 (epsilon -> .)
    DEFAULT         reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 228
    condicion2                     shift and go to state 229

state 211

    (92) condicion1 -> bloque .

    ELSEIF          reduce using rule 92 (condicion1 -> bloque .)
    ELSE            reduce using rule 92 (condicion1 -> bloque .)
    ID              reduce using rule 92 (condicion1 -> bloque .)
    PRINT           reduce using rule 92 (condicion1 -> bloque .)
    IF              reduce using rule 92 (condicion1 -> bloque .)
    SWITCH          reduce using rule 92 (condicion1 -> bloque .)
    WHILE           reduce using rule 92 (condicion1 -> bloque .)
    FOR             reduce using rule 92 (condicion1 -> bloque .)
    INT             reduce using rule 92 (condicion1 -> bloque .)
    FLOAT           reduce using rule 92 (condicion1 -> bloque .)
    BOOL            reduce using rule 92 (condicion1 -> bloque .)
    STRING          reduce using rule 92 (condicion1 -> bloque .)
    RCURL           reduce using rule 92 (condicion1 -> bloque .)
    RETURN          reduce using rule 92 (condicion1 -> bloque .)
    CASE            reduce using rule 92 (condicion1 -> bloque .)
    DEFAULT         reduce using rule 92 (condicion1 -> bloque .)


state 212

    (93) condicion1 -> LCURL . bloque RCURL
    (23) bloque -> LCURL . estatuto bloque1 RCURL
    (23) bloque -> . LCURL estatuto bloque1 RCURL
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    LCURL           shift and go to state 199
    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    bloque                         shift and go to state 231
    tipo                           shift and go to state 105
    estatuto                       shift and go to state 221
    switch                         shift and go to state 106
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    inicializacion                 shift and go to state 102
    for                            shift and go to state 94
    while                          shift and go to state 107

state 213

    (66) expresion_logica1 -> AND exp .

    LESS            reduce using rule 66 (expresion_logica1 -> AND exp .)
    GREATER         reduce using rule 66 (expresion_logica1 -> AND exp .)
    DOUBLE_EQUAL    reduce using rule 66 (expresion_logica1 -> AND exp .)
    DIFF            reduce using rule 66 (expresion_logica1 -> AND exp .)
    RPAREN          reduce using rule 66 (expresion_logica1 -> AND exp .)


state 214

    (65) expresion_logica -> exp expresion_logica1 expresion .

    RPAREN          reduce using rule 65 (expresion_logica -> exp expresion_logica1 expresion .)


state 215

    (68) expresion_logica1 -> OR exp .

    LESS            reduce using rule 68 (expresion_logica1 -> OR exp .)
    GREATER         reduce using rule 68 (expresion_logica1 -> OR exp .)
    DOUBLE_EQUAL    reduce using rule 68 (expresion_logica1 -> OR exp .)
    DIFF            reduce using rule 68 (expresion_logica1 -> OR exp .)
    RPAREN          reduce using rule 68 (expresion_logica1 -> OR exp .)


state 216

    (98) input -> tipo ID EQUALS INPUT LPAREN . input1 RPAREN
    (100) input1 -> . CTE_STRING
    (101) input1 -> . epsilon
    (124) epsilon -> .

    CTE_STRING      shift and go to state 206
    RPAREN          reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 208
    input1                         shift and go to state 232

state 217

    (115) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 . RETURN ID RCURL

    RETURN          shift and go to state 233


state 218

    (111) funcion2 -> estatuto . funcion2
    (110) funcion2 -> . epsilon
    (111) funcion2 -> . estatuto funcion2
    (124) epsilon -> .
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    RETURN          reduce using rule 124 (epsilon -> .)
    RCURL           reduce using rule 124 (epsilon -> .)
    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    funcion2                       shift and go to state 234
    tipo                           shift and go to state 105
    estatuto                       shift and go to state 218
    while                          shift and go to state 107
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    epsilon                        shift and go to state 219
    inicializacion                 shift and go to state 102
    for                            shift and go to state 94
    switch                         shift and go to state 106

state 219

    (110) funcion2 -> epsilon .

    RETURN          reduce using rule 110 (funcion2 -> epsilon .)
    RCURL           reduce using rule 110 (funcion2 -> epsilon .)


state 220

    (114) funcion4 -> VOID ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 . RCURL

    RCURL           shift and go to state 235


state 221

    (23) bloque -> LCURL estatuto . bloque1 RCURL
    (24) bloque1 -> . estatuto bloque1
    (25) bloque1 -> . epsilon
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (124) epsilon -> .
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    RCURL           reduce using rule 124 (epsilon -> .)
    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 105
    estatuto                       shift and go to state 236
    switch                         shift and go to state 106
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    epsilon                        shift and go to state 237
    inicializacion                 shift and go to state 102
    bloque1                        shift and go to state 238
    for                            shift and go to state 94
    while                          shift and go to state 107

state 222

    (120) switch2 -> CASE varcte . COLON switch4 switch2

    COLON           shift and go to state 239


state 223

    (116) switch -> SWITCH ID switch1 LCURL switch2 switch3 . RCURL

    RCURL           shift and go to state 240


state 224

    (121) switch3 -> DEFAULT . COLON switch4

    COLON           shift and go to state 241


state 225

    (102) for -> FOR CTE_INT TO CTE_INT BY LPAREN . for1 CTE_INT RPAREN bloque
    (103) for1 -> . PLUS
    (104) for1 -> . TIMES
    (105) for1 -> . DIVIDE
    (106) for1 -> . MINUS

    PLUS            shift and go to state 244
    TIMES           shift and go to state 243
    DIVIDE          shift and go to state 242
    MINUS           shift and go to state 246

    for1                           shift and go to state 245

state 226

    (99) input -> ID EQUALS INPUT LPAREN input1 RPAREN .

    ID              reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    PRINT           reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    IF              reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    SWITCH          reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    WHILE           reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    FOR             reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    INT             reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    FLOAT           reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    BOOL            reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    STRING          reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    RCURL           reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    RETURN          reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    CASE            reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    DEFAULT         reduce using rule 99 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)


state 227

    (73) llamada2 -> COMMA exp llamada2 .

    RPAREN          reduce using rule 73 (llamada2 -> COMMA exp llamada2 .)


state 228

    (95) condicion2 -> epsilon .

    ELSE            reduce using rule 95 (condicion2 -> epsilon .)
    ID              reduce using rule 95 (condicion2 -> epsilon .)
    PRINT           reduce using rule 95 (condicion2 -> epsilon .)
    IF              reduce using rule 95 (condicion2 -> epsilon .)
    SWITCH          reduce using rule 95 (condicion2 -> epsilon .)
    WHILE           reduce using rule 95 (condicion2 -> epsilon .)
    FOR             reduce using rule 95 (condicion2 -> epsilon .)
    INT             reduce using rule 95 (condicion2 -> epsilon .)
    FLOAT           reduce using rule 95 (condicion2 -> epsilon .)
    BOOL            reduce using rule 95 (condicion2 -> epsilon .)
    STRING          reduce using rule 95 (condicion2 -> epsilon .)
    RCURL           reduce using rule 95 (condicion2 -> epsilon .)
    RETURN          reduce using rule 95 (condicion2 -> epsilon .)
    CASE            reduce using rule 95 (condicion2 -> epsilon .)
    DEFAULT         reduce using rule 95 (condicion2 -> epsilon .)


state 229

    (91) condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 . condicion3
    (96) condicion3 -> . ELSE condicion1
    (97) condicion3 -> . epsilon
    (124) epsilon -> .

    ELSE            shift and go to state 248
    ID              reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    INT             reduce using rule 124 (epsilon -> .)
    FLOAT           reduce using rule 124 (epsilon -> .)
    BOOL            reduce using rule 124 (epsilon -> .)
    STRING          reduce using rule 124 (epsilon -> .)
    RCURL           reduce using rule 124 (epsilon -> .)
    RETURN          reduce using rule 124 (epsilon -> .)
    CASE            reduce using rule 124 (epsilon -> .)
    DEFAULT         reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 247
    condicion3                     shift and go to state 249

state 230

    (94) condicion2 -> ELSEIF . condicion1 condicion2
    (92) condicion1 -> . bloque
    (93) condicion1 -> . LCURL bloque RCURL
    (23) bloque -> . LCURL estatuto bloque1 RCURL

    LCURL           shift and go to state 212

    bloque                         shift and go to state 211
    condicion1                     shift and go to state 250

state 231

    (93) condicion1 -> LCURL bloque . RCURL

    RCURL           shift and go to state 251


state 232

    (98) input -> tipo ID EQUALS INPUT LPAREN input1 . RPAREN

    RPAREN          shift and go to state 252


state 233

    (115) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN . ID RCURL

    ID              shift and go to state 253


state 234

    (111) funcion2 -> estatuto funcion2 .

    RETURN          reduce using rule 111 (funcion2 -> estatuto funcion2 .)
    RCURL           reduce using rule 111 (funcion2 -> estatuto funcion2 .)


state 235

    (114) funcion4 -> VOID ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL .

    FUNCTION        reduce using rule 114 (funcion4 -> VOID ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL .)
    MAIN            reduce using rule 114 (funcion4 -> VOID ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL .)


state 236

    (24) bloque1 -> estatuto . bloque1
    (24) bloque1 -> . estatuto bloque1
    (25) bloque1 -> . epsilon
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (124) epsilon -> .
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    RCURL           reduce using rule 124 (epsilon -> .)
    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 105
    estatuto                       shift and go to state 236
    switch                         shift and go to state 106
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    epsilon                        shift and go to state 237
    inicializacion                 shift and go to state 102
    bloque1                        shift and go to state 254
    for                            shift and go to state 94
    while                          shift and go to state 107

state 237

    (25) bloque1 -> epsilon .

    RCURL           reduce using rule 25 (bloque1 -> epsilon .)


state 238

    (23) bloque -> LCURL estatuto bloque1 . RCURL

    RCURL           shift and go to state 255


state 239

    (120) switch2 -> CASE varcte COLON . switch4 switch2
    (122) switch4 -> . LCURL PASS RCURL
    (123) switch4 -> . estatuto
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    LCURL           shift and go to state 256
    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    for                            shift and go to state 94
    estatuto                       shift and go to state 257
    switch                         shift and go to state 106
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    inicializacion                 shift and go to state 102
    tipo                           shift and go to state 105
    switch4                        shift and go to state 258
    while                          shift and go to state 107

state 240

    (116) switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .

    RCURL           reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    ID              reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    PRINT           reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    IF              reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    SWITCH          reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    WHILE           reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    FOR             reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    INT             reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    FLOAT           reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    BOOL            reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    STRING          reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    RETURN          reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    CASE            reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)
    DEFAULT         reduce using rule 116 (switch -> SWITCH ID switch1 LCURL switch2 switch3 RCURL .)


state 241

    (121) switch3 -> DEFAULT COLON . switch4
    (122) switch4 -> . LCURL PASS RCURL
    (123) switch4 -> . estatuto
    (50) estatuto -> . inicializacion
    (51) estatuto -> . llamada
    (52) estatuto -> . print
    (53) estatuto -> . input
    (54) estatuto -> . condicion
    (55) estatuto -> . switch
    (56) estatuto -> . while
    (57) estatuto -> . for
    (18) inicializacion -> . ID EQUALS exp
    (69) llamada -> . ID LPAREN llamada1 RPAREN
    (86) print -> . PRINT LPAREN print1 RPAREN
    (98) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (99) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (91) condicion -> . IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3
    (116) switch -> . SWITCH ID switch1 LCURL switch2 switch3 RCURL
    (44) while -> . WHILE LPAREN expresion RPAREN bloque
    (102) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque
    (19) tipo -> . INT
    (20) tipo -> . FLOAT
    (21) tipo -> . BOOL
    (22) tipo -> . STRING

    LCURL           shift and go to state 256
    ID              shift and go to state 103
    PRINT           shift and go to state 93
    IF              shift and go to state 104
    SWITCH          shift and go to state 97
    WHILE           shift and go to state 92
    FOR             shift and go to state 101
    INT             shift and go to state 11
    FLOAT           shift and go to state 3
    BOOL            shift and go to state 9
    STRING          shift and go to state 4

    tipo                           shift and go to state 105
    estatuto                       shift and go to state 257
    switch                         shift and go to state 106
    llamada                        shift and go to state 96
    condicion                      shift and go to state 98
    print                          shift and go to state 99
    input                          shift and go to state 100
    inicializacion                 shift and go to state 102
    for                            shift and go to state 94
    switch4                        shift and go to state 259
    while                          shift and go to state 107

state 242

    (105) for1 -> DIVIDE .

    CTE_INT         reduce using rule 105 (for1 -> DIVIDE .)


state 243

    (104) for1 -> TIMES .

    CTE_INT         reduce using rule 104 (for1 -> TIMES .)


state 244

    (103) for1 -> PLUS .

    CTE_INT         reduce using rule 103 (for1 -> PLUS .)


state 245

    (102) for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 . CTE_INT RPAREN bloque

    CTE_INT         shift and go to state 260


state 246

    (106) for1 -> MINUS .

    CTE_INT         reduce using rule 106 (for1 -> MINUS .)


state 247

    (97) condicion3 -> epsilon .

    ID              reduce using rule 97 (condicion3 -> epsilon .)
    PRINT           reduce using rule 97 (condicion3 -> epsilon .)
    IF              reduce using rule 97 (condicion3 -> epsilon .)
    SWITCH          reduce using rule 97 (condicion3 -> epsilon .)
    WHILE           reduce using rule 97 (condicion3 -> epsilon .)
    FOR             reduce using rule 97 (condicion3 -> epsilon .)
    INT             reduce using rule 97 (condicion3 -> epsilon .)
    FLOAT           reduce using rule 97 (condicion3 -> epsilon .)
    BOOL            reduce using rule 97 (condicion3 -> epsilon .)
    STRING          reduce using rule 97 (condicion3 -> epsilon .)
    RCURL           reduce using rule 97 (condicion3 -> epsilon .)
    RETURN          reduce using rule 97 (condicion3 -> epsilon .)
    CASE            reduce using rule 97 (condicion3 -> epsilon .)
    DEFAULT         reduce using rule 97 (condicion3 -> epsilon .)


state 248

    (96) condicion3 -> ELSE . condicion1
    (92) condicion1 -> . bloque
    (93) condicion1 -> . LCURL bloque RCURL
    (23) bloque -> . LCURL estatuto bloque1 RCURL

    LCURL           shift and go to state 212

    bloque                         shift and go to state 211
    condicion1                     shift and go to state 261

state 249

    (91) condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .

    ID              reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    PRINT           reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    IF              reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    SWITCH          reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    WHILE           reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    FOR             reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    INT             reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    FLOAT           reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    BOOL            reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    STRING          reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    RCURL           reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    RETURN          reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    CASE            reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)
    DEFAULT         reduce using rule 91 (condicion -> IF LPAREN expresion_logica RPAREN condicion1 condicion2 condicion3 .)


state 250

    (94) condicion2 -> ELSEIF condicion1 . condicion2
    (94) condicion2 -> . ELSEIF condicion1 condicion2
    (95) condicion2 -> . epsilon
    (124) epsilon -> .

    ELSEIF          shift and go to state 230
    ELSE            reduce using rule 124 (epsilon -> .)
    ID              reduce using rule 124 (epsilon -> .)
    PRINT           reduce using rule 124 (epsilon -> .)
    IF              reduce using rule 124 (epsilon -> .)
    SWITCH          reduce using rule 124 (epsilon -> .)
    WHILE           reduce using rule 124 (epsilon -> .)
    FOR             reduce using rule 124 (epsilon -> .)
    INT             reduce using rule 124 (epsilon -> .)
    FLOAT           reduce using rule 124 (epsilon -> .)
    BOOL            reduce using rule 124 (epsilon -> .)
    STRING          reduce using rule 124 (epsilon -> .)
    RCURL           reduce using rule 124 (epsilon -> .)
    RETURN          reduce using rule 124 (epsilon -> .)
    CASE            reduce using rule 124 (epsilon -> .)
    DEFAULT         reduce using rule 124 (epsilon -> .)

    epsilon                        shift and go to state 228
    condicion2                     shift and go to state 262

state 251

    (93) condicion1 -> LCURL bloque RCURL .

    ELSEIF          reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    ELSE            reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    ID              reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    PRINT           reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    IF              reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    SWITCH          reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    WHILE           reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    FOR             reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    INT             reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    FLOAT           reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    BOOL            reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    STRING          reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    RCURL           reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    RETURN          reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    CASE            reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)
    DEFAULT         reduce using rule 93 (condicion1 -> LCURL bloque RCURL .)


state 252

    (98) input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .

    ID              reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    PRINT           reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    IF              reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    SWITCH          reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    WHILE           reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    FOR             reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    INT             reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    FLOAT           reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    BOOL            reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    STRING          reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    RCURL           reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    RETURN          reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    CASE            reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    DEFAULT         reduce using rule 98 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)


state 253

    (115) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID . RCURL

    RCURL           shift and go to state 263


state 254

    (24) bloque1 -> estatuto bloque1 .

    RCURL           reduce using rule 24 (bloque1 -> estatuto bloque1 .)


state 255

    (23) bloque -> LCURL estatuto bloque1 RCURL .

    ELSEIF          reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    ELSE            reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    ID              reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    PRINT           reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    IF              reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    SWITCH          reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    WHILE           reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    FOR             reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    INT             reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    FLOAT           reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    BOOL            reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    STRING          reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    RCURL           reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    RETURN          reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    CASE            reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)
    DEFAULT         reduce using rule 23 (bloque -> LCURL estatuto bloque1 RCURL .)


state 256

    (122) switch4 -> LCURL . PASS RCURL

    PASS            shift and go to state 264


state 257

    (123) switch4 -> estatuto .

    RCURL           reduce using rule 123 (switch4 -> estatuto .)
    CASE            reduce using rule 123 (switch4 -> estatuto .)
    DEFAULT         reduce using rule 123 (switch4 -> estatuto .)


state 258

    (120) switch2 -> CASE varcte COLON switch4 . switch2
    (119) switch2 -> . epsilon
    (120) switch2 -> . CASE varcte COLON switch4 switch2
    (124) epsilon -> .

    CASE            shift and go to state 201
    DEFAULT         reduce using rule 124 (epsilon -> .)

    switch2                        shift and go to state 265
    epsilon                        shift and go to state 203

state 259

    (121) switch3 -> DEFAULT COLON switch4 .

    RCURL           reduce using rule 121 (switch3 -> DEFAULT COLON switch4 .)


state 260

    (102) for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT . RPAREN bloque

    RPAREN          shift and go to state 266


state 261

    (96) condicion3 -> ELSE condicion1 .

    ID              reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    PRINT           reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    IF              reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    SWITCH          reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    WHILE           reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    FOR             reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    INT             reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    FLOAT           reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    BOOL            reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    STRING          reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    RCURL           reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    RETURN          reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    CASE            reduce using rule 96 (condicion3 -> ELSE condicion1 .)
    DEFAULT         reduce using rule 96 (condicion3 -> ELSE condicion1 .)


state 262

    (94) condicion2 -> ELSEIF condicion1 condicion2 .

    ELSE            reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    ID              reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    PRINT           reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    IF              reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    SWITCH          reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    WHILE           reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    FOR             reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    INT             reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    FLOAT           reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    BOOL            reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    STRING          reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    RCURL           reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    RETURN          reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    CASE            reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)
    DEFAULT         reduce using rule 94 (condicion2 -> ELSEIF condicion1 condicion2 .)


state 263

    (115) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL .

    FUNCTION        reduce using rule 115 (funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL .)
    MAIN            reduce using rule 115 (funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL .)


state 264

    (122) switch4 -> LCURL PASS . RCURL

    RCURL           shift and go to state 267


state 265

    (120) switch2 -> CASE varcte COLON switch4 switch2 .

    DEFAULT         reduce using rule 120 (switch2 -> CASE varcte COLON switch4 switch2 .)


state 266

    (102) for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN . bloque
    (23) bloque -> . LCURL estatuto bloque1 RCURL

    LCURL           shift and go to state 199

    bloque                         shift and go to state 268

state 267

    (122) switch4 -> LCURL PASS RCURL .

    RCURL           reduce using rule 122 (switch4 -> LCURL PASS RCURL .)
    CASE            reduce using rule 122 (switch4 -> LCURL PASS RCURL .)
    DEFAULT         reduce using rule 122 (switch4 -> LCURL PASS RCURL .)


state 268

    (102) for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .

    ID              reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    PRINT           reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    IF              reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    SWITCH          reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    WHILE           reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    FOR             reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    INT             reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    FLOAT           reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    BOOL            reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    STRING          reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    RCURL           reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    RETURN          reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    CASE            reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)
    DEFAULT         reduce using rule 102 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 42 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 42 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 42 resolved as shift
WARNING: shift/reduce conflict for STRING in state 42 resolved as shift
WARNING: shift/reduce conflict for INT in state 73 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 73 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 73 resolved as shift
WARNING: shift/reduce conflict for STRING in state 73 resolved as shift
WARNING: shift/reduce conflict for INT in state 140 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 140 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 140 resolved as shift
WARNING: shift/reduce conflict for STRING in state 140 resolved as shift
WARNING: shift/reduce conflict for INT in state 142 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 142 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 142 resolved as shift
WARNING: shift/reduce conflict for STRING in state 142 resolved as shift
WARNING: shift/reduce conflict for INT in state 167 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 167 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 167 resolved as shift
WARNING: shift/reduce conflict for STRING in state 167 resolved as shift
