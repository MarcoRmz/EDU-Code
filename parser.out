Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> START programa1 programa2 main END
Rule 2     programa1 -> var_declaracion programa1
Rule 3     programa1 -> epsilon
Rule 4     programa2 -> funcion programa2
Rule 5     programa2 -> epsilon
Rule 6     var_declaracion -> tipo var_declaracion1
Rule 7     var_declaracion -> LIST var_declaracion2
Rule 8     var_declaracion1 -> ID
Rule 9     var_declaracion1 -> asignacion
Rule 10    var_declaracion2 -> ID
Rule 11    var_declaracion2 -> asignacion_list
Rule 12    parametros -> tipo parametros1 ID COMMA parametros2
Rule 13    parametros -> LIST parametros1 ID COMMA parametros2
Rule 14    parametros1 -> AMPERSON
Rule 15    parametros1 -> epsilon
Rule 16    parametros2 -> tipo parametros1 ID COMMA parametros2
Rule 17    parametros2 -> LIST parametros1 ID COMMA parametros2
Rule 18    parametros2 -> epsilon
Rule 19    asignacion -> ID EQUALS expresion
Rule 20    tipo -> INT
Rule 21    tipo -> FLOAT
Rule 22    tipo -> BOOL
Rule 23    tipo -> STRING
Rule 24    bloque -> LCURL bloque1 RCURL
Rule 25    bloque1 -> estatuto bloque1
Rule 26    bloque1 -> epsilon
Rule 27    exp -> termino exp1
Rule 28    exp1 -> PLUS exp
Rule 29    exp1 -> MINUS exp
Rule 30    exp1 -> epsilon
Rule 31    termino -> factor termino1
Rule 32    termino1 -> TIMES termino
Rule 33    termino1 -> DIVIDE termino
Rule 34    termino1 -> epsilon
Rule 35    asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN
Rule 36    asignacion_list1 -> varcte asignacion_list2
Rule 37    asignacion_list1 -> epsilon
Rule 38    asignacion_list2 -> COMMA asignacion_list1
Rule 39    asignacion_list2 -> epsilon
Rule 40    main -> FUNCTION VOID MAIN LPAREN RPAREN LCURL main1 estatuto main2 RCURL
Rule 41    main1 -> var_declaracion main1
Rule 42    main1 -> epsilon
Rule 43    main2 -> estatuto main2
Rule 44    main2 -> epsilon
Rule 45    while -> WHILE LPAREN expresion RPAREN bloque
Rule 46    factor -> LPAREN expresion RPAREN
Rule 47    factor -> factor1 varcte
Rule 48    factor1 -> PLUS
Rule 49    factor1 -> MINUS
Rule 50    factor1 -> epsilon
Rule 51    estatuto -> asignacion
Rule 52    estatuto -> comentario
Rule 53    estatuto -> print
Rule 54    estatuto -> input
Rule 55    estatuto -> condicion
Rule 56    estatuto -> switch
Rule 57    estatuto -> while
Rule 58    estatuto -> for
Rule 59    expresion -> exp expresion1
Rule 60    expresion1 -> epsilon
Rule 61    expresion1 -> expresion2 exp
Rule 62    expresion2 -> LESS
Rule 63    expresion2 -> GREATER
Rule 64    expresion2 -> AND
Rule 65    expresion2 -> OR
Rule 66    expresion2 -> DOUBLE_EQUAL
Rule 67    expresion2 -> DIFF
Rule 68    varcte -> ID
Rule 69    varcte -> CTE_INT
Rule 70    varcte -> CTE_FLOAT
Rule 71    varcte -> CTE_STRING
Rule 72    varcte -> cte_bool
Rule 73    cte_bool -> TRUE
Rule 74    cte_bool -> FALSE
Rule 75    print -> PRINT LPAREN print1 RPAREN
Rule 76    print1 -> CTE_STRING print2
Rule 77    print1 -> ID print2
Rule 78    print2 -> epsilon
Rule 79    print2 -> PLUS print1
Rule 80    condicion -> IF LPAREN expresion RPAREN bloque condicion1
Rule 81    condicion1 -> condicion2
Rule 82    condicion1 -> ELSEIF condicion3 condicion1
Rule 83    condicion1 -> epsilon
Rule 84    condicion2 -> ELSE condicion3
Rule 85    condicion3 -> bloque
Rule 86    condicion3 -> PASS
Rule 87    input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN
Rule 88    input -> ID EQUALS INPUT LPAREN input1 RPAREN
Rule 89    input1 -> CTE_STRING
Rule 90    input1 -> epsilon
Rule 91    for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
Rule 92    for1 -> PLUS
Rule 93    for1 -> TIMES
Rule 94    for1 -> DIVIDE
Rule 95    for1 -> MINUS
Rule 96    funcion -> FUNCTION funcion4
Rule 97    funcion4 -> VOID funcion5
Rule 98    funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL
Rule 99    funcion5 -> ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL
Rule 100   funcion5 -> MAIN LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL
Rule 101   funcion1 -> epsilon
Rule 102   funcion1 -> var_declaracion funcion1
Rule 103   funcion2 -> epsilon
Rule 104   funcion2 -> estatuto funcion2
Rule 105   funcion3 -> parametros
Rule 106   funcion3 -> epsilon
Rule 107   switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
Rule 108   switch1 -> epsilon
Rule 109   switch1 -> CASE COLON switch3 switch1
Rule 110   switch2 -> DEFAULT COLON switch3
Rule 111   switch3 -> PASS
Rule 112   switch3 -> estatuto
Rule 113   comentario -> POUND varcte comentario1
Rule 114   comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE
Rule 115   comentario1 -> varcte comentario1
Rule 116   comentario1 -> epsilon
Rule 117   epsilon -> <empty>

Terminals, with rules where they appear

AMPERSON             : 14
AND                  : 64
BOOL                 : 22
BY                   : 91
CASE                 : 107 109
COLON                : 107 109 110
COMMA                : 12 13 16 17 38
CTE_FLOAT            : 70
CTE_INT              : 69 91 91 91
CTE_STRING           : 71 76 89
DEFAULT              : 110
DIFF                 : 67
DIVIDE               : 33 94 114 114
DOUBLE_EQUAL         : 66
ELSE                 : 84
ELSEIF               : 82
END                  : 1
EQUALS               : 19 35 87 88
FALSE                : 74
FLOAT                : 21
FOR                  : 91
FUNCTION             : 40 96
GREATER              : 63
ID                   : 8 10 12 13 16 17 19 35 68 77 87 88 98 98 99
IF                   : 80
INPUT                : 87 88
INT                  : 20
LCURL                : 24 40 98 99 100 107
LESS                 : 62
LIST                 : 7 13 17 35
LPAREN               : 35 40 45 46 75 80 87 88 91 98 99 100
MAIN                 : 40 100
MINUS                : 29 49 95
OR                   : 65
PASS                 : 86 111
PLUS                 : 28 48 79 92
POUND                : 113
PRINT                : 75
RCURL                : 24 40 98 99 100 107
RETURN               : 98
RPAREN               : 35 40 45 46 75 80 87 88 91 98 99 100
START                : 1
STRING               : 23
SWITCH               : 107
TIMES                : 32 93 114 114
TO                   : 91
TRUE                 : 73
VOID                 : 40 97
WHILE                : 45
error                : 

Nonterminals, with rules where they appear

asignacion           : 9 51
asignacion_list      : 11
asignacion_list1     : 35 38
asignacion_list2     : 36
bloque               : 45 80 85
bloque1              : 24 25
comentario           : 52
comentario1          : 113 114 115
condicion            : 55
condicion1           : 80 82
condicion2           : 81
condicion3           : 82 84
cte_bool             : 72
epsilon              : 3 5 15 18 26 30 34 37 39 42 44 50 60 78 83 90 101 103 106 108 116
estatuto             : 25 40 43 98 99 100 104 112
exp                  : 28 29 59 61
exp1                 : 27
expresion            : 19 45 46 80
expresion1           : 59
expresion2           : 61
factor               : 31
factor1              : 47
for                  : 58
for1                 : 91
funcion              : 4
funcion1             : 98 99 100 102
funcion2             : 98 99 100 104
funcion3             : 98 99 100
funcion4             : 96
funcion5             : 97
input                : 54
input1               : 87 88
main                 : 1
main1                : 40 41
main2                : 40 43
parametros           : 105
parametros1          : 12 13 16 17
parametros2          : 12 13 16 17
print                : 53
print1               : 75 79
print2               : 76 77
programa             : 0
programa1            : 1 2
programa2            : 1 4
switch               : 56
switch1              : 107 109
switch2              : 107
switch3              : 107 109 110
termino              : 27 32 33
termino1             : 31
tipo                 : 6 12 16 87 98
var_declaracion      : 2 41 102
var_declaracion1     : 6
var_declaracion2     : 7
varcte               : 36 47 107 113 115
while                : 57

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . START programa1 programa2 main END

    START           shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> START . programa1 programa2 main END
    (2) programa1 -> . var_declaracion programa1
    (3) programa1 -> . epsilon
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . LIST var_declaracion2
    (117) epsilon -> .
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    LIST            shift and go to state 3
    FUNCTION        reduce using rule 117 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    tipo                           shift and go to state 6
    var_declaracion                shift and go to state 7
    programa1                      shift and go to state 8
    epsilon                        shift and go to state 10

state 2

    (0) S' -> programa .



state 3

    (7) var_declaracion -> LIST . var_declaracion2
    (10) var_declaracion2 -> . ID
    (11) var_declaracion2 -> . asignacion_list
    (35) asignacion_list -> . LIST ID EQUALS LPAREN asignacion_list1 RPAREN

    ID              shift and go to state 15
    LIST            shift and go to state 14

    asignacion_list                shift and go to state 12
    var_declaracion2               shift and go to state 13

state 4

    (21) tipo -> FLOAT .

    ID              reduce using rule 21 (tipo -> FLOAT .)
    AMPERSON        reduce using rule 21 (tipo -> FLOAT .)


state 5

    (23) tipo -> STRING .

    ID              reduce using rule 23 (tipo -> STRING .)
    AMPERSON        reduce using rule 23 (tipo -> STRING .)


state 6

    (6) var_declaracion -> tipo . var_declaracion1
    (8) var_declaracion1 -> . ID
    (9) var_declaracion1 -> . asignacion
    (19) asignacion -> . ID EQUALS expresion

    ID              shift and go to state 18

    var_declaracion1               shift and go to state 17
    asignacion                     shift and go to state 16

state 7

    (2) programa1 -> var_declaracion . programa1
    (2) programa1 -> . var_declaracion programa1
    (3) programa1 -> . epsilon
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . LIST var_declaracion2
    (117) epsilon -> .
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    LIST            shift and go to state 3
    FUNCTION        reduce using rule 117 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    tipo                           shift and go to state 6
    epsilon                        shift and go to state 10
    var_declaracion                shift and go to state 7
    programa1                      shift and go to state 19

state 8

    (1) programa -> START programa1 . programa2 main END
    (4) programa2 -> . funcion programa2
    (5) programa2 -> . epsilon
    (96) funcion -> . FUNCTION funcion4
    (117) epsilon -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 20

  ! FUNCTION        [ reduce using rule 117 (epsilon -> .) ]

    epsilon                        shift and go to state 21
    programa2                      shift and go to state 22
    funcion                        shift and go to state 23

state 9

    (22) tipo -> BOOL .

    ID              reduce using rule 22 (tipo -> BOOL .)
    AMPERSON        reduce using rule 22 (tipo -> BOOL .)


state 10

    (3) programa1 -> epsilon .

    FUNCTION        reduce using rule 3 (programa1 -> epsilon .)


state 11

    (20) tipo -> INT .

    ID              reduce using rule 20 (tipo -> INT .)
    AMPERSON        reduce using rule 20 (tipo -> INT .)


state 12

    (11) var_declaracion2 -> asignacion_list .

    LIST            reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    INT             reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    FLOAT           reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    BOOL            reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    STRING          reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    FUNCTION        reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    ID              reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    POUND           reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    DIVIDE          reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    PRINT           reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    IF              reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    SWITCH          reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    WHILE           reduce using rule 11 (var_declaracion2 -> asignacion_list .)
    FOR             reduce using rule 11 (var_declaracion2 -> asignacion_list .)


state 13

    (7) var_declaracion -> LIST var_declaracion2 .

    LIST            reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    INT             reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    FLOAT           reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    BOOL            reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    STRING          reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    ID              reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    POUND           reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    DIVIDE          reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    PRINT           reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    IF              reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    SWITCH          reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    WHILE           reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    FOR             reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)
    FUNCTION        reduce using rule 7 (var_declaracion -> LIST var_declaracion2 .)


state 14

    (35) asignacion_list -> LIST . ID EQUALS LPAREN asignacion_list1 RPAREN

    ID              shift and go to state 24


state 15

    (10) var_declaracion2 -> ID .

    LIST            reduce using rule 10 (var_declaracion2 -> ID .)
    INT             reduce using rule 10 (var_declaracion2 -> ID .)
    FLOAT           reduce using rule 10 (var_declaracion2 -> ID .)
    BOOL            reduce using rule 10 (var_declaracion2 -> ID .)
    STRING          reduce using rule 10 (var_declaracion2 -> ID .)
    FUNCTION        reduce using rule 10 (var_declaracion2 -> ID .)
    ID              reduce using rule 10 (var_declaracion2 -> ID .)
    POUND           reduce using rule 10 (var_declaracion2 -> ID .)
    DIVIDE          reduce using rule 10 (var_declaracion2 -> ID .)
    PRINT           reduce using rule 10 (var_declaracion2 -> ID .)
    IF              reduce using rule 10 (var_declaracion2 -> ID .)
    SWITCH          reduce using rule 10 (var_declaracion2 -> ID .)
    WHILE           reduce using rule 10 (var_declaracion2 -> ID .)
    FOR             reduce using rule 10 (var_declaracion2 -> ID .)


state 16

    (9) var_declaracion1 -> asignacion .

    LIST            reduce using rule 9 (var_declaracion1 -> asignacion .)
    INT             reduce using rule 9 (var_declaracion1 -> asignacion .)
    FLOAT           reduce using rule 9 (var_declaracion1 -> asignacion .)
    BOOL            reduce using rule 9 (var_declaracion1 -> asignacion .)
    STRING          reduce using rule 9 (var_declaracion1 -> asignacion .)
    FUNCTION        reduce using rule 9 (var_declaracion1 -> asignacion .)
    ID              reduce using rule 9 (var_declaracion1 -> asignacion .)
    POUND           reduce using rule 9 (var_declaracion1 -> asignacion .)
    DIVIDE          reduce using rule 9 (var_declaracion1 -> asignacion .)
    PRINT           reduce using rule 9 (var_declaracion1 -> asignacion .)
    IF              reduce using rule 9 (var_declaracion1 -> asignacion .)
    SWITCH          reduce using rule 9 (var_declaracion1 -> asignacion .)
    WHILE           reduce using rule 9 (var_declaracion1 -> asignacion .)
    FOR             reduce using rule 9 (var_declaracion1 -> asignacion .)


state 17

    (6) var_declaracion -> tipo var_declaracion1 .

    LIST            reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    INT             reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    FLOAT           reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    BOOL            reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    STRING          reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    ID              reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    POUND           reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    DIVIDE          reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    PRINT           reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    IF              reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    SWITCH          reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    WHILE           reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    FOR             reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)
    FUNCTION        reduce using rule 6 (var_declaracion -> tipo var_declaracion1 .)


state 18

    (8) var_declaracion1 -> ID .
    (19) asignacion -> ID . EQUALS expresion

    LIST            reduce using rule 8 (var_declaracion1 -> ID .)
    INT             reduce using rule 8 (var_declaracion1 -> ID .)
    FLOAT           reduce using rule 8 (var_declaracion1 -> ID .)
    BOOL            reduce using rule 8 (var_declaracion1 -> ID .)
    STRING          reduce using rule 8 (var_declaracion1 -> ID .)
    FUNCTION        reduce using rule 8 (var_declaracion1 -> ID .)
    ID              reduce using rule 8 (var_declaracion1 -> ID .)
    POUND           reduce using rule 8 (var_declaracion1 -> ID .)
    DIVIDE          reduce using rule 8 (var_declaracion1 -> ID .)
    PRINT           reduce using rule 8 (var_declaracion1 -> ID .)
    IF              reduce using rule 8 (var_declaracion1 -> ID .)
    SWITCH          reduce using rule 8 (var_declaracion1 -> ID .)
    WHILE           reduce using rule 8 (var_declaracion1 -> ID .)
    FOR             reduce using rule 8 (var_declaracion1 -> ID .)
    EQUALS          shift and go to state 25


state 19

    (2) programa1 -> var_declaracion programa1 .

    FUNCTION        reduce using rule 2 (programa1 -> var_declaracion programa1 .)


state 20

    (96) funcion -> FUNCTION . funcion4
    (97) funcion4 -> . VOID funcion5
    (98) funcion4 -> . tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    VOID            shift and go to state 27
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    tipo                           shift and go to state 26
    funcion4                       shift and go to state 28

state 21

    (5) programa2 -> epsilon .

    FUNCTION        reduce using rule 5 (programa2 -> epsilon .)


state 22

    (1) programa -> START programa1 programa2 . main END
    (40) main -> . FUNCTION VOID MAIN LPAREN RPAREN LCURL main1 estatuto main2 RCURL

    FUNCTION        shift and go to state 29

    main                           shift and go to state 30

state 23

    (4) programa2 -> funcion . programa2
    (4) programa2 -> . funcion programa2
    (5) programa2 -> . epsilon
    (96) funcion -> . FUNCTION funcion4
    (117) epsilon -> .

  ! shift/reduce conflict for FUNCTION resolved as shift
    FUNCTION        shift and go to state 20

  ! FUNCTION        [ reduce using rule 117 (epsilon -> .) ]

    epsilon                        shift and go to state 21
    programa2                      shift and go to state 31
    funcion                        shift and go to state 23

state 24

    (35) asignacion_list -> LIST ID . EQUALS LPAREN asignacion_list1 RPAREN

    EQUALS          shift and go to state 32


state 25

    (19) asignacion -> ID EQUALS . expresion
    (59) expresion -> . exp expresion1
    (27) exp -> . termino exp1
    (31) termino -> . factor termino1
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . factor1 varcte
    (48) factor1 -> . PLUS
    (49) factor1 -> . MINUS
    (50) factor1 -> . epsilon
    (117) epsilon -> .

    LPAREN          shift and go to state 34
    PLUS            shift and go to state 36
    MINUS           shift and go to state 40
    ID              reduce using rule 117 (epsilon -> .)
    CTE_INT         reduce using rule 117 (epsilon -> .)
    CTE_FLOAT       reduce using rule 117 (epsilon -> .)
    CTE_STRING      reduce using rule 117 (epsilon -> .)
    TRUE            reduce using rule 117 (epsilon -> .)
    FALSE           reduce using rule 117 (epsilon -> .)

    expresion                      shift and go to state 33
    factor1                        shift and go to state 41
    epsilon                        shift and go to state 35
    termino                        shift and go to state 37
    exp                            shift and go to state 38
    factor                         shift and go to state 39

state 26

    (98) funcion4 -> tipo . ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL

    ID              shift and go to state 42


state 27

    (97) funcion4 -> VOID . funcion5
    (99) funcion5 -> . ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL
    (100) funcion5 -> . MAIN LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL

    ID              shift and go to state 45
    MAIN            shift and go to state 44

    funcion5                       shift and go to state 43

state 28

    (96) funcion -> FUNCTION funcion4 .

    FUNCTION        reduce using rule 96 (funcion -> FUNCTION funcion4 .)


state 29

    (40) main -> FUNCTION . VOID MAIN LPAREN RPAREN LCURL main1 estatuto main2 RCURL

    VOID            shift and go to state 46


state 30

    (1) programa -> START programa1 programa2 main . END

    END             shift and go to state 47


state 31

    (4) programa2 -> funcion programa2 .

    FUNCTION        reduce using rule 4 (programa2 -> funcion programa2 .)


state 32

    (35) asignacion_list -> LIST ID EQUALS . LPAREN asignacion_list1 RPAREN

    LPAREN          shift and go to state 48


state 33

    (19) asignacion -> ID EQUALS expresion .

    ID              reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    POUND           reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    DIVIDE          reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    PRINT           reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    IF              reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    SWITCH          reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    WHILE           reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    FOR             reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    INT             reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    FLOAT           reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    BOOL            reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    STRING          reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    RETURN          reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    RCURL           reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    LIST            reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    FUNCTION        reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    CASE            reduce using rule 19 (asignacion -> ID EQUALS expresion .)
    DEFAULT         reduce using rule 19 (asignacion -> ID EQUALS expresion .)


state 34

    (46) factor -> LPAREN . expresion RPAREN
    (59) expresion -> . exp expresion1
    (27) exp -> . termino exp1
    (31) termino -> . factor termino1
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . factor1 varcte
    (48) factor1 -> . PLUS
    (49) factor1 -> . MINUS
    (50) factor1 -> . epsilon
    (117) epsilon -> .

    LPAREN          shift and go to state 34
    PLUS            shift and go to state 36
    MINUS           shift and go to state 40
    ID              reduce using rule 117 (epsilon -> .)
    CTE_INT         reduce using rule 117 (epsilon -> .)
    CTE_FLOAT       reduce using rule 117 (epsilon -> .)
    CTE_STRING      reduce using rule 117 (epsilon -> .)
    TRUE            reduce using rule 117 (epsilon -> .)
    FALSE           reduce using rule 117 (epsilon -> .)

    expresion                      shift and go to state 49
    factor1                        shift and go to state 41
    epsilon                        shift and go to state 35
    termino                        shift and go to state 37
    exp                            shift and go to state 38
    factor                         shift and go to state 39

state 35

    (50) factor1 -> epsilon .

    ID              reduce using rule 50 (factor1 -> epsilon .)
    CTE_INT         reduce using rule 50 (factor1 -> epsilon .)
    CTE_FLOAT       reduce using rule 50 (factor1 -> epsilon .)
    CTE_STRING      reduce using rule 50 (factor1 -> epsilon .)
    TRUE            reduce using rule 50 (factor1 -> epsilon .)
    FALSE           reduce using rule 50 (factor1 -> epsilon .)


state 36

    (48) factor1 -> PLUS .

    ID              reduce using rule 48 (factor1 -> PLUS .)
    CTE_INT         reduce using rule 48 (factor1 -> PLUS .)
    CTE_FLOAT       reduce using rule 48 (factor1 -> PLUS .)
    CTE_STRING      reduce using rule 48 (factor1 -> PLUS .)
    TRUE            reduce using rule 48 (factor1 -> PLUS .)
    FALSE           reduce using rule 48 (factor1 -> PLUS .)


state 37

    (27) exp -> termino . exp1
    (28) exp1 -> . PLUS exp
    (29) exp1 -> . MINUS exp
    (30) exp1 -> . epsilon
    (117) epsilon -> .

    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    LESS            reduce using rule 117 (epsilon -> .)
    GREATER         reduce using rule 117 (epsilon -> .)
    AND             reduce using rule 117 (epsilon -> .)
    OR              reduce using rule 117 (epsilon -> .)
    DOUBLE_EQUAL    reduce using rule 117 (epsilon -> .)
    DIFF            reduce using rule 117 (epsilon -> .)
    LIST            reduce using rule 117 (epsilon -> .)
    INT             reduce using rule 117 (epsilon -> .)
    FLOAT           reduce using rule 117 (epsilon -> .)
    BOOL            reduce using rule 117 (epsilon -> .)
    STRING          reduce using rule 117 (epsilon -> .)
    FUNCTION        reduce using rule 117 (epsilon -> .)
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    RPAREN          reduce using rule 117 (epsilon -> .)
    RETURN          reduce using rule 117 (epsilon -> .)
    RCURL           reduce using rule 117 (epsilon -> .)
    CASE            reduce using rule 117 (epsilon -> .)
    DEFAULT         reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 50
    exp1                           shift and go to state 51

state 38

    (59) expresion -> exp . expresion1
    (60) expresion1 -> . epsilon
    (61) expresion1 -> . expresion2 exp
    (117) epsilon -> .
    (62) expresion2 -> . LESS
    (63) expresion2 -> . GREATER
    (64) expresion2 -> . AND
    (65) expresion2 -> . OR
    (66) expresion2 -> . DOUBLE_EQUAL
    (67) expresion2 -> . DIFF

    LIST            reduce using rule 117 (epsilon -> .)
    INT             reduce using rule 117 (epsilon -> .)
    FLOAT           reduce using rule 117 (epsilon -> .)
    BOOL            reduce using rule 117 (epsilon -> .)
    STRING          reduce using rule 117 (epsilon -> .)
    FUNCTION        reduce using rule 117 (epsilon -> .)
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    RPAREN          reduce using rule 117 (epsilon -> .)
    RETURN          reduce using rule 117 (epsilon -> .)
    RCURL           reduce using rule 117 (epsilon -> .)
    CASE            reduce using rule 117 (epsilon -> .)
    DEFAULT         reduce using rule 117 (epsilon -> .)
    LESS            shift and go to state 58
    GREATER         shift and go to state 57
    AND             shift and go to state 55
    OR              shift and go to state 62
    DOUBLE_EQUAL    shift and go to state 60
    DIFF            shift and go to state 61

    expresion1                     shift and go to state 54
    epsilon                        shift and go to state 59
    expresion2                     shift and go to state 56

state 39

    (31) termino -> factor . termino1
    (32) termino1 -> . TIMES termino
    (33) termino1 -> . DIVIDE termino
    (34) termino1 -> . epsilon
    (117) epsilon -> .

  ! shift/reduce conflict for DIVIDE resolved as shift
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 63
    PLUS            reduce using rule 117 (epsilon -> .)
    MINUS           reduce using rule 117 (epsilon -> .)
    LESS            reduce using rule 117 (epsilon -> .)
    GREATER         reduce using rule 117 (epsilon -> .)
    AND             reduce using rule 117 (epsilon -> .)
    OR              reduce using rule 117 (epsilon -> .)
    DOUBLE_EQUAL    reduce using rule 117 (epsilon -> .)
    DIFF            reduce using rule 117 (epsilon -> .)
    LIST            reduce using rule 117 (epsilon -> .)
    INT             reduce using rule 117 (epsilon -> .)
    FLOAT           reduce using rule 117 (epsilon -> .)
    BOOL            reduce using rule 117 (epsilon -> .)
    STRING          reduce using rule 117 (epsilon -> .)
    FUNCTION        reduce using rule 117 (epsilon -> .)
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    RPAREN          reduce using rule 117 (epsilon -> .)
    RETURN          reduce using rule 117 (epsilon -> .)
    RCURL           reduce using rule 117 (epsilon -> .)
    CASE            reduce using rule 117 (epsilon -> .)
    DEFAULT         reduce using rule 117 (epsilon -> .)

  ! DIVIDE          [ reduce using rule 117 (epsilon -> .) ]

    epsilon                        shift and go to state 64
    termino1                       shift and go to state 65

state 40

    (49) factor1 -> MINUS .

    ID              reduce using rule 49 (factor1 -> MINUS .)
    CTE_INT         reduce using rule 49 (factor1 -> MINUS .)
    CTE_FLOAT       reduce using rule 49 (factor1 -> MINUS .)
    CTE_STRING      reduce using rule 49 (factor1 -> MINUS .)
    TRUE            reduce using rule 49 (factor1 -> MINUS .)
    FALSE           reduce using rule 49 (factor1 -> MINUS .)


state 41

    (47) factor -> factor1 . varcte
    (68) varcte -> . ID
    (69) varcte -> . CTE_INT
    (70) varcte -> . CTE_FLOAT
    (71) varcte -> . CTE_STRING
    (72) varcte -> . cte_bool
    (73) cte_bool -> . TRUE
    (74) cte_bool -> . FALSE

    ID              shift and go to state 73
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 69
    CTE_STRING      shift and go to state 67
    TRUE            shift and go to state 72
    FALSE           shift and go to state 68

    cte_bool                       shift and go to state 70
    varcte                         shift and go to state 74

state 42

    (98) funcion4 -> tipo ID . LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL

    LPAREN          shift and go to state 75


state 43

    (97) funcion4 -> VOID funcion5 .

    FUNCTION        reduce using rule 97 (funcion4 -> VOID funcion5 .)


state 44

    (100) funcion5 -> MAIN . LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL

    LPAREN          shift and go to state 76


state 45

    (99) funcion5 -> ID . LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL

    LPAREN          shift and go to state 77


state 46

    (40) main -> FUNCTION VOID . MAIN LPAREN RPAREN LCURL main1 estatuto main2 RCURL

    MAIN            shift and go to state 78


state 47

    (1) programa -> START programa1 programa2 main END .

    $end            reduce using rule 1 (programa -> START programa1 programa2 main END .)


state 48

    (35) asignacion_list -> LIST ID EQUALS LPAREN . asignacion_list1 RPAREN
    (36) asignacion_list1 -> . varcte asignacion_list2
    (37) asignacion_list1 -> . epsilon
    (68) varcte -> . ID
    (69) varcte -> . CTE_INT
    (70) varcte -> . CTE_FLOAT
    (71) varcte -> . CTE_STRING
    (72) varcte -> . cte_bool
    (117) epsilon -> .
    (73) cte_bool -> . TRUE
    (74) cte_bool -> . FALSE

    ID              shift and go to state 73
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 69
    CTE_STRING      shift and go to state 67
    RPAREN          reduce using rule 117 (epsilon -> .)
    TRUE            shift and go to state 72
    FALSE           shift and go to state 68

    epsilon                        shift and go to state 81
    cte_bool                       shift and go to state 70
    asignacion_list1               shift and go to state 80
    varcte                         shift and go to state 79

state 49

    (46) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 82


state 50

    (30) exp1 -> epsilon .

    LESS            reduce using rule 30 (exp1 -> epsilon .)
    GREATER         reduce using rule 30 (exp1 -> epsilon .)
    AND             reduce using rule 30 (exp1 -> epsilon .)
    OR              reduce using rule 30 (exp1 -> epsilon .)
    DOUBLE_EQUAL    reduce using rule 30 (exp1 -> epsilon .)
    DIFF            reduce using rule 30 (exp1 -> epsilon .)
    LIST            reduce using rule 30 (exp1 -> epsilon .)
    INT             reduce using rule 30 (exp1 -> epsilon .)
    FLOAT           reduce using rule 30 (exp1 -> epsilon .)
    BOOL            reduce using rule 30 (exp1 -> epsilon .)
    STRING          reduce using rule 30 (exp1 -> epsilon .)
    FUNCTION        reduce using rule 30 (exp1 -> epsilon .)
    ID              reduce using rule 30 (exp1 -> epsilon .)
    POUND           reduce using rule 30 (exp1 -> epsilon .)
    DIVIDE          reduce using rule 30 (exp1 -> epsilon .)
    PRINT           reduce using rule 30 (exp1 -> epsilon .)
    IF              reduce using rule 30 (exp1 -> epsilon .)
    SWITCH          reduce using rule 30 (exp1 -> epsilon .)
    WHILE           reduce using rule 30 (exp1 -> epsilon .)
    FOR             reduce using rule 30 (exp1 -> epsilon .)
    RPAREN          reduce using rule 30 (exp1 -> epsilon .)
    RETURN          reduce using rule 30 (exp1 -> epsilon .)
    RCURL           reduce using rule 30 (exp1 -> epsilon .)
    CASE            reduce using rule 30 (exp1 -> epsilon .)
    DEFAULT         reduce using rule 30 (exp1 -> epsilon .)


state 51

    (27) exp -> termino exp1 .

    LESS            reduce using rule 27 (exp -> termino exp1 .)
    GREATER         reduce using rule 27 (exp -> termino exp1 .)
    AND             reduce using rule 27 (exp -> termino exp1 .)
    OR              reduce using rule 27 (exp -> termino exp1 .)
    DOUBLE_EQUAL    reduce using rule 27 (exp -> termino exp1 .)
    DIFF            reduce using rule 27 (exp -> termino exp1 .)
    LIST            reduce using rule 27 (exp -> termino exp1 .)
    INT             reduce using rule 27 (exp -> termino exp1 .)
    FLOAT           reduce using rule 27 (exp -> termino exp1 .)
    BOOL            reduce using rule 27 (exp -> termino exp1 .)
    STRING          reduce using rule 27 (exp -> termino exp1 .)
    FUNCTION        reduce using rule 27 (exp -> termino exp1 .)
    ID              reduce using rule 27 (exp -> termino exp1 .)
    POUND           reduce using rule 27 (exp -> termino exp1 .)
    DIVIDE          reduce using rule 27 (exp -> termino exp1 .)
    PRINT           reduce using rule 27 (exp -> termino exp1 .)
    IF              reduce using rule 27 (exp -> termino exp1 .)
    SWITCH          reduce using rule 27 (exp -> termino exp1 .)
    WHILE           reduce using rule 27 (exp -> termino exp1 .)
    FOR             reduce using rule 27 (exp -> termino exp1 .)
    RPAREN          reduce using rule 27 (exp -> termino exp1 .)
    RETURN          reduce using rule 27 (exp -> termino exp1 .)
    RCURL           reduce using rule 27 (exp -> termino exp1 .)
    CASE            reduce using rule 27 (exp -> termino exp1 .)
    DEFAULT         reduce using rule 27 (exp -> termino exp1 .)


state 52

    (28) exp1 -> PLUS . exp
    (27) exp -> . termino exp1
    (31) termino -> . factor termino1
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . factor1 varcte
    (48) factor1 -> . PLUS
    (49) factor1 -> . MINUS
    (50) factor1 -> . epsilon
    (117) epsilon -> .

    LPAREN          shift and go to state 34
    PLUS            shift and go to state 36
    MINUS           shift and go to state 40
    ID              reduce using rule 117 (epsilon -> .)
    CTE_INT         reduce using rule 117 (epsilon -> .)
    CTE_FLOAT       reduce using rule 117 (epsilon -> .)
    CTE_STRING      reduce using rule 117 (epsilon -> .)
    TRUE            reduce using rule 117 (epsilon -> .)
    FALSE           reduce using rule 117 (epsilon -> .)

    factor1                        shift and go to state 41
    epsilon                        shift and go to state 35
    termino                        shift and go to state 37
    exp                            shift and go to state 83
    factor                         shift and go to state 39

state 53

    (29) exp1 -> MINUS . exp
    (27) exp -> . termino exp1
    (31) termino -> . factor termino1
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . factor1 varcte
    (48) factor1 -> . PLUS
    (49) factor1 -> . MINUS
    (50) factor1 -> . epsilon
    (117) epsilon -> .

    LPAREN          shift and go to state 34
    PLUS            shift and go to state 36
    MINUS           shift and go to state 40
    ID              reduce using rule 117 (epsilon -> .)
    CTE_INT         reduce using rule 117 (epsilon -> .)
    CTE_FLOAT       reduce using rule 117 (epsilon -> .)
    CTE_STRING      reduce using rule 117 (epsilon -> .)
    TRUE            reduce using rule 117 (epsilon -> .)
    FALSE           reduce using rule 117 (epsilon -> .)

    factor1                        shift and go to state 41
    epsilon                        shift and go to state 35
    termino                        shift and go to state 37
    exp                            shift and go to state 84
    factor                         shift and go to state 39

state 54

    (59) expresion -> exp expresion1 .

    RPAREN          reduce using rule 59 (expresion -> exp expresion1 .)
    LIST            reduce using rule 59 (expresion -> exp expresion1 .)
    INT             reduce using rule 59 (expresion -> exp expresion1 .)
    FLOAT           reduce using rule 59 (expresion -> exp expresion1 .)
    BOOL            reduce using rule 59 (expresion -> exp expresion1 .)
    STRING          reduce using rule 59 (expresion -> exp expresion1 .)
    FUNCTION        reduce using rule 59 (expresion -> exp expresion1 .)
    ID              reduce using rule 59 (expresion -> exp expresion1 .)
    POUND           reduce using rule 59 (expresion -> exp expresion1 .)
    DIVIDE          reduce using rule 59 (expresion -> exp expresion1 .)
    PRINT           reduce using rule 59 (expresion -> exp expresion1 .)
    IF              reduce using rule 59 (expresion -> exp expresion1 .)
    SWITCH          reduce using rule 59 (expresion -> exp expresion1 .)
    WHILE           reduce using rule 59 (expresion -> exp expresion1 .)
    FOR             reduce using rule 59 (expresion -> exp expresion1 .)
    RETURN          reduce using rule 59 (expresion -> exp expresion1 .)
    RCURL           reduce using rule 59 (expresion -> exp expresion1 .)
    CASE            reduce using rule 59 (expresion -> exp expresion1 .)
    DEFAULT         reduce using rule 59 (expresion -> exp expresion1 .)


state 55

    (64) expresion2 -> AND .

    LPAREN          reduce using rule 64 (expresion2 -> AND .)
    PLUS            reduce using rule 64 (expresion2 -> AND .)
    MINUS           reduce using rule 64 (expresion2 -> AND .)
    ID              reduce using rule 64 (expresion2 -> AND .)
    CTE_INT         reduce using rule 64 (expresion2 -> AND .)
    CTE_FLOAT       reduce using rule 64 (expresion2 -> AND .)
    CTE_STRING      reduce using rule 64 (expresion2 -> AND .)
    TRUE            reduce using rule 64 (expresion2 -> AND .)
    FALSE           reduce using rule 64 (expresion2 -> AND .)


state 56

    (61) expresion1 -> expresion2 . exp
    (27) exp -> . termino exp1
    (31) termino -> . factor termino1
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . factor1 varcte
    (48) factor1 -> . PLUS
    (49) factor1 -> . MINUS
    (50) factor1 -> . epsilon
    (117) epsilon -> .

    LPAREN          shift and go to state 34
    PLUS            shift and go to state 36
    MINUS           shift and go to state 40
    ID              reduce using rule 117 (epsilon -> .)
    CTE_INT         reduce using rule 117 (epsilon -> .)
    CTE_FLOAT       reduce using rule 117 (epsilon -> .)
    CTE_STRING      reduce using rule 117 (epsilon -> .)
    TRUE            reduce using rule 117 (epsilon -> .)
    FALSE           reduce using rule 117 (epsilon -> .)

    factor1                        shift and go to state 41
    epsilon                        shift and go to state 35
    termino                        shift and go to state 37
    exp                            shift and go to state 85
    factor                         shift and go to state 39

state 57

    (63) expresion2 -> GREATER .

    LPAREN          reduce using rule 63 (expresion2 -> GREATER .)
    PLUS            reduce using rule 63 (expresion2 -> GREATER .)
    MINUS           reduce using rule 63 (expresion2 -> GREATER .)
    ID              reduce using rule 63 (expresion2 -> GREATER .)
    CTE_INT         reduce using rule 63 (expresion2 -> GREATER .)
    CTE_FLOAT       reduce using rule 63 (expresion2 -> GREATER .)
    CTE_STRING      reduce using rule 63 (expresion2 -> GREATER .)
    TRUE            reduce using rule 63 (expresion2 -> GREATER .)
    FALSE           reduce using rule 63 (expresion2 -> GREATER .)


state 58

    (62) expresion2 -> LESS .

    LPAREN          reduce using rule 62 (expresion2 -> LESS .)
    PLUS            reduce using rule 62 (expresion2 -> LESS .)
    MINUS           reduce using rule 62 (expresion2 -> LESS .)
    ID              reduce using rule 62 (expresion2 -> LESS .)
    CTE_INT         reduce using rule 62 (expresion2 -> LESS .)
    CTE_FLOAT       reduce using rule 62 (expresion2 -> LESS .)
    CTE_STRING      reduce using rule 62 (expresion2 -> LESS .)
    TRUE            reduce using rule 62 (expresion2 -> LESS .)
    FALSE           reduce using rule 62 (expresion2 -> LESS .)


state 59

    (60) expresion1 -> epsilon .

    LIST            reduce using rule 60 (expresion1 -> epsilon .)
    INT             reduce using rule 60 (expresion1 -> epsilon .)
    FLOAT           reduce using rule 60 (expresion1 -> epsilon .)
    BOOL            reduce using rule 60 (expresion1 -> epsilon .)
    STRING          reduce using rule 60 (expresion1 -> epsilon .)
    FUNCTION        reduce using rule 60 (expresion1 -> epsilon .)
    ID              reduce using rule 60 (expresion1 -> epsilon .)
    POUND           reduce using rule 60 (expresion1 -> epsilon .)
    DIVIDE          reduce using rule 60 (expresion1 -> epsilon .)
    PRINT           reduce using rule 60 (expresion1 -> epsilon .)
    IF              reduce using rule 60 (expresion1 -> epsilon .)
    SWITCH          reduce using rule 60 (expresion1 -> epsilon .)
    WHILE           reduce using rule 60 (expresion1 -> epsilon .)
    FOR             reduce using rule 60 (expresion1 -> epsilon .)
    RPAREN          reduce using rule 60 (expresion1 -> epsilon .)
    RETURN          reduce using rule 60 (expresion1 -> epsilon .)
    RCURL           reduce using rule 60 (expresion1 -> epsilon .)
    CASE            reduce using rule 60 (expresion1 -> epsilon .)
    DEFAULT         reduce using rule 60 (expresion1 -> epsilon .)


state 60

    (66) expresion2 -> DOUBLE_EQUAL .

    LPAREN          reduce using rule 66 (expresion2 -> DOUBLE_EQUAL .)
    PLUS            reduce using rule 66 (expresion2 -> DOUBLE_EQUAL .)
    MINUS           reduce using rule 66 (expresion2 -> DOUBLE_EQUAL .)
    ID              reduce using rule 66 (expresion2 -> DOUBLE_EQUAL .)
    CTE_INT         reduce using rule 66 (expresion2 -> DOUBLE_EQUAL .)
    CTE_FLOAT       reduce using rule 66 (expresion2 -> DOUBLE_EQUAL .)
    CTE_STRING      reduce using rule 66 (expresion2 -> DOUBLE_EQUAL .)
    TRUE            reduce using rule 66 (expresion2 -> DOUBLE_EQUAL .)
    FALSE           reduce using rule 66 (expresion2 -> DOUBLE_EQUAL .)


state 61

    (67) expresion2 -> DIFF .

    LPAREN          reduce using rule 67 (expresion2 -> DIFF .)
    PLUS            reduce using rule 67 (expresion2 -> DIFF .)
    MINUS           reduce using rule 67 (expresion2 -> DIFF .)
    ID              reduce using rule 67 (expresion2 -> DIFF .)
    CTE_INT         reduce using rule 67 (expresion2 -> DIFF .)
    CTE_FLOAT       reduce using rule 67 (expresion2 -> DIFF .)
    CTE_STRING      reduce using rule 67 (expresion2 -> DIFF .)
    TRUE            reduce using rule 67 (expresion2 -> DIFF .)
    FALSE           reduce using rule 67 (expresion2 -> DIFF .)


state 62

    (65) expresion2 -> OR .

    LPAREN          reduce using rule 65 (expresion2 -> OR .)
    PLUS            reduce using rule 65 (expresion2 -> OR .)
    MINUS           reduce using rule 65 (expresion2 -> OR .)
    ID              reduce using rule 65 (expresion2 -> OR .)
    CTE_INT         reduce using rule 65 (expresion2 -> OR .)
    CTE_FLOAT       reduce using rule 65 (expresion2 -> OR .)
    CTE_STRING      reduce using rule 65 (expresion2 -> OR .)
    TRUE            reduce using rule 65 (expresion2 -> OR .)
    FALSE           reduce using rule 65 (expresion2 -> OR .)


state 63

    (33) termino1 -> DIVIDE . termino
    (31) termino -> . factor termino1
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . factor1 varcte
    (48) factor1 -> . PLUS
    (49) factor1 -> . MINUS
    (50) factor1 -> . epsilon
    (117) epsilon -> .

    LPAREN          shift and go to state 34
    PLUS            shift and go to state 36
    MINUS           shift and go to state 40
    ID              reduce using rule 117 (epsilon -> .)
    CTE_INT         reduce using rule 117 (epsilon -> .)
    CTE_FLOAT       reduce using rule 117 (epsilon -> .)
    CTE_STRING      reduce using rule 117 (epsilon -> .)
    TRUE            reduce using rule 117 (epsilon -> .)
    FALSE           reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 35
    termino                        shift and go to state 86
    factor                         shift and go to state 39
    factor1                        shift and go to state 41

state 64

    (34) termino1 -> epsilon .

    PLUS            reduce using rule 34 (termino1 -> epsilon .)
    MINUS           reduce using rule 34 (termino1 -> epsilon .)
    LESS            reduce using rule 34 (termino1 -> epsilon .)
    GREATER         reduce using rule 34 (termino1 -> epsilon .)
    AND             reduce using rule 34 (termino1 -> epsilon .)
    OR              reduce using rule 34 (termino1 -> epsilon .)
    DOUBLE_EQUAL    reduce using rule 34 (termino1 -> epsilon .)
    DIFF            reduce using rule 34 (termino1 -> epsilon .)
    LIST            reduce using rule 34 (termino1 -> epsilon .)
    INT             reduce using rule 34 (termino1 -> epsilon .)
    FLOAT           reduce using rule 34 (termino1 -> epsilon .)
    BOOL            reduce using rule 34 (termino1 -> epsilon .)
    STRING          reduce using rule 34 (termino1 -> epsilon .)
    FUNCTION        reduce using rule 34 (termino1 -> epsilon .)
    ID              reduce using rule 34 (termino1 -> epsilon .)
    POUND           reduce using rule 34 (termino1 -> epsilon .)
    DIVIDE          reduce using rule 34 (termino1 -> epsilon .)
    PRINT           reduce using rule 34 (termino1 -> epsilon .)
    IF              reduce using rule 34 (termino1 -> epsilon .)
    SWITCH          reduce using rule 34 (termino1 -> epsilon .)
    WHILE           reduce using rule 34 (termino1 -> epsilon .)
    FOR             reduce using rule 34 (termino1 -> epsilon .)
    RPAREN          reduce using rule 34 (termino1 -> epsilon .)
    RETURN          reduce using rule 34 (termino1 -> epsilon .)
    RCURL           reduce using rule 34 (termino1 -> epsilon .)
    CASE            reduce using rule 34 (termino1 -> epsilon .)
    DEFAULT         reduce using rule 34 (termino1 -> epsilon .)


state 65

    (31) termino -> factor termino1 .

    PLUS            reduce using rule 31 (termino -> factor termino1 .)
    MINUS           reduce using rule 31 (termino -> factor termino1 .)
    LESS            reduce using rule 31 (termino -> factor termino1 .)
    GREATER         reduce using rule 31 (termino -> factor termino1 .)
    AND             reduce using rule 31 (termino -> factor termino1 .)
    OR              reduce using rule 31 (termino -> factor termino1 .)
    DOUBLE_EQUAL    reduce using rule 31 (termino -> factor termino1 .)
    DIFF            reduce using rule 31 (termino -> factor termino1 .)
    RPAREN          reduce using rule 31 (termino -> factor termino1 .)
    LIST            reduce using rule 31 (termino -> factor termino1 .)
    INT             reduce using rule 31 (termino -> factor termino1 .)
    FLOAT           reduce using rule 31 (termino -> factor termino1 .)
    BOOL            reduce using rule 31 (termino -> factor termino1 .)
    STRING          reduce using rule 31 (termino -> factor termino1 .)
    FUNCTION        reduce using rule 31 (termino -> factor termino1 .)
    ID              reduce using rule 31 (termino -> factor termino1 .)
    POUND           reduce using rule 31 (termino -> factor termino1 .)
    DIVIDE          reduce using rule 31 (termino -> factor termino1 .)
    PRINT           reduce using rule 31 (termino -> factor termino1 .)
    IF              reduce using rule 31 (termino -> factor termino1 .)
    SWITCH          reduce using rule 31 (termino -> factor termino1 .)
    WHILE           reduce using rule 31 (termino -> factor termino1 .)
    FOR             reduce using rule 31 (termino -> factor termino1 .)
    RETURN          reduce using rule 31 (termino -> factor termino1 .)
    RCURL           reduce using rule 31 (termino -> factor termino1 .)
    CASE            reduce using rule 31 (termino -> factor termino1 .)
    DEFAULT         reduce using rule 31 (termino -> factor termino1 .)


state 66

    (32) termino1 -> TIMES . termino
    (31) termino -> . factor termino1
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . factor1 varcte
    (48) factor1 -> . PLUS
    (49) factor1 -> . MINUS
    (50) factor1 -> . epsilon
    (117) epsilon -> .

    LPAREN          shift and go to state 34
    PLUS            shift and go to state 36
    MINUS           shift and go to state 40
    ID              reduce using rule 117 (epsilon -> .)
    CTE_INT         reduce using rule 117 (epsilon -> .)
    CTE_FLOAT       reduce using rule 117 (epsilon -> .)
    CTE_STRING      reduce using rule 117 (epsilon -> .)
    TRUE            reduce using rule 117 (epsilon -> .)
    FALSE           reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 35
    termino                        shift and go to state 87
    factor                         shift and go to state 39
    factor1                        shift and go to state 41

state 67

    (71) varcte -> CTE_STRING .

    LCURL           reduce using rule 71 (varcte -> CTE_STRING .)
    ID              reduce using rule 71 (varcte -> CTE_STRING .)
    CTE_INT         reduce using rule 71 (varcte -> CTE_STRING .)
    CTE_FLOAT       reduce using rule 71 (varcte -> CTE_STRING .)
    CTE_STRING      reduce using rule 71 (varcte -> CTE_STRING .)
    TRUE            reduce using rule 71 (varcte -> CTE_STRING .)
    FALSE           reduce using rule 71 (varcte -> CTE_STRING .)
    POUND           reduce using rule 71 (varcte -> CTE_STRING .)
    DIVIDE          reduce using rule 71 (varcte -> CTE_STRING .)
    PRINT           reduce using rule 71 (varcte -> CTE_STRING .)
    IF              reduce using rule 71 (varcte -> CTE_STRING .)
    SWITCH          reduce using rule 71 (varcte -> CTE_STRING .)
    WHILE           reduce using rule 71 (varcte -> CTE_STRING .)
    FOR             reduce using rule 71 (varcte -> CTE_STRING .)
    INT             reduce using rule 71 (varcte -> CTE_STRING .)
    FLOAT           reduce using rule 71 (varcte -> CTE_STRING .)
    BOOL            reduce using rule 71 (varcte -> CTE_STRING .)
    STRING          reduce using rule 71 (varcte -> CTE_STRING .)
    RETURN          reduce using rule 71 (varcte -> CTE_STRING .)
    RCURL           reduce using rule 71 (varcte -> CTE_STRING .)
    CASE            reduce using rule 71 (varcte -> CTE_STRING .)
    DEFAULT         reduce using rule 71 (varcte -> CTE_STRING .)
    COMMA           reduce using rule 71 (varcte -> CTE_STRING .)
    RPAREN          reduce using rule 71 (varcte -> CTE_STRING .)
    TIMES           reduce using rule 71 (varcte -> CTE_STRING .)
    PLUS            reduce using rule 71 (varcte -> CTE_STRING .)
    MINUS           reduce using rule 71 (varcte -> CTE_STRING .)
    LESS            reduce using rule 71 (varcte -> CTE_STRING .)
    GREATER         reduce using rule 71 (varcte -> CTE_STRING .)
    AND             reduce using rule 71 (varcte -> CTE_STRING .)
    OR              reduce using rule 71 (varcte -> CTE_STRING .)
    DOUBLE_EQUAL    reduce using rule 71 (varcte -> CTE_STRING .)
    DIFF            reduce using rule 71 (varcte -> CTE_STRING .)
    LIST            reduce using rule 71 (varcte -> CTE_STRING .)
    FUNCTION        reduce using rule 71 (varcte -> CTE_STRING .)


state 68

    (74) cte_bool -> FALSE .

    ID              reduce using rule 74 (cte_bool -> FALSE .)
    CTE_INT         reduce using rule 74 (cte_bool -> FALSE .)
    CTE_FLOAT       reduce using rule 74 (cte_bool -> FALSE .)
    CTE_STRING      reduce using rule 74 (cte_bool -> FALSE .)
    TRUE            reduce using rule 74 (cte_bool -> FALSE .)
    FALSE           reduce using rule 74 (cte_bool -> FALSE .)
    TIMES           reduce using rule 74 (cte_bool -> FALSE .)
    POUND           reduce using rule 74 (cte_bool -> FALSE .)
    DIVIDE          reduce using rule 74 (cte_bool -> FALSE .)
    PRINT           reduce using rule 74 (cte_bool -> FALSE .)
    IF              reduce using rule 74 (cte_bool -> FALSE .)
    SWITCH          reduce using rule 74 (cte_bool -> FALSE .)
    WHILE           reduce using rule 74 (cte_bool -> FALSE .)
    FOR             reduce using rule 74 (cte_bool -> FALSE .)
    INT             reduce using rule 74 (cte_bool -> FALSE .)
    FLOAT           reduce using rule 74 (cte_bool -> FALSE .)
    BOOL            reduce using rule 74 (cte_bool -> FALSE .)
    STRING          reduce using rule 74 (cte_bool -> FALSE .)
    RETURN          reduce using rule 74 (cte_bool -> FALSE .)
    RCURL           reduce using rule 74 (cte_bool -> FALSE .)
    CASE            reduce using rule 74 (cte_bool -> FALSE .)
    DEFAULT         reduce using rule 74 (cte_bool -> FALSE .)
    COMMA           reduce using rule 74 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 74 (cte_bool -> FALSE .)
    PLUS            reduce using rule 74 (cte_bool -> FALSE .)
    MINUS           reduce using rule 74 (cte_bool -> FALSE .)
    LESS            reduce using rule 74 (cte_bool -> FALSE .)
    GREATER         reduce using rule 74 (cte_bool -> FALSE .)
    AND             reduce using rule 74 (cte_bool -> FALSE .)
    OR              reduce using rule 74 (cte_bool -> FALSE .)
    DOUBLE_EQUAL    reduce using rule 74 (cte_bool -> FALSE .)
    DIFF            reduce using rule 74 (cte_bool -> FALSE .)
    LIST            reduce using rule 74 (cte_bool -> FALSE .)
    FUNCTION        reduce using rule 74 (cte_bool -> FALSE .)
    LCURL           reduce using rule 74 (cte_bool -> FALSE .)


state 69

    (70) varcte -> CTE_FLOAT .

    LCURL           reduce using rule 70 (varcte -> CTE_FLOAT .)
    ID              reduce using rule 70 (varcte -> CTE_FLOAT .)
    CTE_INT         reduce using rule 70 (varcte -> CTE_FLOAT .)
    CTE_FLOAT       reduce using rule 70 (varcte -> CTE_FLOAT .)
    CTE_STRING      reduce using rule 70 (varcte -> CTE_FLOAT .)
    TRUE            reduce using rule 70 (varcte -> CTE_FLOAT .)
    FALSE           reduce using rule 70 (varcte -> CTE_FLOAT .)
    POUND           reduce using rule 70 (varcte -> CTE_FLOAT .)
    DIVIDE          reduce using rule 70 (varcte -> CTE_FLOAT .)
    PRINT           reduce using rule 70 (varcte -> CTE_FLOAT .)
    IF              reduce using rule 70 (varcte -> CTE_FLOAT .)
    SWITCH          reduce using rule 70 (varcte -> CTE_FLOAT .)
    WHILE           reduce using rule 70 (varcte -> CTE_FLOAT .)
    FOR             reduce using rule 70 (varcte -> CTE_FLOAT .)
    INT             reduce using rule 70 (varcte -> CTE_FLOAT .)
    FLOAT           reduce using rule 70 (varcte -> CTE_FLOAT .)
    BOOL            reduce using rule 70 (varcte -> CTE_FLOAT .)
    STRING          reduce using rule 70 (varcte -> CTE_FLOAT .)
    RETURN          reduce using rule 70 (varcte -> CTE_FLOAT .)
    RCURL           reduce using rule 70 (varcte -> CTE_FLOAT .)
    CASE            reduce using rule 70 (varcte -> CTE_FLOAT .)
    DEFAULT         reduce using rule 70 (varcte -> CTE_FLOAT .)
    COMMA           reduce using rule 70 (varcte -> CTE_FLOAT .)
    RPAREN          reduce using rule 70 (varcte -> CTE_FLOAT .)
    TIMES           reduce using rule 70 (varcte -> CTE_FLOAT .)
    PLUS            reduce using rule 70 (varcte -> CTE_FLOAT .)
    MINUS           reduce using rule 70 (varcte -> CTE_FLOAT .)
    LESS            reduce using rule 70 (varcte -> CTE_FLOAT .)
    GREATER         reduce using rule 70 (varcte -> CTE_FLOAT .)
    AND             reduce using rule 70 (varcte -> CTE_FLOAT .)
    OR              reduce using rule 70 (varcte -> CTE_FLOAT .)
    DOUBLE_EQUAL    reduce using rule 70 (varcte -> CTE_FLOAT .)
    DIFF            reduce using rule 70 (varcte -> CTE_FLOAT .)
    LIST            reduce using rule 70 (varcte -> CTE_FLOAT .)
    FUNCTION        reduce using rule 70 (varcte -> CTE_FLOAT .)


state 70

    (72) varcte -> cte_bool .

    LCURL           reduce using rule 72 (varcte -> cte_bool .)
    ID              reduce using rule 72 (varcte -> cte_bool .)
    CTE_INT         reduce using rule 72 (varcte -> cte_bool .)
    CTE_FLOAT       reduce using rule 72 (varcte -> cte_bool .)
    CTE_STRING      reduce using rule 72 (varcte -> cte_bool .)
    TRUE            reduce using rule 72 (varcte -> cte_bool .)
    FALSE           reduce using rule 72 (varcte -> cte_bool .)
    POUND           reduce using rule 72 (varcte -> cte_bool .)
    DIVIDE          reduce using rule 72 (varcte -> cte_bool .)
    PRINT           reduce using rule 72 (varcte -> cte_bool .)
    IF              reduce using rule 72 (varcte -> cte_bool .)
    SWITCH          reduce using rule 72 (varcte -> cte_bool .)
    WHILE           reduce using rule 72 (varcte -> cte_bool .)
    FOR             reduce using rule 72 (varcte -> cte_bool .)
    INT             reduce using rule 72 (varcte -> cte_bool .)
    FLOAT           reduce using rule 72 (varcte -> cte_bool .)
    BOOL            reduce using rule 72 (varcte -> cte_bool .)
    STRING          reduce using rule 72 (varcte -> cte_bool .)
    RETURN          reduce using rule 72 (varcte -> cte_bool .)
    RCURL           reduce using rule 72 (varcte -> cte_bool .)
    CASE            reduce using rule 72 (varcte -> cte_bool .)
    DEFAULT         reduce using rule 72 (varcte -> cte_bool .)
    COMMA           reduce using rule 72 (varcte -> cte_bool .)
    RPAREN          reduce using rule 72 (varcte -> cte_bool .)
    TIMES           reduce using rule 72 (varcte -> cte_bool .)
    PLUS            reduce using rule 72 (varcte -> cte_bool .)
    MINUS           reduce using rule 72 (varcte -> cte_bool .)
    LESS            reduce using rule 72 (varcte -> cte_bool .)
    GREATER         reduce using rule 72 (varcte -> cte_bool .)
    AND             reduce using rule 72 (varcte -> cte_bool .)
    OR              reduce using rule 72 (varcte -> cte_bool .)
    DOUBLE_EQUAL    reduce using rule 72 (varcte -> cte_bool .)
    DIFF            reduce using rule 72 (varcte -> cte_bool .)
    LIST            reduce using rule 72 (varcte -> cte_bool .)
    FUNCTION        reduce using rule 72 (varcte -> cte_bool .)


state 71

    (69) varcte -> CTE_INT .

    LCURL           reduce using rule 69 (varcte -> CTE_INT .)
    ID              reduce using rule 69 (varcte -> CTE_INT .)
    CTE_INT         reduce using rule 69 (varcte -> CTE_INT .)
    CTE_FLOAT       reduce using rule 69 (varcte -> CTE_INT .)
    CTE_STRING      reduce using rule 69 (varcte -> CTE_INT .)
    TRUE            reduce using rule 69 (varcte -> CTE_INT .)
    FALSE           reduce using rule 69 (varcte -> CTE_INT .)
    POUND           reduce using rule 69 (varcte -> CTE_INT .)
    DIVIDE          reduce using rule 69 (varcte -> CTE_INT .)
    PRINT           reduce using rule 69 (varcte -> CTE_INT .)
    IF              reduce using rule 69 (varcte -> CTE_INT .)
    SWITCH          reduce using rule 69 (varcte -> CTE_INT .)
    WHILE           reduce using rule 69 (varcte -> CTE_INT .)
    FOR             reduce using rule 69 (varcte -> CTE_INT .)
    INT             reduce using rule 69 (varcte -> CTE_INT .)
    FLOAT           reduce using rule 69 (varcte -> CTE_INT .)
    BOOL            reduce using rule 69 (varcte -> CTE_INT .)
    STRING          reduce using rule 69 (varcte -> CTE_INT .)
    RETURN          reduce using rule 69 (varcte -> CTE_INT .)
    RCURL           reduce using rule 69 (varcte -> CTE_INT .)
    CASE            reduce using rule 69 (varcte -> CTE_INT .)
    DEFAULT         reduce using rule 69 (varcte -> CTE_INT .)
    COMMA           reduce using rule 69 (varcte -> CTE_INT .)
    RPAREN          reduce using rule 69 (varcte -> CTE_INT .)
    TIMES           reduce using rule 69 (varcte -> CTE_INT .)
    PLUS            reduce using rule 69 (varcte -> CTE_INT .)
    MINUS           reduce using rule 69 (varcte -> CTE_INT .)
    LESS            reduce using rule 69 (varcte -> CTE_INT .)
    GREATER         reduce using rule 69 (varcte -> CTE_INT .)
    AND             reduce using rule 69 (varcte -> CTE_INT .)
    OR              reduce using rule 69 (varcte -> CTE_INT .)
    DOUBLE_EQUAL    reduce using rule 69 (varcte -> CTE_INT .)
    DIFF            reduce using rule 69 (varcte -> CTE_INT .)
    LIST            reduce using rule 69 (varcte -> CTE_INT .)
    FUNCTION        reduce using rule 69 (varcte -> CTE_INT .)


state 72

    (73) cte_bool -> TRUE .

    ID              reduce using rule 73 (cte_bool -> TRUE .)
    CTE_INT         reduce using rule 73 (cte_bool -> TRUE .)
    CTE_FLOAT       reduce using rule 73 (cte_bool -> TRUE .)
    CTE_STRING      reduce using rule 73 (cte_bool -> TRUE .)
    TRUE            reduce using rule 73 (cte_bool -> TRUE .)
    FALSE           reduce using rule 73 (cte_bool -> TRUE .)
    TIMES           reduce using rule 73 (cte_bool -> TRUE .)
    POUND           reduce using rule 73 (cte_bool -> TRUE .)
    DIVIDE          reduce using rule 73 (cte_bool -> TRUE .)
    PRINT           reduce using rule 73 (cte_bool -> TRUE .)
    IF              reduce using rule 73 (cte_bool -> TRUE .)
    SWITCH          reduce using rule 73 (cte_bool -> TRUE .)
    WHILE           reduce using rule 73 (cte_bool -> TRUE .)
    FOR             reduce using rule 73 (cte_bool -> TRUE .)
    INT             reduce using rule 73 (cte_bool -> TRUE .)
    FLOAT           reduce using rule 73 (cte_bool -> TRUE .)
    BOOL            reduce using rule 73 (cte_bool -> TRUE .)
    STRING          reduce using rule 73 (cte_bool -> TRUE .)
    RETURN          reduce using rule 73 (cte_bool -> TRUE .)
    RCURL           reduce using rule 73 (cte_bool -> TRUE .)
    CASE            reduce using rule 73 (cte_bool -> TRUE .)
    DEFAULT         reduce using rule 73 (cte_bool -> TRUE .)
    COMMA           reduce using rule 73 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 73 (cte_bool -> TRUE .)
    PLUS            reduce using rule 73 (cte_bool -> TRUE .)
    MINUS           reduce using rule 73 (cte_bool -> TRUE .)
    LESS            reduce using rule 73 (cte_bool -> TRUE .)
    GREATER         reduce using rule 73 (cte_bool -> TRUE .)
    AND             reduce using rule 73 (cte_bool -> TRUE .)
    OR              reduce using rule 73 (cte_bool -> TRUE .)
    DOUBLE_EQUAL    reduce using rule 73 (cte_bool -> TRUE .)
    DIFF            reduce using rule 73 (cte_bool -> TRUE .)
    LIST            reduce using rule 73 (cte_bool -> TRUE .)
    FUNCTION        reduce using rule 73 (cte_bool -> TRUE .)
    LCURL           reduce using rule 73 (cte_bool -> TRUE .)


state 73

    (68) varcte -> ID .

    LCURL           reduce using rule 68 (varcte -> ID .)
    ID              reduce using rule 68 (varcte -> ID .)
    CTE_INT         reduce using rule 68 (varcte -> ID .)
    CTE_FLOAT       reduce using rule 68 (varcte -> ID .)
    CTE_STRING      reduce using rule 68 (varcte -> ID .)
    TRUE            reduce using rule 68 (varcte -> ID .)
    FALSE           reduce using rule 68 (varcte -> ID .)
    POUND           reduce using rule 68 (varcte -> ID .)
    DIVIDE          reduce using rule 68 (varcte -> ID .)
    PRINT           reduce using rule 68 (varcte -> ID .)
    IF              reduce using rule 68 (varcte -> ID .)
    SWITCH          reduce using rule 68 (varcte -> ID .)
    WHILE           reduce using rule 68 (varcte -> ID .)
    FOR             reduce using rule 68 (varcte -> ID .)
    INT             reduce using rule 68 (varcte -> ID .)
    FLOAT           reduce using rule 68 (varcte -> ID .)
    BOOL            reduce using rule 68 (varcte -> ID .)
    STRING          reduce using rule 68 (varcte -> ID .)
    RETURN          reduce using rule 68 (varcte -> ID .)
    RCURL           reduce using rule 68 (varcte -> ID .)
    CASE            reduce using rule 68 (varcte -> ID .)
    DEFAULT         reduce using rule 68 (varcte -> ID .)
    COMMA           reduce using rule 68 (varcte -> ID .)
    RPAREN          reduce using rule 68 (varcte -> ID .)
    TIMES           reduce using rule 68 (varcte -> ID .)
    PLUS            reduce using rule 68 (varcte -> ID .)
    MINUS           reduce using rule 68 (varcte -> ID .)
    LESS            reduce using rule 68 (varcte -> ID .)
    GREATER         reduce using rule 68 (varcte -> ID .)
    AND             reduce using rule 68 (varcte -> ID .)
    OR              reduce using rule 68 (varcte -> ID .)
    DOUBLE_EQUAL    reduce using rule 68 (varcte -> ID .)
    DIFF            reduce using rule 68 (varcte -> ID .)
    LIST            reduce using rule 68 (varcte -> ID .)
    FUNCTION        reduce using rule 68 (varcte -> ID .)


state 74

    (47) factor -> factor1 varcte .

    TIMES           reduce using rule 47 (factor -> factor1 varcte .)
    DIVIDE          reduce using rule 47 (factor -> factor1 varcte .)
    PLUS            reduce using rule 47 (factor -> factor1 varcte .)
    MINUS           reduce using rule 47 (factor -> factor1 varcte .)
    LESS            reduce using rule 47 (factor -> factor1 varcte .)
    GREATER         reduce using rule 47 (factor -> factor1 varcte .)
    AND             reduce using rule 47 (factor -> factor1 varcte .)
    OR              reduce using rule 47 (factor -> factor1 varcte .)
    DOUBLE_EQUAL    reduce using rule 47 (factor -> factor1 varcte .)
    DIFF            reduce using rule 47 (factor -> factor1 varcte .)
    RPAREN          reduce using rule 47 (factor -> factor1 varcte .)
    LIST            reduce using rule 47 (factor -> factor1 varcte .)
    INT             reduce using rule 47 (factor -> factor1 varcte .)
    FLOAT           reduce using rule 47 (factor -> factor1 varcte .)
    BOOL            reduce using rule 47 (factor -> factor1 varcte .)
    STRING          reduce using rule 47 (factor -> factor1 varcte .)
    FUNCTION        reduce using rule 47 (factor -> factor1 varcte .)
    ID              reduce using rule 47 (factor -> factor1 varcte .)
    POUND           reduce using rule 47 (factor -> factor1 varcte .)
    PRINT           reduce using rule 47 (factor -> factor1 varcte .)
    IF              reduce using rule 47 (factor -> factor1 varcte .)
    SWITCH          reduce using rule 47 (factor -> factor1 varcte .)
    WHILE           reduce using rule 47 (factor -> factor1 varcte .)
    FOR             reduce using rule 47 (factor -> factor1 varcte .)
    RETURN          reduce using rule 47 (factor -> factor1 varcte .)
    RCURL           reduce using rule 47 (factor -> factor1 varcte .)
    CASE            reduce using rule 47 (factor -> factor1 varcte .)
    DEFAULT         reduce using rule 47 (factor -> factor1 varcte .)


state 75

    (98) funcion4 -> tipo ID LPAREN . funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL
    (105) funcion3 -> . parametros
    (106) funcion3 -> . epsilon
    (12) parametros -> . tipo parametros1 ID COMMA parametros2
    (13) parametros -> . LIST parametros1 ID COMMA parametros2
    (117) epsilon -> .
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    LIST            shift and go to state 90
    RPAREN          reduce using rule 117 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    tipo                           shift and go to state 88
    epsilon                        shift and go to state 89
    funcion3                       shift and go to state 91
    parametros                     shift and go to state 92

state 76

    (100) funcion5 -> MAIN LPAREN . funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL
    (105) funcion3 -> . parametros
    (106) funcion3 -> . epsilon
    (12) parametros -> . tipo parametros1 ID COMMA parametros2
    (13) parametros -> . LIST parametros1 ID COMMA parametros2
    (117) epsilon -> .
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    LIST            shift and go to state 90
    RPAREN          reduce using rule 117 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    tipo                           shift and go to state 88
    epsilon                        shift and go to state 89
    funcion3                       shift and go to state 93
    parametros                     shift and go to state 92

state 77

    (99) funcion5 -> ID LPAREN . funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL
    (105) funcion3 -> . parametros
    (106) funcion3 -> . epsilon
    (12) parametros -> . tipo parametros1 ID COMMA parametros2
    (13) parametros -> . LIST parametros1 ID COMMA parametros2
    (117) epsilon -> .
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    LIST            shift and go to state 90
    RPAREN          reduce using rule 117 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    tipo                           shift and go to state 88
    epsilon                        shift and go to state 89
    funcion3                       shift and go to state 94
    parametros                     shift and go to state 92

state 78

    (40) main -> FUNCTION VOID MAIN . LPAREN RPAREN LCURL main1 estatuto main2 RCURL

    LPAREN          shift and go to state 95


state 79

    (36) asignacion_list1 -> varcte . asignacion_list2
    (38) asignacion_list2 -> . COMMA asignacion_list1
    (39) asignacion_list2 -> . epsilon
    (117) epsilon -> .

    COMMA           shift and go to state 96
    RPAREN          reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 97
    asignacion_list2               shift and go to state 98

state 80

    (35) asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 . RPAREN

    RPAREN          shift and go to state 99


state 81

    (37) asignacion_list1 -> epsilon .

    RPAREN          reduce using rule 37 (asignacion_list1 -> epsilon .)


state 82

    (46) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    LESS            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    GREATER         reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DOUBLE_EQUAL    reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DIFF            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    LIST            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    INT             reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    FLOAT           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    BOOL            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    FUNCTION        reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    POUND           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    SWITCH          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    RCURL           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    CASE            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DEFAULT         reduce using rule 46 (factor -> LPAREN expresion RPAREN .)


state 83

    (28) exp1 -> PLUS exp .

    LESS            reduce using rule 28 (exp1 -> PLUS exp .)
    GREATER         reduce using rule 28 (exp1 -> PLUS exp .)
    AND             reduce using rule 28 (exp1 -> PLUS exp .)
    OR              reduce using rule 28 (exp1 -> PLUS exp .)
    DOUBLE_EQUAL    reduce using rule 28 (exp1 -> PLUS exp .)
    DIFF            reduce using rule 28 (exp1 -> PLUS exp .)
    LIST            reduce using rule 28 (exp1 -> PLUS exp .)
    INT             reduce using rule 28 (exp1 -> PLUS exp .)
    FLOAT           reduce using rule 28 (exp1 -> PLUS exp .)
    BOOL            reduce using rule 28 (exp1 -> PLUS exp .)
    STRING          reduce using rule 28 (exp1 -> PLUS exp .)
    FUNCTION        reduce using rule 28 (exp1 -> PLUS exp .)
    ID              reduce using rule 28 (exp1 -> PLUS exp .)
    POUND           reduce using rule 28 (exp1 -> PLUS exp .)
    DIVIDE          reduce using rule 28 (exp1 -> PLUS exp .)
    PRINT           reduce using rule 28 (exp1 -> PLUS exp .)
    IF              reduce using rule 28 (exp1 -> PLUS exp .)
    SWITCH          reduce using rule 28 (exp1 -> PLUS exp .)
    WHILE           reduce using rule 28 (exp1 -> PLUS exp .)
    FOR             reduce using rule 28 (exp1 -> PLUS exp .)
    RPAREN          reduce using rule 28 (exp1 -> PLUS exp .)
    RETURN          reduce using rule 28 (exp1 -> PLUS exp .)
    RCURL           reduce using rule 28 (exp1 -> PLUS exp .)
    CASE            reduce using rule 28 (exp1 -> PLUS exp .)
    DEFAULT         reduce using rule 28 (exp1 -> PLUS exp .)


state 84

    (29) exp1 -> MINUS exp .

    LESS            reduce using rule 29 (exp1 -> MINUS exp .)
    GREATER         reduce using rule 29 (exp1 -> MINUS exp .)
    AND             reduce using rule 29 (exp1 -> MINUS exp .)
    OR              reduce using rule 29 (exp1 -> MINUS exp .)
    DOUBLE_EQUAL    reduce using rule 29 (exp1 -> MINUS exp .)
    DIFF            reduce using rule 29 (exp1 -> MINUS exp .)
    LIST            reduce using rule 29 (exp1 -> MINUS exp .)
    INT             reduce using rule 29 (exp1 -> MINUS exp .)
    FLOAT           reduce using rule 29 (exp1 -> MINUS exp .)
    BOOL            reduce using rule 29 (exp1 -> MINUS exp .)
    STRING          reduce using rule 29 (exp1 -> MINUS exp .)
    FUNCTION        reduce using rule 29 (exp1 -> MINUS exp .)
    ID              reduce using rule 29 (exp1 -> MINUS exp .)
    POUND           reduce using rule 29 (exp1 -> MINUS exp .)
    DIVIDE          reduce using rule 29 (exp1 -> MINUS exp .)
    PRINT           reduce using rule 29 (exp1 -> MINUS exp .)
    IF              reduce using rule 29 (exp1 -> MINUS exp .)
    SWITCH          reduce using rule 29 (exp1 -> MINUS exp .)
    WHILE           reduce using rule 29 (exp1 -> MINUS exp .)
    FOR             reduce using rule 29 (exp1 -> MINUS exp .)
    RPAREN          reduce using rule 29 (exp1 -> MINUS exp .)
    RETURN          reduce using rule 29 (exp1 -> MINUS exp .)
    RCURL           reduce using rule 29 (exp1 -> MINUS exp .)
    CASE            reduce using rule 29 (exp1 -> MINUS exp .)
    DEFAULT         reduce using rule 29 (exp1 -> MINUS exp .)


state 85

    (61) expresion1 -> expresion2 exp .

    LIST            reduce using rule 61 (expresion1 -> expresion2 exp .)
    INT             reduce using rule 61 (expresion1 -> expresion2 exp .)
    FLOAT           reduce using rule 61 (expresion1 -> expresion2 exp .)
    BOOL            reduce using rule 61 (expresion1 -> expresion2 exp .)
    STRING          reduce using rule 61 (expresion1 -> expresion2 exp .)
    FUNCTION        reduce using rule 61 (expresion1 -> expresion2 exp .)
    ID              reduce using rule 61 (expresion1 -> expresion2 exp .)
    POUND           reduce using rule 61 (expresion1 -> expresion2 exp .)
    DIVIDE          reduce using rule 61 (expresion1 -> expresion2 exp .)
    PRINT           reduce using rule 61 (expresion1 -> expresion2 exp .)
    IF              reduce using rule 61 (expresion1 -> expresion2 exp .)
    SWITCH          reduce using rule 61 (expresion1 -> expresion2 exp .)
    WHILE           reduce using rule 61 (expresion1 -> expresion2 exp .)
    FOR             reduce using rule 61 (expresion1 -> expresion2 exp .)
    RPAREN          reduce using rule 61 (expresion1 -> expresion2 exp .)
    RETURN          reduce using rule 61 (expresion1 -> expresion2 exp .)
    RCURL           reduce using rule 61 (expresion1 -> expresion2 exp .)
    CASE            reduce using rule 61 (expresion1 -> expresion2 exp .)
    DEFAULT         reduce using rule 61 (expresion1 -> expresion2 exp .)


state 86

    (33) termino1 -> DIVIDE termino .

    PLUS            reduce using rule 33 (termino1 -> DIVIDE termino .)
    MINUS           reduce using rule 33 (termino1 -> DIVIDE termino .)
    LESS            reduce using rule 33 (termino1 -> DIVIDE termino .)
    GREATER         reduce using rule 33 (termino1 -> DIVIDE termino .)
    AND             reduce using rule 33 (termino1 -> DIVIDE termino .)
    OR              reduce using rule 33 (termino1 -> DIVIDE termino .)
    DOUBLE_EQUAL    reduce using rule 33 (termino1 -> DIVIDE termino .)
    DIFF            reduce using rule 33 (termino1 -> DIVIDE termino .)
    LIST            reduce using rule 33 (termino1 -> DIVIDE termino .)
    INT             reduce using rule 33 (termino1 -> DIVIDE termino .)
    FLOAT           reduce using rule 33 (termino1 -> DIVIDE termino .)
    BOOL            reduce using rule 33 (termino1 -> DIVIDE termino .)
    STRING          reduce using rule 33 (termino1 -> DIVIDE termino .)
    FUNCTION        reduce using rule 33 (termino1 -> DIVIDE termino .)
    ID              reduce using rule 33 (termino1 -> DIVIDE termino .)
    POUND           reduce using rule 33 (termino1 -> DIVIDE termino .)
    DIVIDE          reduce using rule 33 (termino1 -> DIVIDE termino .)
    PRINT           reduce using rule 33 (termino1 -> DIVIDE termino .)
    IF              reduce using rule 33 (termino1 -> DIVIDE termino .)
    SWITCH          reduce using rule 33 (termino1 -> DIVIDE termino .)
    WHILE           reduce using rule 33 (termino1 -> DIVIDE termino .)
    FOR             reduce using rule 33 (termino1 -> DIVIDE termino .)
    RPAREN          reduce using rule 33 (termino1 -> DIVIDE termino .)
    RETURN          reduce using rule 33 (termino1 -> DIVIDE termino .)
    RCURL           reduce using rule 33 (termino1 -> DIVIDE termino .)
    CASE            reduce using rule 33 (termino1 -> DIVIDE termino .)
    DEFAULT         reduce using rule 33 (termino1 -> DIVIDE termino .)


state 87

    (32) termino1 -> TIMES termino .

    PLUS            reduce using rule 32 (termino1 -> TIMES termino .)
    MINUS           reduce using rule 32 (termino1 -> TIMES termino .)
    LESS            reduce using rule 32 (termino1 -> TIMES termino .)
    GREATER         reduce using rule 32 (termino1 -> TIMES termino .)
    AND             reduce using rule 32 (termino1 -> TIMES termino .)
    OR              reduce using rule 32 (termino1 -> TIMES termino .)
    DOUBLE_EQUAL    reduce using rule 32 (termino1 -> TIMES termino .)
    DIFF            reduce using rule 32 (termino1 -> TIMES termino .)
    LIST            reduce using rule 32 (termino1 -> TIMES termino .)
    INT             reduce using rule 32 (termino1 -> TIMES termino .)
    FLOAT           reduce using rule 32 (termino1 -> TIMES termino .)
    BOOL            reduce using rule 32 (termino1 -> TIMES termino .)
    STRING          reduce using rule 32 (termino1 -> TIMES termino .)
    FUNCTION        reduce using rule 32 (termino1 -> TIMES termino .)
    ID              reduce using rule 32 (termino1 -> TIMES termino .)
    POUND           reduce using rule 32 (termino1 -> TIMES termino .)
    DIVIDE          reduce using rule 32 (termino1 -> TIMES termino .)
    PRINT           reduce using rule 32 (termino1 -> TIMES termino .)
    IF              reduce using rule 32 (termino1 -> TIMES termino .)
    SWITCH          reduce using rule 32 (termino1 -> TIMES termino .)
    WHILE           reduce using rule 32 (termino1 -> TIMES termino .)
    FOR             reduce using rule 32 (termino1 -> TIMES termino .)
    RPAREN          reduce using rule 32 (termino1 -> TIMES termino .)
    RETURN          reduce using rule 32 (termino1 -> TIMES termino .)
    RCURL           reduce using rule 32 (termino1 -> TIMES termino .)
    CASE            reduce using rule 32 (termino1 -> TIMES termino .)
    DEFAULT         reduce using rule 32 (termino1 -> TIMES termino .)


state 88

    (12) parametros -> tipo . parametros1 ID COMMA parametros2
    (14) parametros1 -> . AMPERSON
    (15) parametros1 -> . epsilon
    (117) epsilon -> .

    AMPERSON        shift and go to state 101
    ID              reduce using rule 117 (epsilon -> .)

    parametros1                    shift and go to state 100
    epsilon                        shift and go to state 102

state 89

    (106) funcion3 -> epsilon .

    RPAREN          reduce using rule 106 (funcion3 -> epsilon .)


state 90

    (13) parametros -> LIST . parametros1 ID COMMA parametros2
    (14) parametros1 -> . AMPERSON
    (15) parametros1 -> . epsilon
    (117) epsilon -> .

    AMPERSON        shift and go to state 101
    ID              reduce using rule 117 (epsilon -> .)

    parametros1                    shift and go to state 103
    epsilon                        shift and go to state 102

state 91

    (98) funcion4 -> tipo ID LPAREN funcion3 . RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL

    RPAREN          shift and go to state 104


state 92

    (105) funcion3 -> parametros .

    RPAREN          reduce using rule 105 (funcion3 -> parametros .)


state 93

    (100) funcion5 -> MAIN LPAREN funcion3 . RPAREN LCURL funcion1 estatuto funcion2 RCURL

    RPAREN          shift and go to state 105


state 94

    (99) funcion5 -> ID LPAREN funcion3 . RPAREN LCURL funcion1 estatuto funcion2 RCURL

    RPAREN          shift and go to state 106


state 95

    (40) main -> FUNCTION VOID MAIN LPAREN . RPAREN LCURL main1 estatuto main2 RCURL

    RPAREN          shift and go to state 107


state 96

    (38) asignacion_list2 -> COMMA . asignacion_list1
    (36) asignacion_list1 -> . varcte asignacion_list2
    (37) asignacion_list1 -> . epsilon
    (68) varcte -> . ID
    (69) varcte -> . CTE_INT
    (70) varcte -> . CTE_FLOAT
    (71) varcte -> . CTE_STRING
    (72) varcte -> . cte_bool
    (117) epsilon -> .
    (73) cte_bool -> . TRUE
    (74) cte_bool -> . FALSE

    ID              shift and go to state 73
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 69
    CTE_STRING      shift and go to state 67
    RPAREN          reduce using rule 117 (epsilon -> .)
    TRUE            shift and go to state 72
    FALSE           shift and go to state 68

    epsilon                        shift and go to state 81
    cte_bool                       shift and go to state 70
    asignacion_list1               shift and go to state 108
    varcte                         shift and go to state 79

state 97

    (39) asignacion_list2 -> epsilon .

    RPAREN          reduce using rule 39 (asignacion_list2 -> epsilon .)


state 98

    (36) asignacion_list1 -> varcte asignacion_list2 .

    RPAREN          reduce using rule 36 (asignacion_list1 -> varcte asignacion_list2 .)


state 99

    (35) asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .

    LIST            reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    INT             reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    FLOAT           reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    BOOL            reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    STRING          reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    FUNCTION        reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    ID              reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    POUND           reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    DIVIDE          reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    PRINT           reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    IF              reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    SWITCH          reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    WHILE           reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)
    FOR             reduce using rule 35 (asignacion_list -> LIST ID EQUALS LPAREN asignacion_list1 RPAREN .)


state 100

    (12) parametros -> tipo parametros1 . ID COMMA parametros2

    ID              shift and go to state 109


state 101

    (14) parametros1 -> AMPERSON .

    ID              reduce using rule 14 (parametros1 -> AMPERSON .)


state 102

    (15) parametros1 -> epsilon .

    ID              reduce using rule 15 (parametros1 -> epsilon .)


state 103

    (13) parametros -> LIST parametros1 . ID COMMA parametros2

    ID              shift and go to state 110


state 104

    (98) funcion4 -> tipo ID LPAREN funcion3 RPAREN . LCURL funcion1 estatuto funcion2 RETURN ID RCURL

    LCURL           shift and go to state 111


state 105

    (100) funcion5 -> MAIN LPAREN funcion3 RPAREN . LCURL funcion1 estatuto funcion2 RCURL

    LCURL           shift and go to state 112


state 106

    (99) funcion5 -> ID LPAREN funcion3 RPAREN . LCURL funcion1 estatuto funcion2 RCURL

    LCURL           shift and go to state 113


state 107

    (40) main -> FUNCTION VOID MAIN LPAREN RPAREN . LCURL main1 estatuto main2 RCURL

    LCURL           shift and go to state 114


state 108

    (38) asignacion_list2 -> COMMA asignacion_list1 .

    RPAREN          reduce using rule 38 (asignacion_list2 -> COMMA asignacion_list1 .)


state 109

    (12) parametros -> tipo parametros1 ID . COMMA parametros2

    COMMA           shift and go to state 115


state 110

    (13) parametros -> LIST parametros1 ID . COMMA parametros2

    COMMA           shift and go to state 116


state 111

    (98) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL . funcion1 estatuto funcion2 RETURN ID RCURL
    (101) funcion1 -> . epsilon
    (102) funcion1 -> . var_declaracion funcion1
    (117) epsilon -> .
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . LIST var_declaracion2
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    LIST            shift and go to state 3
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

  ! INT             [ reduce using rule 117 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 117 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 117 (epsilon -> .) ]
  ! STRING          [ reduce using rule 117 (epsilon -> .) ]

    tipo                           shift and go to state 6
    epsilon                        shift and go to state 117
    var_declaracion                shift and go to state 118
    funcion1                       shift and go to state 119

state 112

    (100) funcion5 -> MAIN LPAREN funcion3 RPAREN LCURL . funcion1 estatuto funcion2 RCURL
    (101) funcion1 -> . epsilon
    (102) funcion1 -> . var_declaracion funcion1
    (117) epsilon -> .
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . LIST var_declaracion2
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    LIST            shift and go to state 3
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

  ! INT             [ reduce using rule 117 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 117 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 117 (epsilon -> .) ]
  ! STRING          [ reduce using rule 117 (epsilon -> .) ]

    tipo                           shift and go to state 6
    epsilon                        shift and go to state 117
    var_declaracion                shift and go to state 118
    funcion1                       shift and go to state 120

state 113

    (99) funcion5 -> ID LPAREN funcion3 RPAREN LCURL . funcion1 estatuto funcion2 RCURL
    (101) funcion1 -> . epsilon
    (102) funcion1 -> . var_declaracion funcion1
    (117) epsilon -> .
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . LIST var_declaracion2
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    LIST            shift and go to state 3
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

  ! INT             [ reduce using rule 117 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 117 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 117 (epsilon -> .) ]
  ! STRING          [ reduce using rule 117 (epsilon -> .) ]

    tipo                           shift and go to state 6
    epsilon                        shift and go to state 117
    var_declaracion                shift and go to state 118
    funcion1                       shift and go to state 121

state 114

    (40) main -> FUNCTION VOID MAIN LPAREN RPAREN LCURL . main1 estatuto main2 RCURL
    (41) main1 -> . var_declaracion main1
    (42) main1 -> . epsilon
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . LIST var_declaracion2
    (117) epsilon -> .
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    LIST            shift and go to state 3
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

  ! INT             [ reduce using rule 117 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 117 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 117 (epsilon -> .) ]
  ! STRING          [ reduce using rule 117 (epsilon -> .) ]

    tipo                           shift and go to state 6
    main1                          shift and go to state 122
    var_declaracion                shift and go to state 123
    epsilon                        shift and go to state 124

state 115

    (12) parametros -> tipo parametros1 ID COMMA . parametros2
    (16) parametros2 -> . tipo parametros1 ID COMMA parametros2
    (17) parametros2 -> . LIST parametros1 ID COMMA parametros2
    (18) parametros2 -> . epsilon
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING
    (117) epsilon -> .

    LIST            shift and go to state 127
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5
    RPAREN          reduce using rule 117 (epsilon -> .)

    parametros2                    shift and go to state 126
    tipo                           shift and go to state 125
    epsilon                        shift and go to state 128

state 116

    (13) parametros -> LIST parametros1 ID COMMA . parametros2
    (16) parametros2 -> . tipo parametros1 ID COMMA parametros2
    (17) parametros2 -> . LIST parametros1 ID COMMA parametros2
    (18) parametros2 -> . epsilon
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING
    (117) epsilon -> .

    LIST            shift and go to state 127
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5
    RPAREN          reduce using rule 117 (epsilon -> .)

    parametros2                    shift and go to state 129
    tipo                           shift and go to state 125
    epsilon                        shift and go to state 128

state 117

    (101) funcion1 -> epsilon .

    ID              reduce using rule 101 (funcion1 -> epsilon .)
    POUND           reduce using rule 101 (funcion1 -> epsilon .)
    DIVIDE          reduce using rule 101 (funcion1 -> epsilon .)
    PRINT           reduce using rule 101 (funcion1 -> epsilon .)
    IF              reduce using rule 101 (funcion1 -> epsilon .)
    SWITCH          reduce using rule 101 (funcion1 -> epsilon .)
    WHILE           reduce using rule 101 (funcion1 -> epsilon .)
    FOR             reduce using rule 101 (funcion1 -> epsilon .)
    INT             reduce using rule 101 (funcion1 -> epsilon .)
    FLOAT           reduce using rule 101 (funcion1 -> epsilon .)
    BOOL            reduce using rule 101 (funcion1 -> epsilon .)
    STRING          reduce using rule 101 (funcion1 -> epsilon .)


state 118

    (102) funcion1 -> var_declaracion . funcion1
    (101) funcion1 -> . epsilon
    (102) funcion1 -> . var_declaracion funcion1
    (117) epsilon -> .
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . LIST var_declaracion2
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    LIST            shift and go to state 3
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

  ! INT             [ reduce using rule 117 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 117 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 117 (epsilon -> .) ]
  ! STRING          [ reduce using rule 117 (epsilon -> .) ]

    tipo                           shift and go to state 6
    epsilon                        shift and go to state 117
    var_declaracion                shift and go to state 118
    funcion1                       shift and go to state 130

state 119

    (98) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 . estatuto funcion2 RETURN ID RCURL
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    comentario                     shift and go to state 132
    tipo                           shift and go to state 133
    estatuto                       shift and go to state 134
    while                          shift and go to state 148
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    for                            shift and go to state 145
    asignacion                     shift and go to state 146
    switch                         shift and go to state 135

state 120

    (100) funcion5 -> MAIN LPAREN funcion3 RPAREN LCURL funcion1 . estatuto funcion2 RCURL
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    comentario                     shift and go to state 132
    for                            shift and go to state 145
    estatuto                       shift and go to state 149
    while                          shift and go to state 148
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    tipo                           shift and go to state 133
    asignacion                     shift and go to state 146
    switch                         shift and go to state 135

state 121

    (99) funcion5 -> ID LPAREN funcion3 RPAREN LCURL funcion1 . estatuto funcion2 RCURL
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    comentario                     shift and go to state 132
    for                            shift and go to state 145
    estatuto                       shift and go to state 150
    while                          shift and go to state 148
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    tipo                           shift and go to state 133
    asignacion                     shift and go to state 146
    switch                         shift and go to state 135

state 122

    (40) main -> FUNCTION VOID MAIN LPAREN RPAREN LCURL main1 . estatuto main2 RCURL
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    comentario                     shift and go to state 132
    for                            shift and go to state 145
    estatuto                       shift and go to state 151
    switch                         shift and go to state 135
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    tipo                           shift and go to state 133
    asignacion                     shift and go to state 146
    while                          shift and go to state 148

state 123

    (41) main1 -> var_declaracion . main1
    (41) main1 -> . var_declaracion main1
    (42) main1 -> . epsilon
    (6) var_declaracion -> . tipo var_declaracion1
    (7) var_declaracion -> . LIST var_declaracion2
    (117) epsilon -> .
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    LIST            shift and go to state 3
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

  ! INT             [ reduce using rule 117 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 117 (epsilon -> .) ]
  ! BOOL            [ reduce using rule 117 (epsilon -> .) ]
  ! STRING          [ reduce using rule 117 (epsilon -> .) ]

    tipo                           shift and go to state 6
    main1                          shift and go to state 152
    var_declaracion                shift and go to state 123
    epsilon                        shift and go to state 124

state 124

    (42) main1 -> epsilon .

    ID              reduce using rule 42 (main1 -> epsilon .)
    POUND           reduce using rule 42 (main1 -> epsilon .)
    DIVIDE          reduce using rule 42 (main1 -> epsilon .)
    PRINT           reduce using rule 42 (main1 -> epsilon .)
    IF              reduce using rule 42 (main1 -> epsilon .)
    SWITCH          reduce using rule 42 (main1 -> epsilon .)
    WHILE           reduce using rule 42 (main1 -> epsilon .)
    FOR             reduce using rule 42 (main1 -> epsilon .)
    INT             reduce using rule 42 (main1 -> epsilon .)
    FLOAT           reduce using rule 42 (main1 -> epsilon .)
    BOOL            reduce using rule 42 (main1 -> epsilon .)
    STRING          reduce using rule 42 (main1 -> epsilon .)


state 125

    (16) parametros2 -> tipo . parametros1 ID COMMA parametros2
    (14) parametros1 -> . AMPERSON
    (15) parametros1 -> . epsilon
    (117) epsilon -> .

    AMPERSON        shift and go to state 101
    ID              reduce using rule 117 (epsilon -> .)

    parametros1                    shift and go to state 153
    epsilon                        shift and go to state 102

state 126

    (12) parametros -> tipo parametros1 ID COMMA parametros2 .

    RPAREN          reduce using rule 12 (parametros -> tipo parametros1 ID COMMA parametros2 .)


state 127

    (17) parametros2 -> LIST . parametros1 ID COMMA parametros2
    (14) parametros1 -> . AMPERSON
    (15) parametros1 -> . epsilon
    (117) epsilon -> .

    AMPERSON        shift and go to state 101
    ID              reduce using rule 117 (epsilon -> .)

    parametros1                    shift and go to state 154
    epsilon                        shift and go to state 102

state 128

    (18) parametros2 -> epsilon .

    RPAREN          reduce using rule 18 (parametros2 -> epsilon .)


state 129

    (13) parametros -> LIST parametros1 ID COMMA parametros2 .

    RPAREN          reduce using rule 13 (parametros -> LIST parametros1 ID COMMA parametros2 .)


state 130

    (102) funcion1 -> var_declaracion funcion1 .

    ID              reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    POUND           reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    DIVIDE          reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    PRINT           reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    IF              reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    SWITCH          reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    WHILE           reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    FOR             reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    INT             reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    FLOAT           reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    BOOL            reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)
    STRING          reduce using rule 102 (funcion1 -> var_declaracion funcion1 .)


state 131

    (75) print -> PRINT . LPAREN print1 RPAREN

    LPAREN          shift and go to state 155


state 132

    (52) estatuto -> comentario .

    ID              reduce using rule 52 (estatuto -> comentario .)
    POUND           reduce using rule 52 (estatuto -> comentario .)
    DIVIDE          reduce using rule 52 (estatuto -> comentario .)
    PRINT           reduce using rule 52 (estatuto -> comentario .)
    IF              reduce using rule 52 (estatuto -> comentario .)
    SWITCH          reduce using rule 52 (estatuto -> comentario .)
    WHILE           reduce using rule 52 (estatuto -> comentario .)
    FOR             reduce using rule 52 (estatuto -> comentario .)
    INT             reduce using rule 52 (estatuto -> comentario .)
    FLOAT           reduce using rule 52 (estatuto -> comentario .)
    BOOL            reduce using rule 52 (estatuto -> comentario .)
    STRING          reduce using rule 52 (estatuto -> comentario .)
    RCURL           reduce using rule 52 (estatuto -> comentario .)
    RETURN          reduce using rule 52 (estatuto -> comentario .)
    CASE            reduce using rule 52 (estatuto -> comentario .)
    DEFAULT         reduce using rule 52 (estatuto -> comentario .)


state 133

    (87) input -> tipo . ID EQUALS INPUT LPAREN input1 RPAREN

    ID              shift and go to state 156


state 134

    (98) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto . funcion2 RETURN ID RCURL
    (103) funcion2 -> . epsilon
    (104) funcion2 -> . estatuto funcion2
    (117) epsilon -> .
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    RETURN          reduce using rule 117 (epsilon -> .)
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    funcion2                       shift and go to state 157
    comentario                     shift and go to state 132
    tipo                           shift and go to state 133
    estatuto                       shift and go to state 158
    while                          shift and go to state 148
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    epsilon                        shift and go to state 159
    for                            shift and go to state 145
    asignacion                     shift and go to state 146
    switch                         shift and go to state 135

state 135

    (56) estatuto -> switch .

    ID              reduce using rule 56 (estatuto -> switch .)
    POUND           reduce using rule 56 (estatuto -> switch .)
    DIVIDE          reduce using rule 56 (estatuto -> switch .)
    PRINT           reduce using rule 56 (estatuto -> switch .)
    IF              reduce using rule 56 (estatuto -> switch .)
    SWITCH          reduce using rule 56 (estatuto -> switch .)
    WHILE           reduce using rule 56 (estatuto -> switch .)
    FOR             reduce using rule 56 (estatuto -> switch .)
    INT             reduce using rule 56 (estatuto -> switch .)
    FLOAT           reduce using rule 56 (estatuto -> switch .)
    BOOL            reduce using rule 56 (estatuto -> switch .)
    STRING          reduce using rule 56 (estatuto -> switch .)
    RCURL           reduce using rule 56 (estatuto -> switch .)
    RETURN          reduce using rule 56 (estatuto -> switch .)
    CASE            reduce using rule 56 (estatuto -> switch .)
    DEFAULT         reduce using rule 56 (estatuto -> switch .)


state 136

    (107) switch -> SWITCH . varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (68) varcte -> . ID
    (69) varcte -> . CTE_INT
    (70) varcte -> . CTE_FLOAT
    (71) varcte -> . CTE_STRING
    (72) varcte -> . cte_bool
    (73) cte_bool -> . TRUE
    (74) cte_bool -> . FALSE

    ID              shift and go to state 73
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 69
    CTE_STRING      shift and go to state 67
    TRUE            shift and go to state 72
    FALSE           shift and go to state 68

    varcte                         shift and go to state 160
    cte_bool                       shift and go to state 70

state 137

    (55) estatuto -> condicion .

    ID              reduce using rule 55 (estatuto -> condicion .)
    POUND           reduce using rule 55 (estatuto -> condicion .)
    DIVIDE          reduce using rule 55 (estatuto -> condicion .)
    PRINT           reduce using rule 55 (estatuto -> condicion .)
    IF              reduce using rule 55 (estatuto -> condicion .)
    SWITCH          reduce using rule 55 (estatuto -> condicion .)
    WHILE           reduce using rule 55 (estatuto -> condicion .)
    FOR             reduce using rule 55 (estatuto -> condicion .)
    INT             reduce using rule 55 (estatuto -> condicion .)
    FLOAT           reduce using rule 55 (estatuto -> condicion .)
    BOOL            reduce using rule 55 (estatuto -> condicion .)
    STRING          reduce using rule 55 (estatuto -> condicion .)
    RCURL           reduce using rule 55 (estatuto -> condicion .)
    RETURN          reduce using rule 55 (estatuto -> condicion .)
    CASE            reduce using rule 55 (estatuto -> condicion .)
    DEFAULT         reduce using rule 55 (estatuto -> condicion .)


state 138

    (53) estatuto -> print .

    ID              reduce using rule 53 (estatuto -> print .)
    POUND           reduce using rule 53 (estatuto -> print .)
    DIVIDE          reduce using rule 53 (estatuto -> print .)
    PRINT           reduce using rule 53 (estatuto -> print .)
    IF              reduce using rule 53 (estatuto -> print .)
    SWITCH          reduce using rule 53 (estatuto -> print .)
    WHILE           reduce using rule 53 (estatuto -> print .)
    FOR             reduce using rule 53 (estatuto -> print .)
    INT             reduce using rule 53 (estatuto -> print .)
    FLOAT           reduce using rule 53 (estatuto -> print .)
    BOOL            reduce using rule 53 (estatuto -> print .)
    STRING          reduce using rule 53 (estatuto -> print .)
    RCURL           reduce using rule 53 (estatuto -> print .)
    RETURN          reduce using rule 53 (estatuto -> print .)
    CASE            reduce using rule 53 (estatuto -> print .)
    DEFAULT         reduce using rule 53 (estatuto -> print .)


state 139

    (54) estatuto -> input .

    ID              reduce using rule 54 (estatuto -> input .)
    POUND           reduce using rule 54 (estatuto -> input .)
    DIVIDE          reduce using rule 54 (estatuto -> input .)
    PRINT           reduce using rule 54 (estatuto -> input .)
    IF              reduce using rule 54 (estatuto -> input .)
    SWITCH          reduce using rule 54 (estatuto -> input .)
    WHILE           reduce using rule 54 (estatuto -> input .)
    FOR             reduce using rule 54 (estatuto -> input .)
    INT             reduce using rule 54 (estatuto -> input .)
    FLOAT           reduce using rule 54 (estatuto -> input .)
    BOOL            reduce using rule 54 (estatuto -> input .)
    STRING          reduce using rule 54 (estatuto -> input .)
    RCURL           reduce using rule 54 (estatuto -> input .)
    RETURN          reduce using rule 54 (estatuto -> input .)
    CASE            reduce using rule 54 (estatuto -> input .)
    DEFAULT         reduce using rule 54 (estatuto -> input .)


state 140

    (114) comentario -> DIVIDE . TIMES comentario1 TIMES DIVIDE

    TIMES           shift and go to state 161


state 141

    (91) for -> FOR . CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN

    CTE_INT         shift and go to state 162


state 142

    (19) asignacion -> ID . EQUALS expresion
    (88) input -> ID . EQUALS INPUT LPAREN input1 RPAREN

    EQUALS          shift and go to state 163


state 143

    (80) condicion -> IF . LPAREN expresion RPAREN bloque condicion1

    LPAREN          shift and go to state 164


state 144

    (113) comentario -> POUND . varcte comentario1
    (68) varcte -> . ID
    (69) varcte -> . CTE_INT
    (70) varcte -> . CTE_FLOAT
    (71) varcte -> . CTE_STRING
    (72) varcte -> . cte_bool
    (73) cte_bool -> . TRUE
    (74) cte_bool -> . FALSE

    ID              shift and go to state 73
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 69
    CTE_STRING      shift and go to state 67
    TRUE            shift and go to state 72
    FALSE           shift and go to state 68

    cte_bool                       shift and go to state 70
    varcte                         shift and go to state 165

state 145

    (58) estatuto -> for .

    ID              reduce using rule 58 (estatuto -> for .)
    POUND           reduce using rule 58 (estatuto -> for .)
    DIVIDE          reduce using rule 58 (estatuto -> for .)
    PRINT           reduce using rule 58 (estatuto -> for .)
    IF              reduce using rule 58 (estatuto -> for .)
    SWITCH          reduce using rule 58 (estatuto -> for .)
    WHILE           reduce using rule 58 (estatuto -> for .)
    FOR             reduce using rule 58 (estatuto -> for .)
    INT             reduce using rule 58 (estatuto -> for .)
    FLOAT           reduce using rule 58 (estatuto -> for .)
    BOOL            reduce using rule 58 (estatuto -> for .)
    STRING          reduce using rule 58 (estatuto -> for .)
    RCURL           reduce using rule 58 (estatuto -> for .)
    RETURN          reduce using rule 58 (estatuto -> for .)
    CASE            reduce using rule 58 (estatuto -> for .)
    DEFAULT         reduce using rule 58 (estatuto -> for .)


state 146

    (51) estatuto -> asignacion .

    ID              reduce using rule 51 (estatuto -> asignacion .)
    POUND           reduce using rule 51 (estatuto -> asignacion .)
    DIVIDE          reduce using rule 51 (estatuto -> asignacion .)
    PRINT           reduce using rule 51 (estatuto -> asignacion .)
    IF              reduce using rule 51 (estatuto -> asignacion .)
    SWITCH          reduce using rule 51 (estatuto -> asignacion .)
    WHILE           reduce using rule 51 (estatuto -> asignacion .)
    FOR             reduce using rule 51 (estatuto -> asignacion .)
    INT             reduce using rule 51 (estatuto -> asignacion .)
    FLOAT           reduce using rule 51 (estatuto -> asignacion .)
    BOOL            reduce using rule 51 (estatuto -> asignacion .)
    STRING          reduce using rule 51 (estatuto -> asignacion .)
    RCURL           reduce using rule 51 (estatuto -> asignacion .)
    RETURN          reduce using rule 51 (estatuto -> asignacion .)
    CASE            reduce using rule 51 (estatuto -> asignacion .)
    DEFAULT         reduce using rule 51 (estatuto -> asignacion .)


state 147

    (45) while -> WHILE . LPAREN expresion RPAREN bloque

    LPAREN          shift and go to state 166


state 148

    (57) estatuto -> while .

    ID              reduce using rule 57 (estatuto -> while .)
    POUND           reduce using rule 57 (estatuto -> while .)
    DIVIDE          reduce using rule 57 (estatuto -> while .)
    PRINT           reduce using rule 57 (estatuto -> while .)
    IF              reduce using rule 57 (estatuto -> while .)
    SWITCH          reduce using rule 57 (estatuto -> while .)
    WHILE           reduce using rule 57 (estatuto -> while .)
    FOR             reduce using rule 57 (estatuto -> while .)
    INT             reduce using rule 57 (estatuto -> while .)
    FLOAT           reduce using rule 57 (estatuto -> while .)
    BOOL            reduce using rule 57 (estatuto -> while .)
    STRING          reduce using rule 57 (estatuto -> while .)
    RCURL           reduce using rule 57 (estatuto -> while .)
    RETURN          reduce using rule 57 (estatuto -> while .)
    CASE            reduce using rule 57 (estatuto -> while .)
    DEFAULT         reduce using rule 57 (estatuto -> while .)


state 149

    (100) funcion5 -> MAIN LPAREN funcion3 RPAREN LCURL funcion1 estatuto . funcion2 RCURL
    (103) funcion2 -> . epsilon
    (104) funcion2 -> . estatuto funcion2
    (117) epsilon -> .
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    RCURL           reduce using rule 117 (epsilon -> .)
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    funcion2                       shift and go to state 167
    comentario                     shift and go to state 132
    for                            shift and go to state 145
    estatuto                       shift and go to state 158
    while                          shift and go to state 148
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    epsilon                        shift and go to state 159
    tipo                           shift and go to state 133
    asignacion                     shift and go to state 146
    switch                         shift and go to state 135

state 150

    (99) funcion5 -> ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto . funcion2 RCURL
    (103) funcion2 -> . epsilon
    (104) funcion2 -> . estatuto funcion2
    (117) epsilon -> .
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    RCURL           reduce using rule 117 (epsilon -> .)
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    funcion2                       shift and go to state 168
    comentario                     shift and go to state 132
    for                            shift and go to state 145
    estatuto                       shift and go to state 158
    while                          shift and go to state 148
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    epsilon                        shift and go to state 159
    tipo                           shift and go to state 133
    asignacion                     shift and go to state 146
    switch                         shift and go to state 135

state 151

    (40) main -> FUNCTION VOID MAIN LPAREN RPAREN LCURL main1 estatuto . main2 RCURL
    (43) main2 -> . estatuto main2
    (44) main2 -> . epsilon
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (117) epsilon -> .
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    RCURL           reduce using rule 117 (epsilon -> .)
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    comentario                     shift and go to state 132
    for                            shift and go to state 145
    estatuto                       shift and go to state 169
    switch                         shift and go to state 135
    condicion                      shift and go to state 137
    epsilon                        shift and go to state 170
    print                          shift and go to state 138
    input                          shift and go to state 139
    main2                          shift and go to state 171
    tipo                           shift and go to state 133
    asignacion                     shift and go to state 146
    while                          shift and go to state 148

state 152

    (41) main1 -> var_declaracion main1 .

    ID              reduce using rule 41 (main1 -> var_declaracion main1 .)
    POUND           reduce using rule 41 (main1 -> var_declaracion main1 .)
    DIVIDE          reduce using rule 41 (main1 -> var_declaracion main1 .)
    PRINT           reduce using rule 41 (main1 -> var_declaracion main1 .)
    IF              reduce using rule 41 (main1 -> var_declaracion main1 .)
    SWITCH          reduce using rule 41 (main1 -> var_declaracion main1 .)
    WHILE           reduce using rule 41 (main1 -> var_declaracion main1 .)
    FOR             reduce using rule 41 (main1 -> var_declaracion main1 .)
    INT             reduce using rule 41 (main1 -> var_declaracion main1 .)
    FLOAT           reduce using rule 41 (main1 -> var_declaracion main1 .)
    BOOL            reduce using rule 41 (main1 -> var_declaracion main1 .)
    STRING          reduce using rule 41 (main1 -> var_declaracion main1 .)


state 153

    (16) parametros2 -> tipo parametros1 . ID COMMA parametros2

    ID              shift and go to state 172


state 154

    (17) parametros2 -> LIST parametros1 . ID COMMA parametros2

    ID              shift and go to state 173


state 155

    (75) print -> PRINT LPAREN . print1 RPAREN
    (76) print1 -> . CTE_STRING print2
    (77) print1 -> . ID print2

    CTE_STRING      shift and go to state 175
    ID              shift and go to state 176

    print1                         shift and go to state 174

state 156

    (87) input -> tipo ID . EQUALS INPUT LPAREN input1 RPAREN

    EQUALS          shift and go to state 177


state 157

    (98) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 . RETURN ID RCURL

    RETURN          shift and go to state 178


state 158

    (104) funcion2 -> estatuto . funcion2
    (103) funcion2 -> . epsilon
    (104) funcion2 -> . estatuto funcion2
    (117) epsilon -> .
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    RETURN          reduce using rule 117 (epsilon -> .)
    RCURL           reduce using rule 117 (epsilon -> .)
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    funcion2                       shift and go to state 179
    comentario                     shift and go to state 132
    for                            shift and go to state 145
    estatuto                       shift and go to state 158
    while                          shift and go to state 148
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    epsilon                        shift and go to state 159
    tipo                           shift and go to state 133
    asignacion                     shift and go to state 146
    switch                         shift and go to state 135

state 159

    (103) funcion2 -> epsilon .

    RETURN          reduce using rule 103 (funcion2 -> epsilon .)
    RCURL           reduce using rule 103 (funcion2 -> epsilon .)


state 160

    (107) switch -> SWITCH varcte . LCURL CASE COLON switch3 switch1 switch2 RCURL

    LCURL           shift and go to state 180


state 161

    (114) comentario -> DIVIDE TIMES . comentario1 TIMES DIVIDE
    (115) comentario1 -> . varcte comentario1
    (116) comentario1 -> . epsilon
    (68) varcte -> . ID
    (69) varcte -> . CTE_INT
    (70) varcte -> . CTE_FLOAT
    (71) varcte -> . CTE_STRING
    (72) varcte -> . cte_bool
    (117) epsilon -> .
    (73) cte_bool -> . TRUE
    (74) cte_bool -> . FALSE

    ID              shift and go to state 73
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 69
    CTE_STRING      shift and go to state 67
    TIMES           reduce using rule 117 (epsilon -> .)
    TRUE            shift and go to state 72
    FALSE           shift and go to state 68

    epsilon                        shift and go to state 182
    cte_bool                       shift and go to state 70
    varcte                         shift and go to state 181
    comentario1                    shift and go to state 183

state 162

    (91) for -> FOR CTE_INT . TO CTE_INT BY LPAREN for1 CTE_INT RPAREN

    TO              shift and go to state 184


state 163

    (19) asignacion -> ID EQUALS . expresion
    (88) input -> ID EQUALS . INPUT LPAREN input1 RPAREN
    (59) expresion -> . exp expresion1
    (27) exp -> . termino exp1
    (31) termino -> . factor termino1
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . factor1 varcte
    (48) factor1 -> . PLUS
    (49) factor1 -> . MINUS
    (50) factor1 -> . epsilon
    (117) epsilon -> .

    INPUT           shift and go to state 185
    LPAREN          shift and go to state 34
    PLUS            shift and go to state 36
    MINUS           shift and go to state 40
    ID              reduce using rule 117 (epsilon -> .)
    CTE_INT         reduce using rule 117 (epsilon -> .)
    CTE_FLOAT       reduce using rule 117 (epsilon -> .)
    CTE_STRING      reduce using rule 117 (epsilon -> .)
    TRUE            reduce using rule 117 (epsilon -> .)
    FALSE           reduce using rule 117 (epsilon -> .)

    expresion                      shift and go to state 33
    factor1                        shift and go to state 41
    epsilon                        shift and go to state 35
    termino                        shift and go to state 37
    exp                            shift and go to state 38
    factor                         shift and go to state 39

state 164

    (80) condicion -> IF LPAREN . expresion RPAREN bloque condicion1
    (59) expresion -> . exp expresion1
    (27) exp -> . termino exp1
    (31) termino -> . factor termino1
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . factor1 varcte
    (48) factor1 -> . PLUS
    (49) factor1 -> . MINUS
    (50) factor1 -> . epsilon
    (117) epsilon -> .

    LPAREN          shift and go to state 34
    PLUS            shift and go to state 36
    MINUS           shift and go to state 40
    ID              reduce using rule 117 (epsilon -> .)
    CTE_INT         reduce using rule 117 (epsilon -> .)
    CTE_FLOAT       reduce using rule 117 (epsilon -> .)
    CTE_STRING      reduce using rule 117 (epsilon -> .)
    TRUE            reduce using rule 117 (epsilon -> .)
    FALSE           reduce using rule 117 (epsilon -> .)

    expresion                      shift and go to state 186
    factor1                        shift and go to state 41
    epsilon                        shift and go to state 35
    exp                            shift and go to state 38
    factor                         shift and go to state 39
    termino                        shift and go to state 37

state 165

    (113) comentario -> POUND varcte . comentario1
    (115) comentario1 -> . varcte comentario1
    (116) comentario1 -> . epsilon
    (68) varcte -> . ID
    (69) varcte -> . CTE_INT
    (70) varcte -> . CTE_FLOAT
    (71) varcte -> . CTE_STRING
    (72) varcte -> . cte_bool
    (117) epsilon -> .
    (73) cte_bool -> . TRUE
    (74) cte_bool -> . FALSE

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 73
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 69
    CTE_STRING      shift and go to state 67
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    INT             reduce using rule 117 (epsilon -> .)
    FLOAT           reduce using rule 117 (epsilon -> .)
    BOOL            reduce using rule 117 (epsilon -> .)
    STRING          reduce using rule 117 (epsilon -> .)
    RETURN          reduce using rule 117 (epsilon -> .)
    RCURL           reduce using rule 117 (epsilon -> .)
    CASE            reduce using rule 117 (epsilon -> .)
    DEFAULT         reduce using rule 117 (epsilon -> .)
    TRUE            shift and go to state 72
    FALSE           shift and go to state 68

  ! ID              [ reduce using rule 117 (epsilon -> .) ]

    epsilon                        shift and go to state 182
    cte_bool                       shift and go to state 70
    varcte                         shift and go to state 181
    comentario1                    shift and go to state 187

state 166

    (45) while -> WHILE LPAREN . expresion RPAREN bloque
    (59) expresion -> . exp expresion1
    (27) exp -> . termino exp1
    (31) termino -> . factor termino1
    (46) factor -> . LPAREN expresion RPAREN
    (47) factor -> . factor1 varcte
    (48) factor1 -> . PLUS
    (49) factor1 -> . MINUS
    (50) factor1 -> . epsilon
    (117) epsilon -> .

    LPAREN          shift and go to state 34
    PLUS            shift and go to state 36
    MINUS           shift and go to state 40
    ID              reduce using rule 117 (epsilon -> .)
    CTE_INT         reduce using rule 117 (epsilon -> .)
    CTE_FLOAT       reduce using rule 117 (epsilon -> .)
    CTE_STRING      reduce using rule 117 (epsilon -> .)
    TRUE            reduce using rule 117 (epsilon -> .)
    FALSE           reduce using rule 117 (epsilon -> .)

    expresion                      shift and go to state 188
    factor1                        shift and go to state 41
    epsilon                        shift and go to state 35
    termino                        shift and go to state 37
    exp                            shift and go to state 38
    factor                         shift and go to state 39

state 167

    (100) funcion5 -> MAIN LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 . RCURL

    RCURL           shift and go to state 189


state 168

    (99) funcion5 -> ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 . RCURL

    RCURL           shift and go to state 190


state 169

    (43) main2 -> estatuto . main2
    (43) main2 -> . estatuto main2
    (44) main2 -> . epsilon
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (117) epsilon -> .
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    RCURL           reduce using rule 117 (epsilon -> .)
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    comentario                     shift and go to state 132
    for                            shift and go to state 145
    estatuto                       shift and go to state 169
    switch                         shift and go to state 135
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    epsilon                        shift and go to state 170
    main2                          shift and go to state 191
    tipo                           shift and go to state 133
    asignacion                     shift and go to state 146
    while                          shift and go to state 148

state 170

    (44) main2 -> epsilon .

    RCURL           reduce using rule 44 (main2 -> epsilon .)


state 171

    (40) main -> FUNCTION VOID MAIN LPAREN RPAREN LCURL main1 estatuto main2 . RCURL

    RCURL           shift and go to state 192


state 172

    (16) parametros2 -> tipo parametros1 ID . COMMA parametros2

    COMMA           shift and go to state 193


state 173

    (17) parametros2 -> LIST parametros1 ID . COMMA parametros2

    COMMA           shift and go to state 194


state 174

    (75) print -> PRINT LPAREN print1 . RPAREN

    RPAREN          shift and go to state 195


state 175

    (76) print1 -> CTE_STRING . print2
    (78) print2 -> . epsilon
    (79) print2 -> . PLUS print1
    (117) epsilon -> .

    PLUS            shift and go to state 198
    RPAREN          reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 196
    print2                         shift and go to state 197

state 176

    (77) print1 -> ID . print2
    (78) print2 -> . epsilon
    (79) print2 -> . PLUS print1
    (117) epsilon -> .

    PLUS            shift and go to state 198
    RPAREN          reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 196
    print2                         shift and go to state 199

state 177

    (87) input -> tipo ID EQUALS . INPUT LPAREN input1 RPAREN

    INPUT           shift and go to state 200


state 178

    (98) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN . ID RCURL

    ID              shift and go to state 201


state 179

    (104) funcion2 -> estatuto funcion2 .

    RETURN          reduce using rule 104 (funcion2 -> estatuto funcion2 .)
    RCURL           reduce using rule 104 (funcion2 -> estatuto funcion2 .)


state 180

    (107) switch -> SWITCH varcte LCURL . CASE COLON switch3 switch1 switch2 RCURL

    CASE            shift and go to state 202


state 181

    (115) comentario1 -> varcte . comentario1
    (115) comentario1 -> . varcte comentario1
    (116) comentario1 -> . epsilon
    (68) varcte -> . ID
    (69) varcte -> . CTE_INT
    (70) varcte -> . CTE_FLOAT
    (71) varcte -> . CTE_STRING
    (72) varcte -> . cte_bool
    (117) epsilon -> .
    (73) cte_bool -> . TRUE
    (74) cte_bool -> . FALSE

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 73
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 69
    CTE_STRING      shift and go to state 67
    TIMES           reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    INT             reduce using rule 117 (epsilon -> .)
    FLOAT           reduce using rule 117 (epsilon -> .)
    BOOL            reduce using rule 117 (epsilon -> .)
    STRING          reduce using rule 117 (epsilon -> .)
    RETURN          reduce using rule 117 (epsilon -> .)
    RCURL           reduce using rule 117 (epsilon -> .)
    CASE            reduce using rule 117 (epsilon -> .)
    DEFAULT         reduce using rule 117 (epsilon -> .)
    TRUE            shift and go to state 72
    FALSE           shift and go to state 68

  ! ID              [ reduce using rule 117 (epsilon -> .) ]

    epsilon                        shift and go to state 182
    cte_bool                       shift and go to state 70
    varcte                         shift and go to state 181
    comentario1                    shift and go to state 203

state 182

    (116) comentario1 -> epsilon .

    ID              reduce using rule 116 (comentario1 -> epsilon .)
    POUND           reduce using rule 116 (comentario1 -> epsilon .)
    DIVIDE          reduce using rule 116 (comentario1 -> epsilon .)
    PRINT           reduce using rule 116 (comentario1 -> epsilon .)
    IF              reduce using rule 116 (comentario1 -> epsilon .)
    SWITCH          reduce using rule 116 (comentario1 -> epsilon .)
    WHILE           reduce using rule 116 (comentario1 -> epsilon .)
    FOR             reduce using rule 116 (comentario1 -> epsilon .)
    INT             reduce using rule 116 (comentario1 -> epsilon .)
    FLOAT           reduce using rule 116 (comentario1 -> epsilon .)
    BOOL            reduce using rule 116 (comentario1 -> epsilon .)
    STRING          reduce using rule 116 (comentario1 -> epsilon .)
    RETURN          reduce using rule 116 (comentario1 -> epsilon .)
    RCURL           reduce using rule 116 (comentario1 -> epsilon .)
    CASE            reduce using rule 116 (comentario1 -> epsilon .)
    DEFAULT         reduce using rule 116 (comentario1 -> epsilon .)
    TIMES           reduce using rule 116 (comentario1 -> epsilon .)


state 183

    (114) comentario -> DIVIDE TIMES comentario1 . TIMES DIVIDE

    TIMES           shift and go to state 204


state 184

    (91) for -> FOR CTE_INT TO . CTE_INT BY LPAREN for1 CTE_INT RPAREN

    CTE_INT         shift and go to state 205


state 185

    (88) input -> ID EQUALS INPUT . LPAREN input1 RPAREN

    LPAREN          shift and go to state 206


state 186

    (80) condicion -> IF LPAREN expresion . RPAREN bloque condicion1

    RPAREN          shift and go to state 207


state 187

    (113) comentario -> POUND varcte comentario1 .

    ID              reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    POUND           reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    DIVIDE          reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    PRINT           reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    IF              reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    SWITCH          reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    WHILE           reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    FOR             reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    INT             reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    FLOAT           reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    BOOL            reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    STRING          reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    RCURL           reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    RETURN          reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    CASE            reduce using rule 113 (comentario -> POUND varcte comentario1 .)
    DEFAULT         reduce using rule 113 (comentario -> POUND varcte comentario1 .)


state 188

    (45) while -> WHILE LPAREN expresion . RPAREN bloque

    RPAREN          shift and go to state 208


state 189

    (100) funcion5 -> MAIN LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL .

    FUNCTION        reduce using rule 100 (funcion5 -> MAIN LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL .)


state 190

    (99) funcion5 -> ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL .

    FUNCTION        reduce using rule 99 (funcion5 -> ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RCURL .)


state 191

    (43) main2 -> estatuto main2 .

    RCURL           reduce using rule 43 (main2 -> estatuto main2 .)


state 192

    (40) main -> FUNCTION VOID MAIN LPAREN RPAREN LCURL main1 estatuto main2 RCURL .

    END             reduce using rule 40 (main -> FUNCTION VOID MAIN LPAREN RPAREN LCURL main1 estatuto main2 RCURL .)


state 193

    (16) parametros2 -> tipo parametros1 ID COMMA . parametros2
    (16) parametros2 -> . tipo parametros1 ID COMMA parametros2
    (17) parametros2 -> . LIST parametros1 ID COMMA parametros2
    (18) parametros2 -> . epsilon
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING
    (117) epsilon -> .

    LIST            shift and go to state 127
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5
    RPAREN          reduce using rule 117 (epsilon -> .)

    parametros2                    shift and go to state 209
    tipo                           shift and go to state 125
    epsilon                        shift and go to state 128

state 194

    (17) parametros2 -> LIST parametros1 ID COMMA . parametros2
    (16) parametros2 -> . tipo parametros1 ID COMMA parametros2
    (17) parametros2 -> . LIST parametros1 ID COMMA parametros2
    (18) parametros2 -> . epsilon
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING
    (117) epsilon -> .

    LIST            shift and go to state 127
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5
    RPAREN          reduce using rule 117 (epsilon -> .)

    parametros2                    shift and go to state 210
    tipo                           shift and go to state 125
    epsilon                        shift and go to state 128

state 195

    (75) print -> PRINT LPAREN print1 RPAREN .

    ID              reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    POUND           reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    DIVIDE          reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    PRINT           reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    IF              reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    SWITCH          reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    WHILE           reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    FOR             reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    INT             reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    FLOAT           reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    BOOL            reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    STRING          reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    RCURL           reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    RETURN          reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    CASE            reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)
    DEFAULT         reduce using rule 75 (print -> PRINT LPAREN print1 RPAREN .)


state 196

    (78) print2 -> epsilon .

    RPAREN          reduce using rule 78 (print2 -> epsilon .)


state 197

    (76) print1 -> CTE_STRING print2 .

    RPAREN          reduce using rule 76 (print1 -> CTE_STRING print2 .)


state 198

    (79) print2 -> PLUS . print1
    (76) print1 -> . CTE_STRING print2
    (77) print1 -> . ID print2

    CTE_STRING      shift and go to state 175
    ID              shift and go to state 176

    print1                         shift and go to state 211

state 199

    (77) print1 -> ID print2 .

    RPAREN          reduce using rule 77 (print1 -> ID print2 .)


state 200

    (87) input -> tipo ID EQUALS INPUT . LPAREN input1 RPAREN

    LPAREN          shift and go to state 212


state 201

    (98) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID . RCURL

    RCURL           shift and go to state 213


state 202

    (107) switch -> SWITCH varcte LCURL CASE . COLON switch3 switch1 switch2 RCURL

    COLON           shift and go to state 214


state 203

    (115) comentario1 -> varcte comentario1 .

    ID              reduce using rule 115 (comentario1 -> varcte comentario1 .)
    POUND           reduce using rule 115 (comentario1 -> varcte comentario1 .)
    DIVIDE          reduce using rule 115 (comentario1 -> varcte comentario1 .)
    PRINT           reduce using rule 115 (comentario1 -> varcte comentario1 .)
    IF              reduce using rule 115 (comentario1 -> varcte comentario1 .)
    SWITCH          reduce using rule 115 (comentario1 -> varcte comentario1 .)
    WHILE           reduce using rule 115 (comentario1 -> varcte comentario1 .)
    FOR             reduce using rule 115 (comentario1 -> varcte comentario1 .)
    INT             reduce using rule 115 (comentario1 -> varcte comentario1 .)
    FLOAT           reduce using rule 115 (comentario1 -> varcte comentario1 .)
    BOOL            reduce using rule 115 (comentario1 -> varcte comentario1 .)
    STRING          reduce using rule 115 (comentario1 -> varcte comentario1 .)
    RETURN          reduce using rule 115 (comentario1 -> varcte comentario1 .)
    RCURL           reduce using rule 115 (comentario1 -> varcte comentario1 .)
    CASE            reduce using rule 115 (comentario1 -> varcte comentario1 .)
    DEFAULT         reduce using rule 115 (comentario1 -> varcte comentario1 .)
    TIMES           reduce using rule 115 (comentario1 -> varcte comentario1 .)


state 204

    (114) comentario -> DIVIDE TIMES comentario1 TIMES . DIVIDE

    DIVIDE          shift and go to state 215


state 205

    (91) for -> FOR CTE_INT TO CTE_INT . BY LPAREN for1 CTE_INT RPAREN

    BY              shift and go to state 216


state 206

    (88) input -> ID EQUALS INPUT LPAREN . input1 RPAREN
    (89) input1 -> . CTE_STRING
    (90) input1 -> . epsilon
    (117) epsilon -> .

    CTE_STRING      shift and go to state 217
    RPAREN          reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 219
    input1                         shift and go to state 218

state 207

    (80) condicion -> IF LPAREN expresion RPAREN . bloque condicion1
    (24) bloque -> . LCURL bloque1 RCURL

    LCURL           shift and go to state 221

    bloque                         shift and go to state 220

state 208

    (45) while -> WHILE LPAREN expresion RPAREN . bloque
    (24) bloque -> . LCURL bloque1 RCURL

    LCURL           shift and go to state 221

    bloque                         shift and go to state 222

state 209

    (16) parametros2 -> tipo parametros1 ID COMMA parametros2 .

    RPAREN          reduce using rule 16 (parametros2 -> tipo parametros1 ID COMMA parametros2 .)


state 210

    (17) parametros2 -> LIST parametros1 ID COMMA parametros2 .

    RPAREN          reduce using rule 17 (parametros2 -> LIST parametros1 ID COMMA parametros2 .)


state 211

    (79) print2 -> PLUS print1 .

    RPAREN          reduce using rule 79 (print2 -> PLUS print1 .)


state 212

    (87) input -> tipo ID EQUALS INPUT LPAREN . input1 RPAREN
    (89) input1 -> . CTE_STRING
    (90) input1 -> . epsilon
    (117) epsilon -> .

    CTE_STRING      shift and go to state 217
    RPAREN          reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 219
    input1                         shift and go to state 223

state 213

    (98) funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL .

    FUNCTION        reduce using rule 98 (funcion4 -> tipo ID LPAREN funcion3 RPAREN LCURL funcion1 estatuto funcion2 RETURN ID RCURL .)


state 214

    (107) switch -> SWITCH varcte LCURL CASE COLON . switch3 switch1 switch2 RCURL
    (111) switch3 -> . PASS
    (112) switch3 -> . estatuto
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    PASS            shift and go to state 225
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    asignacion                     shift and go to state 146
    switch3                        shift and go to state 226
    estatuto                       shift and go to state 224
    tipo                           shift and go to state 133
    while                          shift and go to state 148
    for                            shift and go to state 145
    switch                         shift and go to state 135
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    comentario                     shift and go to state 132

state 215

    (114) comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .

    ID              reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    POUND           reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    DIVIDE          reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    PRINT           reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    IF              reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    SWITCH          reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    WHILE           reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    FOR             reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    INT             reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    FLOAT           reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    BOOL            reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    STRING          reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    RCURL           reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    RETURN          reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    CASE            reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)
    DEFAULT         reduce using rule 114 (comentario -> DIVIDE TIMES comentario1 TIMES DIVIDE .)


state 216

    (91) for -> FOR CTE_INT TO CTE_INT BY . LPAREN for1 CTE_INT RPAREN

    LPAREN          shift and go to state 227


state 217

    (89) input1 -> CTE_STRING .

    RPAREN          reduce using rule 89 (input1 -> CTE_STRING .)


state 218

    (88) input -> ID EQUALS INPUT LPAREN input1 . RPAREN

    RPAREN          shift and go to state 228


state 219

    (90) input1 -> epsilon .

    RPAREN          reduce using rule 90 (input1 -> epsilon .)


state 220

    (80) condicion -> IF LPAREN expresion RPAREN bloque . condicion1
    (81) condicion1 -> . condicion2
    (82) condicion1 -> . ELSEIF condicion3 condicion1
    (83) condicion1 -> . epsilon
    (84) condicion2 -> . ELSE condicion3
    (117) epsilon -> .

    ELSEIF          shift and go to state 233
    ELSE            shift and go to state 231
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    INT             reduce using rule 117 (epsilon -> .)
    FLOAT           reduce using rule 117 (epsilon -> .)
    BOOL            reduce using rule 117 (epsilon -> .)
    STRING          reduce using rule 117 (epsilon -> .)
    RETURN          reduce using rule 117 (epsilon -> .)
    RCURL           reduce using rule 117 (epsilon -> .)
    CASE            reduce using rule 117 (epsilon -> .)
    DEFAULT         reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 230
    condicion1                     shift and go to state 232
    condicion2                     shift and go to state 229

state 221

    (24) bloque -> LCURL . bloque1 RCURL
    (25) bloque1 -> . estatuto bloque1
    (26) bloque1 -> . epsilon
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (117) epsilon -> .
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    RCURL           reduce using rule 117 (epsilon -> .)
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    comentario                     shift and go to state 132
    for                            shift and go to state 145
    estatuto                       shift and go to state 234
    switch                         shift and go to state 135
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    epsilon                        shift and go to state 235
    bloque1                        shift and go to state 236
    tipo                           shift and go to state 133
    asignacion                     shift and go to state 146
    while                          shift and go to state 148

state 222

    (45) while -> WHILE LPAREN expresion RPAREN bloque .

    ID              reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    POUND           reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    DIVIDE          reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    PRINT           reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    IF              reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    SWITCH          reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    WHILE           reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    FOR             reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    INT             reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    FLOAT           reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    BOOL            reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    STRING          reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    RCURL           reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    RETURN          reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    CASE            reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)
    DEFAULT         reduce using rule 45 (while -> WHILE LPAREN expresion RPAREN bloque .)


state 223

    (87) input -> tipo ID EQUALS INPUT LPAREN input1 . RPAREN

    RPAREN          shift and go to state 237


state 224

    (112) switch3 -> estatuto .

    CASE            reduce using rule 112 (switch3 -> estatuto .)
    DEFAULT         reduce using rule 112 (switch3 -> estatuto .)
    RCURL           reduce using rule 112 (switch3 -> estatuto .)


state 225

    (111) switch3 -> PASS .

    CASE            reduce using rule 111 (switch3 -> PASS .)
    DEFAULT         reduce using rule 111 (switch3 -> PASS .)
    RCURL           reduce using rule 111 (switch3 -> PASS .)


state 226

    (107) switch -> SWITCH varcte LCURL CASE COLON switch3 . switch1 switch2 RCURL
    (108) switch1 -> . epsilon
    (109) switch1 -> . CASE COLON switch3 switch1
    (117) epsilon -> .

    CASE            shift and go to state 238
    DEFAULT         reduce using rule 117 (epsilon -> .)

    switch1                        shift and go to state 239
    epsilon                        shift and go to state 240

state 227

    (91) for -> FOR CTE_INT TO CTE_INT BY LPAREN . for1 CTE_INT RPAREN
    (92) for1 -> . PLUS
    (93) for1 -> . TIMES
    (94) for1 -> . DIVIDE
    (95) for1 -> . MINUS

    PLUS            shift and go to state 243
    TIMES           shift and go to state 242
    DIVIDE          shift and go to state 241
    MINUS           shift and go to state 245

    for1                           shift and go to state 244

state 228

    (88) input -> ID EQUALS INPUT LPAREN input1 RPAREN .

    ID              reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    POUND           reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    DIVIDE          reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    PRINT           reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    IF              reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    SWITCH          reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    WHILE           reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    FOR             reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    INT             reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    FLOAT           reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    BOOL            reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    STRING          reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    RETURN          reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    RCURL           reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    CASE            reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)
    DEFAULT         reduce using rule 88 (input -> ID EQUALS INPUT LPAREN input1 RPAREN .)


state 229

    (81) condicion1 -> condicion2 .

    ID              reduce using rule 81 (condicion1 -> condicion2 .)
    POUND           reduce using rule 81 (condicion1 -> condicion2 .)
    DIVIDE          reduce using rule 81 (condicion1 -> condicion2 .)
    PRINT           reduce using rule 81 (condicion1 -> condicion2 .)
    IF              reduce using rule 81 (condicion1 -> condicion2 .)
    SWITCH          reduce using rule 81 (condicion1 -> condicion2 .)
    WHILE           reduce using rule 81 (condicion1 -> condicion2 .)
    FOR             reduce using rule 81 (condicion1 -> condicion2 .)
    INT             reduce using rule 81 (condicion1 -> condicion2 .)
    FLOAT           reduce using rule 81 (condicion1 -> condicion2 .)
    BOOL            reduce using rule 81 (condicion1 -> condicion2 .)
    STRING          reduce using rule 81 (condicion1 -> condicion2 .)
    RETURN          reduce using rule 81 (condicion1 -> condicion2 .)
    RCURL           reduce using rule 81 (condicion1 -> condicion2 .)
    CASE            reduce using rule 81 (condicion1 -> condicion2 .)
    DEFAULT         reduce using rule 81 (condicion1 -> condicion2 .)


state 230

    (83) condicion1 -> epsilon .

    ID              reduce using rule 83 (condicion1 -> epsilon .)
    POUND           reduce using rule 83 (condicion1 -> epsilon .)
    DIVIDE          reduce using rule 83 (condicion1 -> epsilon .)
    PRINT           reduce using rule 83 (condicion1 -> epsilon .)
    IF              reduce using rule 83 (condicion1 -> epsilon .)
    SWITCH          reduce using rule 83 (condicion1 -> epsilon .)
    WHILE           reduce using rule 83 (condicion1 -> epsilon .)
    FOR             reduce using rule 83 (condicion1 -> epsilon .)
    INT             reduce using rule 83 (condicion1 -> epsilon .)
    FLOAT           reduce using rule 83 (condicion1 -> epsilon .)
    BOOL            reduce using rule 83 (condicion1 -> epsilon .)
    STRING          reduce using rule 83 (condicion1 -> epsilon .)
    RETURN          reduce using rule 83 (condicion1 -> epsilon .)
    RCURL           reduce using rule 83 (condicion1 -> epsilon .)
    CASE            reduce using rule 83 (condicion1 -> epsilon .)
    DEFAULT         reduce using rule 83 (condicion1 -> epsilon .)


state 231

    (84) condicion2 -> ELSE . condicion3
    (85) condicion3 -> . bloque
    (86) condicion3 -> . PASS
    (24) bloque -> . LCURL bloque1 RCURL

    PASS            shift and go to state 246
    LCURL           shift and go to state 221

    bloque                         shift and go to state 248
    condicion3                     shift and go to state 247

state 232

    (80) condicion -> IF LPAREN expresion RPAREN bloque condicion1 .

    ID              reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    POUND           reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    DIVIDE          reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    PRINT           reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    IF              reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    SWITCH          reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    WHILE           reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    FOR             reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    INT             reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    FLOAT           reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    BOOL            reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    STRING          reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    RETURN          reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    RCURL           reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    CASE            reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)
    DEFAULT         reduce using rule 80 (condicion -> IF LPAREN expresion RPAREN bloque condicion1 .)


state 233

    (82) condicion1 -> ELSEIF . condicion3 condicion1
    (85) condicion3 -> . bloque
    (86) condicion3 -> . PASS
    (24) bloque -> . LCURL bloque1 RCURL

    PASS            shift and go to state 246
    LCURL           shift and go to state 221

    bloque                         shift and go to state 248
    condicion3                     shift and go to state 249

state 234

    (25) bloque1 -> estatuto . bloque1
    (25) bloque1 -> . estatuto bloque1
    (26) bloque1 -> . epsilon
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (117) epsilon -> .
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    RCURL           reduce using rule 117 (epsilon -> .)
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    comentario                     shift and go to state 132
    for                            shift and go to state 145
    estatuto                       shift and go to state 234
    switch                         shift and go to state 135
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    epsilon                        shift and go to state 235
    bloque1                        shift and go to state 250
    tipo                           shift and go to state 133
    asignacion                     shift and go to state 146
    while                          shift and go to state 148

state 235

    (26) bloque1 -> epsilon .

    RCURL           reduce using rule 26 (bloque1 -> epsilon .)


state 236

    (24) bloque -> LCURL bloque1 . RCURL

    RCURL           shift and go to state 251


state 237

    (87) input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .

    ID              reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    POUND           reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    DIVIDE          reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    PRINT           reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    IF              reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    SWITCH          reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    WHILE           reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    FOR             reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    INT             reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    FLOAT           reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    BOOL            reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    STRING          reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    RETURN          reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    RCURL           reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    CASE            reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)
    DEFAULT         reduce using rule 87 (input -> tipo ID EQUALS INPUT LPAREN input1 RPAREN .)


state 238

    (109) switch1 -> CASE . COLON switch3 switch1

    COLON           shift and go to state 252


state 239

    (107) switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 . switch2 RCURL
    (110) switch2 -> . DEFAULT COLON switch3

    DEFAULT         shift and go to state 254

    switch2                        shift and go to state 253

state 240

    (108) switch1 -> epsilon .

    DEFAULT         reduce using rule 108 (switch1 -> epsilon .)


state 241

    (94) for1 -> DIVIDE .

    CTE_INT         reduce using rule 94 (for1 -> DIVIDE .)


state 242

    (93) for1 -> TIMES .

    CTE_INT         reduce using rule 93 (for1 -> TIMES .)


state 243

    (92) for1 -> PLUS .

    CTE_INT         reduce using rule 92 (for1 -> PLUS .)


state 244

    (91) for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 . CTE_INT RPAREN

    CTE_INT         shift and go to state 255


state 245

    (95) for1 -> MINUS .

    CTE_INT         reduce using rule 95 (for1 -> MINUS .)


state 246

    (86) condicion3 -> PASS .

    ELSEIF          reduce using rule 86 (condicion3 -> PASS .)
    ELSE            reduce using rule 86 (condicion3 -> PASS .)
    ID              reduce using rule 86 (condicion3 -> PASS .)
    POUND           reduce using rule 86 (condicion3 -> PASS .)
    DIVIDE          reduce using rule 86 (condicion3 -> PASS .)
    PRINT           reduce using rule 86 (condicion3 -> PASS .)
    IF              reduce using rule 86 (condicion3 -> PASS .)
    SWITCH          reduce using rule 86 (condicion3 -> PASS .)
    WHILE           reduce using rule 86 (condicion3 -> PASS .)
    FOR             reduce using rule 86 (condicion3 -> PASS .)
    INT             reduce using rule 86 (condicion3 -> PASS .)
    FLOAT           reduce using rule 86 (condicion3 -> PASS .)
    BOOL            reduce using rule 86 (condicion3 -> PASS .)
    STRING          reduce using rule 86 (condicion3 -> PASS .)
    RETURN          reduce using rule 86 (condicion3 -> PASS .)
    RCURL           reduce using rule 86 (condicion3 -> PASS .)
    CASE            reduce using rule 86 (condicion3 -> PASS .)
    DEFAULT         reduce using rule 86 (condicion3 -> PASS .)


state 247

    (84) condicion2 -> ELSE condicion3 .

    ID              reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    POUND           reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    DIVIDE          reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    PRINT           reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    IF              reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    SWITCH          reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    WHILE           reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    FOR             reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    INT             reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    FLOAT           reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    BOOL            reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    STRING          reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    RETURN          reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    RCURL           reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    CASE            reduce using rule 84 (condicion2 -> ELSE condicion3 .)
    DEFAULT         reduce using rule 84 (condicion2 -> ELSE condicion3 .)


state 248

    (85) condicion3 -> bloque .

    ELSEIF          reduce using rule 85 (condicion3 -> bloque .)
    ELSE            reduce using rule 85 (condicion3 -> bloque .)
    ID              reduce using rule 85 (condicion3 -> bloque .)
    POUND           reduce using rule 85 (condicion3 -> bloque .)
    DIVIDE          reduce using rule 85 (condicion3 -> bloque .)
    PRINT           reduce using rule 85 (condicion3 -> bloque .)
    IF              reduce using rule 85 (condicion3 -> bloque .)
    SWITCH          reduce using rule 85 (condicion3 -> bloque .)
    WHILE           reduce using rule 85 (condicion3 -> bloque .)
    FOR             reduce using rule 85 (condicion3 -> bloque .)
    INT             reduce using rule 85 (condicion3 -> bloque .)
    FLOAT           reduce using rule 85 (condicion3 -> bloque .)
    BOOL            reduce using rule 85 (condicion3 -> bloque .)
    STRING          reduce using rule 85 (condicion3 -> bloque .)
    RETURN          reduce using rule 85 (condicion3 -> bloque .)
    RCURL           reduce using rule 85 (condicion3 -> bloque .)
    CASE            reduce using rule 85 (condicion3 -> bloque .)
    DEFAULT         reduce using rule 85 (condicion3 -> bloque .)


state 249

    (82) condicion1 -> ELSEIF condicion3 . condicion1
    (81) condicion1 -> . condicion2
    (82) condicion1 -> . ELSEIF condicion3 condicion1
    (83) condicion1 -> . epsilon
    (84) condicion2 -> . ELSE condicion3
    (117) epsilon -> .

    ELSEIF          shift and go to state 233
    ELSE            shift and go to state 231
    ID              reduce using rule 117 (epsilon -> .)
    POUND           reduce using rule 117 (epsilon -> .)
    DIVIDE          reduce using rule 117 (epsilon -> .)
    PRINT           reduce using rule 117 (epsilon -> .)
    IF              reduce using rule 117 (epsilon -> .)
    SWITCH          reduce using rule 117 (epsilon -> .)
    WHILE           reduce using rule 117 (epsilon -> .)
    FOR             reduce using rule 117 (epsilon -> .)
    INT             reduce using rule 117 (epsilon -> .)
    FLOAT           reduce using rule 117 (epsilon -> .)
    BOOL            reduce using rule 117 (epsilon -> .)
    STRING          reduce using rule 117 (epsilon -> .)
    RETURN          reduce using rule 117 (epsilon -> .)
    RCURL           reduce using rule 117 (epsilon -> .)
    CASE            reduce using rule 117 (epsilon -> .)
    DEFAULT         reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 230
    condicion1                     shift and go to state 256
    condicion2                     shift and go to state 229

state 250

    (25) bloque1 -> estatuto bloque1 .

    RCURL           reduce using rule 25 (bloque1 -> estatuto bloque1 .)


state 251

    (24) bloque -> LCURL bloque1 RCURL .

    ELSEIF          reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    ELSE            reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    ID              reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    POUND           reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    DIVIDE          reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    PRINT           reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    IF              reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    SWITCH          reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    WHILE           reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    FOR             reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    INT             reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    FLOAT           reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    BOOL            reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    STRING          reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    RETURN          reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    RCURL           reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    CASE            reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)
    DEFAULT         reduce using rule 24 (bloque -> LCURL bloque1 RCURL .)


state 252

    (109) switch1 -> CASE COLON . switch3 switch1
    (111) switch3 -> . PASS
    (112) switch3 -> . estatuto
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    PASS            shift and go to state 225
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    for                            shift and go to state 145
    asignacion                     shift and go to state 146
    switch3                        shift and go to state 257
    estatuto                       shift and go to state 224
    tipo                           shift and go to state 133
    while                          shift and go to state 148
    switch                         shift and go to state 135
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    comentario                     shift and go to state 132

state 253

    (107) switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 . RCURL

    RCURL           shift and go to state 258


state 254

    (110) switch2 -> DEFAULT . COLON switch3

    COLON           shift and go to state 259


state 255

    (91) for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT . RPAREN

    RPAREN          shift and go to state 260


state 256

    (82) condicion1 -> ELSEIF condicion3 condicion1 .

    ID              reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    POUND           reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    DIVIDE          reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    PRINT           reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    IF              reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    SWITCH          reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    WHILE           reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    FOR             reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    INT             reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    FLOAT           reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    BOOL            reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    STRING          reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    RETURN          reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    RCURL           reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    CASE            reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)
    DEFAULT         reduce using rule 82 (condicion1 -> ELSEIF condicion3 condicion1 .)


state 257

    (109) switch1 -> CASE COLON switch3 . switch1
    (108) switch1 -> . epsilon
    (109) switch1 -> . CASE COLON switch3 switch1
    (117) epsilon -> .

    CASE            shift and go to state 238
    DEFAULT         reduce using rule 117 (epsilon -> .)

    epsilon                        shift and go to state 240
    switch1                        shift and go to state 261

state 258

    (107) switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .

    ID              reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    POUND           reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    DIVIDE          reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    PRINT           reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    IF              reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    SWITCH          reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    WHILE           reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    FOR             reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    INT             reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    FLOAT           reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    BOOL            reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    STRING          reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    RCURL           reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    CASE            reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    DEFAULT         reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)
    RETURN          reduce using rule 107 (switch -> SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL .)


state 259

    (110) switch2 -> DEFAULT COLON . switch3
    (111) switch3 -> . PASS
    (112) switch3 -> . estatuto
    (51) estatuto -> . asignacion
    (52) estatuto -> . comentario
    (53) estatuto -> . print
    (54) estatuto -> . input
    (55) estatuto -> . condicion
    (56) estatuto -> . switch
    (57) estatuto -> . while
    (58) estatuto -> . for
    (19) asignacion -> . ID EQUALS expresion
    (113) comentario -> . POUND varcte comentario1
    (114) comentario -> . DIVIDE TIMES comentario1 TIMES DIVIDE
    (75) print -> . PRINT LPAREN print1 RPAREN
    (87) input -> . tipo ID EQUALS INPUT LPAREN input1 RPAREN
    (88) input -> . ID EQUALS INPUT LPAREN input1 RPAREN
    (80) condicion -> . IF LPAREN expresion RPAREN bloque condicion1
    (107) switch -> . SWITCH varcte LCURL CASE COLON switch3 switch1 switch2 RCURL
    (45) while -> . WHILE LPAREN expresion RPAREN bloque
    (91) for -> . FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN
    (20) tipo -> . INT
    (21) tipo -> . FLOAT
    (22) tipo -> . BOOL
    (23) tipo -> . STRING

    PASS            shift and go to state 225
    ID              shift and go to state 142
    POUND           shift and go to state 144
    DIVIDE          shift and go to state 140
    PRINT           shift and go to state 131
    IF              shift and go to state 143
    SWITCH          shift and go to state 136
    WHILE           shift and go to state 147
    FOR             shift and go to state 141
    INT             shift and go to state 11
    FLOAT           shift and go to state 4
    BOOL            shift and go to state 9
    STRING          shift and go to state 5

    for                            shift and go to state 145
    asignacion                     shift and go to state 146
    switch3                        shift and go to state 262
    estatuto                       shift and go to state 224
    tipo                           shift and go to state 133
    while                          shift and go to state 148
    switch                         shift and go to state 135
    condicion                      shift and go to state 137
    print                          shift and go to state 138
    input                          shift and go to state 139
    comentario                     shift and go to state 132

state 260

    (91) for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .

    ID              reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    POUND           reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    DIVIDE          reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    PRINT           reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    IF              reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    SWITCH          reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    WHILE           reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    FOR             reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    INT             reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    FLOAT           reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    BOOL            reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    STRING          reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    RCURL           reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    CASE            reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    DEFAULT         reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)
    RETURN          reduce using rule 91 (for -> FOR CTE_INT TO CTE_INT BY LPAREN for1 CTE_INT RPAREN .)


state 261

    (109) switch1 -> CASE COLON switch3 switch1 .

    DEFAULT         reduce using rule 109 (switch1 -> CASE COLON switch3 switch1 .)


state 262

    (110) switch2 -> DEFAULT COLON switch3 .

    RCURL           reduce using rule 110 (switch2 -> DEFAULT COLON switch3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 23 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for INT in state 111 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 111 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 111 resolved as shift
WARNING: shift/reduce conflict for STRING in state 111 resolved as shift
WARNING: shift/reduce conflict for INT in state 112 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 112 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 112 resolved as shift
WARNING: shift/reduce conflict for STRING in state 112 resolved as shift
WARNING: shift/reduce conflict for INT in state 113 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 113 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 113 resolved as shift
WARNING: shift/reduce conflict for STRING in state 113 resolved as shift
WARNING: shift/reduce conflict for INT in state 114 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 114 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 114 resolved as shift
WARNING: shift/reduce conflict for STRING in state 114 resolved as shift
WARNING: shift/reduce conflict for INT in state 118 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 118 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 118 resolved as shift
WARNING: shift/reduce conflict for STRING in state 118 resolved as shift
WARNING: shift/reduce conflict for INT in state 123 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 123 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 123 resolved as shift
WARNING: shift/reduce conflict for STRING in state 123 resolved as shift
WARNING: shift/reduce conflict for ID in state 165 resolved as shift
WARNING: shift/reduce conflict for ID in state 181 resolved as shift
